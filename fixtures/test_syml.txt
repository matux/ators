0x0000000100000000: __mh_execute_header (in test.dwarf) + 0

0x00000001000062e8: NSTextCheckingResult.groups(in:) (in test.dwarf) (Prelude.swift:27)

0x0000000100006458: main (in test.dwarf) (Prelude.swift:0)

0x0000000100006490: lazy protocol witness table accessor for type iosAppSwiftApp and conformance iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x00000001000064d4: type metadata accessor for UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x0000000100006524: protocol witness for Hashable.hashValue.getter in conformance UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x0000000100006530: protocol witness for Hashable.hash(into:) in conformance UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x0000000100006570: protocol witness for Hashable._rawHashValue(seed:) in conformance UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x00000001000065e0: protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000065ec: protocol witness for Hashable.hashValue.getter in conformance UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x0000000100006628: specialized static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:) (in test.dwarf) (<compiler-generated>:0)
0x0000000100006628: protocol witness for static _ObjectiveCBridgeable._forceBridgeFromObjectiveC(_:result:) in conformance UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x000000010000662c: specialized static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:) (in test.dwarf) (<compiler-generated>:0)
0x000000010000662c: protocol witness for static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:) in conformance UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x0000000100006630: protocol witness for static _ObjectiveCBridgeable._unconditionallyBridgeFromObjectiveC(_:) in conformance UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x0000000100006670: protocol witness for static Equatable.== infix(_:_:) in conformance UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x00000001000066f8: protocol witness for RawRepresentable.init(rawValue:) in conformance UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x000000010000673c: protocol witness for RawRepresentable.rawValue.getter in conformance UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x0000000100006764: protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x00000001000067d0: base witness table accessor for RawRepresentable in UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x00000001000067f4: base witness table accessor for _HasCustomAnyHashableRepresentation in UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x0000000100006818: base witness table accessor for Equatable in UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x000000010000683c: specialized static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000068bc: specialized static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000694c: lazy protocol witness table accessor for type UIApplicationLaunchOptionsKey and conformance UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x0000000100006988: initializeBufferWithCopyOfBuffer for ContentView (in test.dwarf) (<compiler-generated>:0)

0x00000001000069bc: destroy for ContentView (in test.dwarf) (<compiler-generated>:0)

0x00000001000069e4: initializeWithCopy for ContentView (in test.dwarf) (<compiler-generated>:0)

0x0000000100006a18: assignWithCopy for ContentView (in test.dwarf) (<compiler-generated>:0)

0x0000000100006a74: __swift_memcpy16_8 (in test.dwarf) (<compiler-generated>:0)

0x0000000100006a80: assignWithTake for ContentView (in test.dwarf) (<compiler-generated>:0)

0x0000000100006ac4: getEnumTagSinglePayload for ContentView (in test.dwarf) (<compiler-generated>:0)

0x0000000100006b0c: storeEnumTagSinglePayload for ContentView (in test.dwarf) (<compiler-generated>:0)

0x0000000100006b48: type metadata accessor for ContentView (in test.dwarf) (<compiler-generated>:0)

0x0000000100006b58: associated type witness table accessor for View.Body : View in ContentView (in test.dwarf) (<compiler-generated>:0)

0x0000000100006b68: specialized StringProtocol.matches(in:) (in test.dwarf) (Prelude.swift:16)

0x0000000100006ddc: protocol witness for static Equatable.== infix(_:_:) in conformance ExampleError (in test.dwarf) (<compiler-generated>:0)

0x0000000100006df0: protocol witness for Hashable.hashValue.getter in conformance ExampleError (in test.dwarf) (<compiler-generated>:0)

0x0000000100006e34: protocol witness for Hashable.hash(into:) in conformance ExampleError (in test.dwarf) (<compiler-generated>:0)

0x0000000100006e5c: protocol witness for Hashable._rawHashValue(seed:) in conformance ExampleError (in test.dwarf) (<compiler-generated>:0)

0x0000000100006e9c: protocol witness for Error._domain.getter in conformance ExampleError (in test.dwarf) (<compiler-generated>:0)

0x0000000100006ea0: protocol witness for Error._code.getter in conformance ExampleError (in test.dwarf) (<compiler-generated>:0)

0x0000000100006ea4: protocol witness for Error._userInfo.getter in conformance ExampleError (in test.dwarf) (<compiler-generated>:0)

0x0000000100006ea8: protocol witness for Error._getEmbeddedNSError() in conformance ExampleError (in test.dwarf) (<compiler-generated>:0)

0x0000000100006eac: closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:36)

0x00000001000078cc: closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:50)

0x0000000100007af4: closure #1 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:52)

0x0000000100008370: closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:56)

0x0000000100008454: closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:61)

0x0000000100009740: closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:62)

0x0000000100009810: closure #2 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:63)

0x0000000100009860: closure #3 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:64)

0x0000000100009930: closure #9 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:74)

0x0000000100009ae0: protocol witness for static View._makeView(view:inputs:) in conformance ContentView (in test.dwarf) (<compiler-generated>:0)

0x0000000100009ae4: protocol witness for static View._makeViewList(view:inputs:) in conformance ContentView (in test.dwarf) (<compiler-generated>:0)

0x0000000100009ae8: protocol witness for static View._viewListCount(inputs:) in conformance ContentView (in test.dwarf) (<compiler-generated>:0)

0x0000000100009b00: protocol witness for View.body.getter in conformance ContentView (in test.dwarf) (<compiler-generated>:0)

0x0000000100009c44: __swift_instantiateConcreteTypeFromMangledName (in test.dwarf) (<compiler-generated>:0)

0x0000000100009c80: outlined consume of Text.Storage (in test.dwarf) (<compiler-generated>:0)

0x0000000100009c90: specialized _dictionaryUpCast<A, B, C, D>(_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100009ff8: @nonobjc NSRegularExpression.init(pattern:options:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000a0b8: closure #1 in TextField<>.init(_:text:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000a0bc: closure #2 in TextField<>.init(_:text:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000a0c0: specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x000000010000a0cc: specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x000000010000a12c: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000a228: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000a350: lazy protocol witness table accessor for type ModifiedContent<TextField<Text>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B> (in test.dwarf) (<compiler-generated>:0)

0x000000010000a3e8: __swift_instantiateConcreteTypeFromMangledNameAbstract (in test.dwarf) (<compiler-generated>:0)

0x000000010000a494: key path setter for EnvironmentValues.textCase : EnvironmentValues, serialized (in test.dwarf) (<compiler-generated>:0)

0x000000010000a578: ContentView.restartIfValid(_:) (in test.dwarf) (<compiler-generated>:0)
0x000000010000a578: implicit closure #2 in implicit closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:47)
0x000000010000a578: partial apply for implicit closure #2 in implicit closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000a5a0: partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String) -> () (in test.dwarf) (<compiler-generated>:0)

0x000000010000a5c8: partial apply for closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000a5d0: outlined copy of Text.Storage (in test.dwarf) (<compiler-generated>:0)

0x000000010000a5e4: partial apply for closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000a5ec: lazy protocol witness table accessor for type String and conformance String (in test.dwarf) (<compiler-generated>:0)

0x000000010000a62c: lazy protocol witness table accessor for type RoundedBorderTextFieldStyle and conformance RoundedBorderTextFieldStyle (in test.dwarf) + 0

0x000000010000a69c: _keypath_setTm (in test.dwarf) + 0

0x000000010000a6cc: partial apply for closure #2 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000a6d8: partial apply for closure #3 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000a6e0: outlined init with take of ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, _ValueActionModifier<String>>, _PaddingLayout>, ScrollView<ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout>>)>>, _PaddingLayout> (in test.dwarf) + 0

0x000000010000a728: Example.outOfBounds(_:) (in test.dwarf) (<compiler-generated>:0)
0x000000010000a728: closure #4 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:67)
0x000000010000a728: partial apply for closure #4 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000a734: Example.incrementPastEndIndex(_:) (in test.dwarf) (<compiler-generated>:0)
0x000000010000a734: closure #5 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:68)
0x000000010000a734: partial apply for closure #5 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000a744: partial apply for closure #6 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000a758: Example.duplicateKeys(_:) (in test.dwarf) (<compiler-generated>:0)
0x000000010000a758: closure #7 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:72)
0x000000010000a758: partial apply for closure #7 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000a774: Example.divide(by:) (in test.dwarf) (<compiler-generated>:0)
0x000000010000a774: closure #8 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:73)
0x000000010000a774: partial apply for closure #8 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000a780: partial apply for closure #9 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000a7ac: partial apply for implicit closure #2 in implicit closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000a804: outlined consume of Data._Representation (in test.dwarf) (<compiler-generated>:0)

0x000000010000a848: specialized __RawDictionaryStorage.find<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000a8ac: specialized __RawDictionaryStorage.find<A>(_:hashValue:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000a98c: specialized _ArrayBuffer._getElementSlowPath(_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000ab8c: specialized _NativeDictionary.mutatingFind(_:isUnique:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000ac64: specialized _NativeDictionary.copy() (in test.dwarf) (<compiler-generated>:0)

0x000000010000ae20: specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000b150: specialized ContentView.restartIfValid(_:) (in test.dwarf) (ContentView.swift:23)

0x000000010000b364: specialized Dictionary.init(dictionaryLiteral:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000b480: specialized Example.logMessage() (in test.dwarf) (ContentView.swift:95)

0x000000010000b5f0: specialized Dictionary.init(dictionaryLiteral:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000b6ec: specialized Example.manualLogging() (in test.dwarf) (ContentView.swift:102)

0x000000010000ba00: specialized Example.implicitlyUnwrapped(_:) (in test.dwarf) (ContentView.swift:148)

0x000000010000bb1c: specialized Example.forceInvalidCast<A>(_:) (in test.dwarf) (ContentView.swift:153)

0x000000010000bc34: specialized Example.outOfBounds(_:) (in test.dwarf) (ContentView.swift:163)

0x000000010000bd00: specialized Example.incrementPastEndIndex(_:) (in test.dwarf) (ContentView.swift:168)

0x000000010000be38: specialized Example.outsideRepresentableRange(_:) (in test.dwarf) (ContentView.swift:173)

0x000000010000bf50: specialized Dictionary.init(dictionaryLiteral:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000c034: specialized Example.duplicateKeys(_:) (in test.dwarf) (ContentView.swift:178)

0x000000010000c290: specialized Example.divide(by:) (in test.dwarf) (ContentView.swift:189)

0x000000010000c36c: lazy protocol witness table accessor for type Int and conformance Int (in test.dwarf) (<compiler-generated>:0)

0x000000010000c3ac: lazy protocol witness table accessor for type ExampleError and conformance ExampleError (in test.dwarf) (<compiler-generated>:0)

0x000000010000c3ec: Example.logMessage() (in test.dwarf) (<compiler-generated>:0)
0x000000010000c3ec: implicit closure #2 in implicit closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:53)
0x000000010000c3ec: partial apply for implicit closure #2 in implicit closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000c3f0: Example.manualLogging() (in test.dwarf) (<compiler-generated>:0)
0x000000010000c3f0: implicit closure #4 in implicit closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:54)
0x000000010000c3f0: partial apply for implicit closure #4 in implicit closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000c3f8: partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000c404: _objectdestroyTm (in test.dwarf) + 0

0x000000010000c430: Example.implicitlyUnwrapped(_:) (in test.dwarf) (<compiler-generated>:0)
0x000000010000c430: closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (ContentView.swift:57)
0x000000010000c430: partial apply for closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in ContentView.body.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010000c43c: outlined destroy of VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, _ValueActionModifier<String>>, _PaddingLayout>, ScrollView<ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout>>)>> (in test.dwarf) + 0

0x000000010000c478: outlined consume of [A : B].Iterator._Variant<A, B> (in test.dwarf) (<compiler-generated>:0)

0x000000010000c488: outlined init with take of Any (in test.dwarf) (<compiler-generated>:0)

0x000000010000c498: __swift_destroy_boxed_opaque_existential_0 (in test.dwarf) (<compiler-generated>:0)

0x000000010000c4b8: outlined init with copy of VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, _ValueActionModifier<String>>, _PaddingLayout>, ScrollView<ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout>>)>> (in test.dwarf) + 0

0x000000010000c4fc: type metadata accessor for NSTextCheckingResult (in test.dwarf) (<compiler-generated>:0)

0x000000010000c534: __swift_memcpy1_1 (in test.dwarf) (<compiler-generated>:0)

0x000000010000c540: __swift_noop_void_return (in test.dwarf) (<compiler-generated>:0)

0x000000010000c544: getEnumTagSinglePayload for ExampleError (in test.dwarf) (<compiler-generated>:0)

0x000000010000c5d4: storeEnumTagSinglePayload for ExampleError (in test.dwarf) (<compiler-generated>:0)

0x000000010000c690: getEnumTag for ExampleError (in test.dwarf) (<compiler-generated>:0)

0x000000010000c698: destructiveProjectEnumData for ExampleError (in test.dwarf) (<compiler-generated>:0)

0x000000010000c69c: destructiveInjectEnumTag for ExampleError (in test.dwarf) (<compiler-generated>:0)

0x000000010000c6a4: type metadata accessor for ExampleError (in test.dwarf) (<compiler-generated>:0)

0x000000010000c6b4: type metadata accessor for Example (in test.dwarf) (<compiler-generated>:0)

0x000000010000c6f8: lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B> (in test.dwarf) + 0

0x000000010000c774: lazy protocol witness table accessor for type TextField<Text> and conformance TextField<A> (in test.dwarf) + 0

0x000000010000c7b0: base witness table accessor for Equatable in ExampleError (in test.dwarf) (<compiler-generated>:0)

0x000000010000c7b4: lazy protocol witness table accessor for type ExampleError and conformance ExampleError (in test.dwarf) (<compiler-generated>:0)

0x000000010000c7fc: closure #1 in iosAppSwiftApp.body.getter (in test.dwarf) (iosAppSwiftApp.swift:9)

0x000000010000c8b8: protocol witness for App.body.getter in conformance iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000c9c0: protocol witness for App.init() in conformance iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000c9e8: implicit closure #1 in AppDelegate.application(_:didFinishLaunchingWithOptions:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000ca4c: thunk for @escaping @callee_guaranteed (@guaranteed RollbarData) -> (@owned RollbarData) (in test.dwarf) (<compiler-generated>:0)

0x000000010000caa8: @objc AppDelegate.application(_:didFinishLaunchingWithOptions:) (in test.dwarf) (<compiler-generated>:0)

0x000000010000cb44: @objc AppDelegate.init() (in test.dwarf) (<compiler-generated>:0)

0x000000010000cbcc: AppDelegate.__deallocating_deinit (in test.dwarf) (iosAppSwiftApp.swift:15)

0x000000010000cbfc: @objc AppDelegate.__ivar_destroyer (in test.dwarf) (iosAppSwiftApp.swift:0)

0x000000010000cc0c: type metadata accessor for AppDelegate (in test.dwarf) (<compiler-generated>:0)

0x000000010000cc28: initializeBufferWithCopyOfBuffer for iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000cc68: destroy for iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000cca0: initializeWithCopy for iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000cce8: assignWithCopy for iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000cd30: initializeWithTake for iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000cd78: assignWithTake for iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000cdc0: getEnumTagSinglePayload for iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000ce0c: storeEnumTagSinglePayload for iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000ce5c: type metadata accessor for iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000ce94: type metadata completion function for iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000cef8: type metadata accessor for UIApplicationDelegateAdaptor<AppDelegate> (in test.dwarf) (<compiler-generated>:0)

0x000000010000cf44: associated type witness table accessor for App.Body : Scene in iosAppSwiftApp (in test.dwarf) (<compiler-generated>:0)

0x000000010000cf54: lazy protocol witness table accessor for type ContentView and conformance ContentView (in test.dwarf) (<compiler-generated>:0)

0x000000010000cf94: lazy protocol witness table accessor for type WindowGroup<ContentView> and conformance WindowGroup<A> (in test.dwarf) (<compiler-generated>:0)

0x000000010000cfdc: specialized AppDelegate.application(_:didFinishLaunchingWithOptions:) (in test.dwarf) (iosAppSwiftApp.swift:18)

0x000000010000d388: lazy protocol witness table accessor for type UIApplicationLaunchOptionsKey and conformance UIApplicationLaunchOptionsKey (in test.dwarf) (<compiler-generated>:0)

0x000000010000d3cc: block_copy_helper (in test.dwarf) (<compiler-generated>:0)

0x000000010000d3dc: block_destroy_helper (in test.dwarf) (<compiler-generated>:0)

0x000000010000d3e4: type metadata accessor for NSMutableDictionary (in test.dwarf) (<compiler-generated>:0)

0x000000010000d420: +[RollbarAppLanguageUtil RollbarAppLanguageToString:] (in test.dwarf) (RollbarAppLanguage.m:7)

0x000000010000d448: +[RollbarAppLanguageUtil RollbarAppLanguageFromString:] (in test.dwarf) (RollbarAppLanguage.m:23)

0x000000010000d500: -[RollbarBody message] (in test.dwarf) (RollbarBody.m:18)

0x000000010000d560: -[RollbarBody setMessage:] (in test.dwarf) (RollbarBody.m:26)

0x000000010000d5a8: -[RollbarBody crashReport] (in test.dwarf) (RollbarBody.m:30)

0x000000010000d608: -[RollbarBody setCrashReport:] (in test.dwarf) (RollbarBody.m:38)

0x000000010000d650: -[RollbarBody trace] (in test.dwarf) (RollbarBody.m:42)

0x000000010000d6b0: -[RollbarBody setTrace:] (in test.dwarf) (RollbarBody.m:50)

0x000000010000d6f8: -[RollbarBody traceChain] (in test.dwarf) (RollbarBody.m:54)

0x000000010000d878: -[RollbarBody setTraceChain:] (in test.dwarf) (RollbarBody.m:68)

0x000000010000d8bc: -[RollbarBody telemetry] (in test.dwarf) (RollbarBody.m:73)

0x000000010000da4c: -[RollbarBody setTelemetry:] (in test.dwarf) (RollbarBody.m:87)

0x000000010000da90: -[RollbarBody initWithMessage:] (in test.dwarf) (RollbarBody.m:94)

0x000000010000dc64: -[RollbarBody initWithException:] (in test.dwarf) (RollbarBody.m:106)

0x000000010000de38: -[RollbarBody initWithError:] (in test.dwarf) (RollbarBody.m:119)

0x000000010000e00c: -[RollbarBody initWithCrashReport:] (in test.dwarf) (RollbarBody.m:131)

0x000000010000e1e0: -[RollbarBody getJsonFriendlyDataFromTraceChain:] (in test.dwarf) (RollbarBody.m:147)

0x000000010000e344: -[RollbarBody getJsonFriendlyDataFromTelemetry:] (in test.dwarf) (RollbarBody.m:162)

0x000000010000e4a8: -[RollbarBody snapTelemetryData] (in test.dwarf) (RollbarBody.m:177)

0x000000010000e57c: -[RollbarCallStackFrame filename] (in test.dwarf) (RollbarCallStackFrame.m:21)

0x000000010000e588: -[RollbarCallStackFrame setFilename:] (in test.dwarf) (RollbarCallStackFrame.m:25)

0x000000010000e594: -[RollbarCallStackFrame lineno] (in test.dwarf) (RollbarCallStackFrame.m:29)

0x000000010000e5a0: -[RollbarCallStackFrame setLineno:] (in test.dwarf) (RollbarCallStackFrame.m:33)

0x000000010000e5ac: -[RollbarCallStackFrame colno] (in test.dwarf) (RollbarCallStackFrame.m:37)

0x000000010000e5b8: -[RollbarCallStackFrame setColno:] (in test.dwarf) (RollbarCallStackFrame.m:41)

0x000000010000e5c4: -[RollbarCallStackFrame method] (in test.dwarf) (RollbarCallStackFrame.m:45)

0x000000010000e5d0: -[RollbarCallStackFrame setMethod:] (in test.dwarf) (RollbarCallStackFrame.m:49)

0x000000010000e5dc: -[RollbarCallStackFrame code] (in test.dwarf) (RollbarCallStackFrame.m:53)

0x000000010000e5e8: -[RollbarCallStackFrame setCode:] (in test.dwarf) (RollbarCallStackFrame.m:57)

0x000000010000e5f4: -[RollbarCallStackFrame className] (in test.dwarf) (RollbarCallStackFrame.m:61)

0x000000010000e600: -[RollbarCallStackFrame setClassName:] (in test.dwarf) (RollbarCallStackFrame.m:65)

0x000000010000e60c: -[RollbarCallStackFrame context] (in test.dwarf) (RollbarCallStackFrame.m:68)

0x000000010000e66c: -[RollbarCallStackFrame setContext:] (in test.dwarf) (RollbarCallStackFrame.m:76)

0x000000010000e6b4: -[RollbarCallStackFrame argspec] (in test.dwarf) (RollbarCallStackFrame.m:81)

0x000000010000e6c0: -[RollbarCallStackFrame setArgspec:] (in test.dwarf) (RollbarCallStackFrame.m:85)

0x000000010000e6cc: -[RollbarCallStackFrame varargspec] (in test.dwarf) (RollbarCallStackFrame.m:89)

0x000000010000e6d8: -[RollbarCallStackFrame setVarargspec:] (in test.dwarf) (RollbarCallStackFrame.m:93)

0x000000010000e6e4: -[RollbarCallStackFrame keywordspec] (in test.dwarf) (RollbarCallStackFrame.m:97)

0x000000010000e6f0: -[RollbarCallStackFrame setKeywordspec:] (in test.dwarf) (RollbarCallStackFrame.m:101)

0x000000010000e6fc: -[RollbarCallStackFrame locals] (in test.dwarf) (RollbarCallStackFrame.m:105)

0x000000010000e708: -[RollbarCallStackFrame setLocals:] (in test.dwarf) (RollbarCallStackFrame.m:109)

0x000000010000e714: -[RollbarCallStackFrame initWithFileName:] (in test.dwarf) (RollbarCallStackFrame.m:114)

0x000000010000e814: -[RollbarCallStackFrameContext preCodeLines] (in test.dwarf) (RollbarCallStackFrameContext.m:11)

0x000000010000e820: -[RollbarCallStackFrameContext setPreCodeLines:] (in test.dwarf) (RollbarCallStackFrameContext.m:15)

0x000000010000e82c: -[RollbarCallStackFrameContext postCodeLines] (in test.dwarf) (RollbarCallStackFrameContext.m:19)

0x000000010000e838: -[RollbarCallStackFrameContext setPostCodeLines:] (in test.dwarf) (RollbarCallStackFrameContext.m:23)

0x000000010000e844: -[RollbarCallStackFrameContext initWithPreCodeLines:postCodeLines:] (in test.dwarf) (RollbarCallStackFrameContext.m:28)

0x000000010000e9a8: +[RollbarCaptureIpTypeUtil CaptureIpTypeToString:] (in test.dwarf) (RollbarCaptureIpType.m:6)

0x000000010000e9cc: +[RollbarCaptureIpTypeUtil CaptureIpTypeFromString:] (in test.dwarf) (RollbarCaptureIpType.m:18)

0x000000010000ea44: +[RollbarConfig configWithAccessToken:] (in test.dwarf) (RollbarConfig.m:57)

0x000000010000eb38: +[RollbarConfig configWithAccessToken:environment:] (in test.dwarf) (RollbarConfig.m:68)

0x000000010000ec4c: +[RollbarConfig mutableConfigWithAccessToken:] (in test.dwarf) (RollbarConfig.m:80)

0x000000010000ed40: +[RollbarConfig mutableConfigWithAccessToken:environment:] (in test.dwarf) (RollbarConfig.m:91)

0x000000010000ee54: -[RollbarConfig initWithAccessToken:environment:] (in test.dwarf) (RollbarConfig.m:106)

0x000000010000f25c: -[RollbarConfig init] (in test.dwarf) (RollbarConfig.m:143)

0x000000010000f5c0: -[RollbarConfig destination] (in test.dwarf) (RollbarConfig.m:163)

0x000000010000f614: -[RollbarConfig developerOptions] (in test.dwarf) (RollbarConfig.m:171)

0x000000010000f668: -[RollbarConfig loggingOptions] (in test.dwarf) (RollbarConfig.m:178)

0x000000010000f6bc: -[RollbarConfig notifier] (in test.dwarf) (RollbarConfig.m:185)

0x000000010000f710: -[RollbarConfig dataScrubber] (in test.dwarf) (RollbarConfig.m:192)

0x000000010000f764: -[RollbarConfig server] (in test.dwarf) (RollbarConfig.m:199)

0x000000010000f7b8: -[RollbarConfig person] (in test.dwarf) (RollbarConfig.m:206)

0x000000010000f80c: -[RollbarConfig httpProxy] (in test.dwarf) (RollbarConfig.m:213)

0x000000010000f860: -[RollbarConfig httpsProxy] (in test.dwarf) (RollbarConfig.m:220)

0x000000010000f8b4: -[RollbarConfig telemetry] (in test.dwarf) (RollbarConfig.m:227)

0x000000010000f908: -[RollbarConfig customData] (in test.dwarf) (RollbarConfig.m:235)

0x000000010000f914: -[RollbarConfig mutableCopy] (in test.dwarf) (RollbarConfig.m:249)

0x000000010000f91c: -[RollbarConfig copyWithZone:] (in test.dwarf) (RollbarConfig.m:263)

0x000000010000f9b4: -[RollbarConfig mutableCopyWithZone:] (in test.dwarf) (RollbarConfig.m:275)

0x000000010000fa4c: -[RollbarConfig checkIgnoreRollbarData] (in test.dwarf) (RollbarConfig.m:241)

0x000000010000fa5c: -[RollbarConfig modifyRollbarData] (in test.dwarf) (RollbarConfig.m:243)

0x000000010000fa6c: -[RollbarConfig .cxx_destruct] (in test.dwarf) (RollbarConfig.m:53)

0x000000010000faac: -[RollbarMutableConfig init] (in test.dwarf) (RollbarConfig.m:291)

0x000000010000fb04: -[RollbarMutableConfig setCheckIgnoreRollbarData:] (in test.dwarf) (RollbarConfig.m:304)

0x000000010000fb3c: -[RollbarMutableConfig setModifyRollbarData:] (in test.dwarf) (RollbarConfig.m:308)

0x000000010000fb74: -[RollbarMutableConfig destination] (in test.dwarf) (RollbarConfig.m:314)

0x000000010000fbc8: -[RollbarMutableConfig setDestination:] (in test.dwarf) (RollbarConfig.m:320)

0x000000010000fc08: -[RollbarMutableConfig developerOptions] (in test.dwarf) (RollbarConfig.m:326)

0x000000010000fc5c: -[RollbarMutableConfig setDeveloperOptions:] (in test.dwarf) (RollbarConfig.m:331)

0x000000010000fc9c: -[RollbarMutableConfig loggingOptions] (in test.dwarf) (RollbarConfig.m:337)

0x000000010000fcf0: -[RollbarMutableConfig setLoggingOptions:] (in test.dwarf) (RollbarConfig.m:342)

0x000000010000fd30: -[RollbarMutableConfig notifier] (in test.dwarf) (RollbarConfig.m:348)

0x000000010000fd84: -[RollbarMutableConfig setNotifier:] (in test.dwarf) (RollbarConfig.m:354)

0x000000010000fd90: -[RollbarMutableConfig dataScrubber] (in test.dwarf) (RollbarConfig.m:359)

0x000000010000fde4: -[RollbarMutableConfig setDataScrubber:] (in test.dwarf) (RollbarConfig.m:364)

0x000000010000fe24: -[RollbarMutableConfig server] (in test.dwarf) (RollbarConfig.m:370)

0x000000010000fe78: -[RollbarMutableConfig setServer:] (in test.dwarf) (RollbarConfig.m:375)

0x000000010000feb8: -[RollbarMutableConfig person] (in test.dwarf) (RollbarConfig.m:381)

0x000000010000ff0c: -[RollbarMutableConfig setPerson:] (in test.dwarf) (RollbarConfig.m:387)

0x000000010000ff18: -[RollbarMutableConfig httpProxy] (in test.dwarf) (RollbarConfig.m:392)

0x000000010000ff6c: -[RollbarMutableConfig setHttpProxy:] (in test.dwarf) (RollbarConfig.m:397)

0x000000010000ffac: -[RollbarMutableConfig httpsProxy] (in test.dwarf) (RollbarConfig.m:403)

0x0000000100010000: -[RollbarMutableConfig setHttpsProxy:] (in test.dwarf) (RollbarConfig.m:408)

0x0000000100010040: -[RollbarMutableConfig telemetry] (in test.dwarf) (RollbarConfig.m:414)

0x0000000100010094: -[RollbarMutableConfig setTelemetry:] (in test.dwarf) (RollbarConfig.m:419)

0x00000001000100d4: -[RollbarMutableConfig setPersonId:username:email:] (in test.dwarf) (RollbarConfig.m:425)

0x00000001000101ac: -[RollbarMutableConfig setServerHost:root:branch:codeVersion:] (in test.dwarf) (RollbarConfig.m:433)

0x00000001000102c0: -[RollbarMutableConfig setNotifierName:version:] (in test.dwarf) (RollbarConfig.m:443)

0x0000000100010354: -[RollbarMutableConfig customData] (in test.dwarf) (RollbarConfig.m:452)

0x0000000100010360: -[RollbarMutableConfig setCustomData:] (in test.dwarf) (RollbarConfig.m:457)

0x000000010001036c: -[RollbarMutableConfig copy] (in test.dwarf) (RollbarConfig.m:464)

0x0000000100010374: -[RollbarCrashReport rawCrashReport] (in test.dwarf) (RollbarCrashReport.m:11)

0x0000000100010380: -[RollbarCrashReport setRawCrashReport:] (in test.dwarf) (RollbarCrashReport.m:15)

0x000000010001038c: -[RollbarCrashReport initWithRawCrashReport:] (in test.dwarf) (RollbarCrashReport.m:20)

0x000000010001048c: -[RollbarData environment] (in test.dwarf) (RollbarData.m:34)

0x0000000100010498: -[RollbarData setEnvironment:] (in test.dwarf) (RollbarData.m:38)

0x00000001000104a4: -[RollbarData body] (in test.dwarf) (RollbarData.m:41)

0x0000000100010514: -[RollbarData setBody:] (in test.dwarf) (RollbarData.m:49)

0x000000010001055c: -[RollbarData level] (in test.dwarf) (RollbarData.m:53)

0x00000001000105ac: -[RollbarData setLevel:] (in test.dwarf) (RollbarData.m:58)

0x00000001000105f8: -[RollbarData timestamp] (in test.dwarf) (RollbarData.m:63)

0x0000000100010654: -[RollbarData setTimestamp:] (in test.dwarf) (RollbarData.m:71)

0x00000001000106a0: -[RollbarData codeVersion] (in test.dwarf) (RollbarData.m:76)

0x00000001000106ac: -[RollbarData setCodeVersion:] (in test.dwarf) (RollbarData.m:81)

0x00000001000106b8: -[RollbarData platform] (in test.dwarf) (RollbarData.m:85)

0x00000001000106c4: -[RollbarData setPlatform:] (in test.dwarf) (RollbarData.m:90)

0x00000001000106d0: -[RollbarData language] (in test.dwarf) (RollbarData.m:93)

0x0000000100010720: -[RollbarData setLanguage:] (in test.dwarf) (RollbarData.m:98)

0x000000010001076c: -[RollbarData framework] (in test.dwarf) (RollbarData.m:104)

0x0000000100010778: -[RollbarData setFramework:] (in test.dwarf) (RollbarData.m:109)

0x0000000100010784: -[RollbarData context] (in test.dwarf) (RollbarData.m:113)

0x0000000100010790: -[RollbarData setContext:] (in test.dwarf) (RollbarData.m:118)

0x000000010001079c: -[RollbarData fingerprint] (in test.dwarf) (RollbarData.m:122)

0x00000001000107a8: -[RollbarData setFingerprint:] (in test.dwarf) (RollbarData.m:127)

0x00000001000107b4: -[RollbarData title] (in test.dwarf) (RollbarData.m:131)

0x00000001000107c0: -[RollbarData setTitle:] (in test.dwarf) (RollbarData.m:136)

0x00000001000107cc: -[RollbarData uuid] (in test.dwarf) (RollbarData.m:139)

0x000000010001082c: -[RollbarData setUuid:] (in test.dwarf) (RollbarData.m:147)

0x0000000100010874: -[RollbarData request] (in test.dwarf) (RollbarData.m:151)

0x00000001000108d4: -[RollbarData setRequest:] (in test.dwarf) (RollbarData.m:159)

0x000000010001091c: -[RollbarData person] (in test.dwarf) (RollbarData.m:163)

0x000000010001097c: -[RollbarData setPerson:] (in test.dwarf) (RollbarData.m:171)

0x00000001000109c4: -[RollbarData server] (in test.dwarf) (RollbarData.m:175)

0x0000000100010a24: -[RollbarData setServer:] (in test.dwarf) (RollbarData.m:183)

0x0000000100010a6c: -[RollbarData client] (in test.dwarf) (RollbarData.m:187)

0x0000000100010acc: -[RollbarData setClient:] (in test.dwarf) (RollbarData.m:195)

0x0000000100010b14: -[RollbarData notifier] (in test.dwarf) (RollbarData.m:200)

0x0000000100010b74: -[RollbarData setNotifier:] (in test.dwarf) (RollbarData.m:208)

0x0000000100010bbc: -[RollbarData custom] (in test.dwarf) (RollbarData.m:212)

0x0000000100010d88: -[RollbarData setCustom:] (in test.dwarf) (RollbarData.m:231)

0x0000000100010dd0: -[RollbarData initWithEnvironment:body:] (in test.dwarf) (RollbarData.m:237)

0x0000000100010ee8: -[RollbarData initWithArray:] (in test.dwarf) (RollbarData.m:247)

0x0000000100010f2c: -[RollbarDestination initWithEndpoint:accessToken:environment:] (in test.dwarf) (RollbarDestination.m:25)

0x0000000100011050: -[RollbarDestination initWithAccessToken:environment:] (in test.dwarf) (RollbarDestination.m:37)

0x0000000100011064: -[RollbarDestination initWithAccessToken:] (in test.dwarf) (RollbarDestination.m:47)

0x0000000100011070: -[RollbarDestination init] (in test.dwarf) (RollbarDestination.m:53)

0x000000010001107c: -[RollbarDestination endpoint] (in test.dwarf) (RollbarDestination.m:59)

0x0000000100011088: -[RollbarDestination accessToken] (in test.dwarf) (RollbarDestination.m:64)

0x0000000100011094: -[RollbarDestination environment] (in test.dwarf) (RollbarDestination.m:69)

0x00000001000110a0: -[RollbarMutableDestination init] (in test.dwarf) (RollbarDestination.m:79)

0x00000001000110f8: -[RollbarMutableDestination setEndpoint:] (in test.dwarf) (RollbarDestination.m:94)

0x0000000100011104: -[RollbarMutableDestination setAccessToken:] (in test.dwarf) (RollbarDestination.m:98)

0x0000000100011110: -[RollbarMutableDestination setEnvironment:] (in test.dwarf) (RollbarDestination.m:102)

0x000000010001111c: -[RollbarDeveloperOptions initWithEnabled:transmit:logIncomingPayloads:logTransmittedPayloads:logDroppedPayloads:incomingPayloadsLogFile:transmittedPayloadsLogFile:droppedPayloadsLogFile:] (in test.dwarf) (RollbarDeveloperOptions.m:32)

0x0000000100011384: -[RollbarDeveloperOptions initWithEnabled:transmit:logIncomingPayloads:logTransmittedPayloads:logDroppedPayloads:] (in test.dwarf) (RollbarDeveloperOptions.m:55)

0x0000000100011460: -[RollbarDeveloperOptions initWithEnabled:] (in test.dwarf) (RollbarDeveloperOptions.m:74)

0x0000000100011474: -[RollbarDeveloperOptions init] (in test.dwarf) (RollbarDeveloperOptions.m:82)

0x000000010001147c: -[RollbarDeveloperOptions enabled] (in test.dwarf) (RollbarDeveloperOptions.m:87)

0x00000001000114c0: -[RollbarDeveloperOptions transmit] (in test.dwarf) (RollbarDeveloperOptions.m:92)

0x0000000100011504: -[RollbarDeveloperOptions suppressSdkInfoLogging] (in test.dwarf) (RollbarDeveloperOptions.m:97)

0x0000000100011548: -[RollbarDeveloperOptions logIncomingPayloads] (in test.dwarf) (RollbarDeveloperOptions.m:102)

0x000000010001158c: -[RollbarDeveloperOptions incomingPayloadsLogFile] (in test.dwarf) (RollbarDeveloperOptions.m:108)

0x0000000100011598: -[RollbarDeveloperOptions logTransmittedPayloads] (in test.dwarf) (RollbarDeveloperOptions.m:112)

0x00000001000115dc: -[RollbarDeveloperOptions transmittedPayloadsLogFile] (in test.dwarf) (RollbarDeveloperOptions.m:118)

0x00000001000115e8: -[RollbarDeveloperOptions logDroppedPayloads] (in test.dwarf) (RollbarDeveloperOptions.m:122)

0x000000010001162c: -[RollbarDeveloperOptions droppedPayloadsLogFile] (in test.dwarf) (RollbarDeveloperOptions.m:128)

0x0000000100011638: -[RollbarMutableDeveloperOptions setEnabled:] (in test.dwarf) (RollbarDeveloperOptions.m:148)

0x0000000100011688: -[RollbarMutableDeveloperOptions setTransmit:] (in test.dwarf) (RollbarDeveloperOptions.m:152)

0x00000001000116d8: -[RollbarMutableDeveloperOptions setSuppressSdkInfoLogging:] (in test.dwarf) (RollbarDeveloperOptions.m:156)

0x0000000100011728: -[RollbarMutableDeveloperOptions setLogIncomingPayloads:] (in test.dwarf) (RollbarDeveloperOptions.m:160)

0x0000000100011778: -[RollbarMutableDeveloperOptions setIncomingPayloadsLogFile:] (in test.dwarf) (RollbarDeveloperOptions.m:165)

0x0000000100011784: -[RollbarMutableDeveloperOptions setLogTransmittedPayloads:] (in test.dwarf) (RollbarDeveloperOptions.m:168)

0x00000001000117d4: -[RollbarMutableDeveloperOptions setTransmittedPayloadsLogFile:] (in test.dwarf) (RollbarDeveloperOptions.m:173)

0x00000001000117e0: -[RollbarMutableDeveloperOptions setLogDroppedPayloads:] (in test.dwarf) (RollbarDeveloperOptions.m:176)

0x0000000100011830: -[RollbarMutableDeveloperOptions setDroppedPayloadsLogFile:] (in test.dwarf) (RollbarDeveloperOptions.m:181)

0x000000010001183c: -[RollbarException exceptionClass] (in test.dwarf) (RollbarException.m:11)

0x0000000100011890: -[RollbarException setExceptionClass:] (in test.dwarf) (RollbarException.m:19)

0x000000010001189c: -[RollbarException exceptionMessage] (in test.dwarf) (RollbarException.m:24)

0x00000001000118a8: -[RollbarException setExceptionMessage:] (in test.dwarf) (RollbarException.m:28)

0x00000001000118b4: -[RollbarException exceptionDescription] (in test.dwarf) (RollbarException.m:33)

0x00000001000118c0: -[RollbarException setExceptionDescription:] (in test.dwarf) (RollbarException.m:38)

0x00000001000118cc: -[RollbarException initWithExceptionClass:exceptionMessage:exceptionDescription:] (in test.dwarf) (RollbarException.m:43)

0x0000000100011a98: +[RollbarHttpMethodUtil HttpMethodToString:] (in test.dwarf) (RollbarHttpMethod.m:6)

0x0000000100011abc: +[RollbarHttpMethodUtil HttpMethodFromString:] (in test.dwarf) (RollbarHttpMethod.m:30)

0x0000000100011be4: +[RollbarLevelUtil RollbarLevelToString:] (in test.dwarf) (RollbarLevel.m:7)

0x0000000100011c0c: +[RollbarLevelUtil RollbarLevelFromString:] (in test.dwarf) (RollbarLevel.m:21)

0x0000000100011cb8: -[RollbarLoggingOptions initWithLogLevel:crashLevel:maximumReportsPerMinute:rateLimitBehavior:captureIp:codeVersion:framework:requestId:] (in test.dwarf) (RollbarLoggingOptions.m:34)

0x0000000100011f6c: -[RollbarLoggingOptions initWithLogLevel:crashLevel:maximumReportsPerMinute:rateLimitBehavior:codeVersion:framework:requestId:] (in test.dwarf) (RollbarLoggingOptions.m:56)

0x0000000100011f9c: -[RollbarLoggingOptions initWithLogLevel:crashLevel:captureIp:codeVersion:framework:requestId:] (in test.dwarf) (RollbarLoggingOptions.m:75)

0x0000000100011fd4: -[RollbarLoggingOptions initWithLogLevel:crashLevel:codeVersion:framework:requestId:] (in test.dwarf) (RollbarLoggingOptions.m:93)

0x0000000100012004: -[RollbarLoggingOptions initWithLogLevel:crashLevel:maximumReportsPerMinute:rateLimitBehavior:] (in test.dwarf) (RollbarLoggingOptions.m:110)

0x000000010001202c: -[RollbarLoggingOptions initWithLogLevel:crashLevel:] (in test.dwarf) (RollbarLoggingOptions.m:129)

0x0000000100012038: -[RollbarLoggingOptions init] (in test.dwarf) (RollbarLoggingOptions.m:137)

0x0000000100012044: -[RollbarLoggingOptions logLevel] (in test.dwarf) (RollbarLoggingOptions.m:143)

0x0000000100012094: -[RollbarLoggingOptions crashLevel] (in test.dwarf) (RollbarLoggingOptions.m:148)

0x00000001000120e4: -[RollbarLoggingOptions maximumReportsPerMinute] (in test.dwarf) (RollbarLoggingOptions.m:154)

0x00000001000120f4: -[RollbarLoggingOptions rateLimitBehavior] (in test.dwarf) (RollbarLoggingOptions.m:158)

0x0000000100012118: -[RollbarLoggingOptions captureIp] (in test.dwarf) (RollbarLoggingOptions.m:163)

0x0000000100012168: -[RollbarLoggingOptions codeVersion] (in test.dwarf) (RollbarLoggingOptions.m:169)

0x0000000100012174: -[RollbarLoggingOptions framework] (in test.dwarf) (RollbarLoggingOptions.m:173)

0x0000000100012180: -[RollbarLoggingOptions requestId] (in test.dwarf) (RollbarLoggingOptions.m:177)

0x000000010001218c: -[RollbarMutableLoggingOptions init] (in test.dwarf) (RollbarLoggingOptions.m:186)

0x00000001000121e4: -[RollbarMutableLoggingOptions setLogLevel:] (in test.dwarf) (RollbarLoggingOptions.m:204)

0x0000000100012230: -[RollbarMutableLoggingOptions setCrashLevel:] (in test.dwarf) (RollbarLoggingOptions.m:209)

0x000000010001227c: -[RollbarMutableLoggingOptions setMaximumReportsPerMinute:] (in test.dwarf) (RollbarLoggingOptions.m:215)

0x0000000100012288: -[RollbarMutableLoggingOptions setRateLimitBehavior:] (in test.dwarf) (RollbarLoggingOptions.m:219)

0x0000000100012294: -[RollbarMutableLoggingOptions setCaptureIp:] (in test.dwarf) (RollbarLoggingOptions.m:222)

0x00000001000122e0: -[RollbarMutableLoggingOptions setCodeVersion:] (in test.dwarf) (RollbarLoggingOptions.m:228)

0x00000001000122ec: -[RollbarMutableLoggingOptions setFramework:] (in test.dwarf) (RollbarLoggingOptions.m:232)

0x00000001000122f8: -[RollbarMutableLoggingOptions setRequestId:] (in test.dwarf) (RollbarLoggingOptions.m:236)

0x0000000100012304: -[RollbarMessage body] (in test.dwarf) (RollbarMessage.m:11)

0x0000000100012310: -[RollbarMessage setBody:] (in test.dwarf) (RollbarMessage.m:15)

0x000000010001231c: -[RollbarMessage initWithBody:] (in test.dwarf) (RollbarMessage.m:20)

0x000000010001241c: -[RollbarMessage initWithNSError:] (in test.dwarf) (RollbarMessage.m:28)

0x00000001000126c4: -[RollbarModule initWithName:version:] (in test.dwarf) (RollbarModule.m:18)

0x0000000100012840: -[RollbarModule initWithName:] (in test.dwarf) (RollbarModule.m:33)

0x0000000100012848: -[RollbarModule name] (in test.dwarf) (RollbarModule.m:39)

0x0000000100012854: -[RollbarModule version] (in test.dwarf) (RollbarModule.m:43)

0x0000000100012860: -[RollbarMutableModule init] (in test.dwarf) (RollbarModule.m:53)

0x00000001000128c0: -[RollbarMutableModule setName:] (in test.dwarf) (RollbarModule.m:67)

0x00000001000128cc: -[RollbarMutableModule setVersion:] (in test.dwarf) (RollbarModule.m:71)

0x00000001000128d8: -[RollbarPayload accessToken] (in test.dwarf) (RollbarPayload.m:14)

0x00000001000128e4: -[RollbarPayload setAccessToken:] (in test.dwarf) (RollbarPayload.m:18)

0x00000001000128f0: -[RollbarPayload data] (in test.dwarf) (RollbarPayload.m:21)

0x0000000100012944: -[RollbarPayload setData:] (in test.dwarf) (RollbarPayload.m:27)

0x000000010001298c: -[RollbarPayload initWithAccessToken:data:] (in test.dwarf) (RollbarPayload.m:33)

0x0000000100012a90: -[RollbarPayload initWithArray:] (in test.dwarf) (RollbarPayload.m:43)

0x0000000100012ad4: -[RollbarPerson initWithID:username:email:] (in test.dwarf) (RollbarPerson.m:20)

0x0000000100012ca0: -[RollbarPerson initWithID:username:] (in test.dwarf) (RollbarPerson.m:35)

0x0000000100012ca8: -[RollbarPerson initWithID:email:] (in test.dwarf) (RollbarPerson.m:41)

0x0000000100012cb4: -[RollbarPerson initWithID:] (in test.dwarf) (RollbarPerson.m:52)

0x0000000100012cc0: -[RollbarPerson ID] (in test.dwarf) (RollbarPerson.m:60)

0x0000000100012d14: -[RollbarPerson username] (in test.dwarf) (RollbarPerson.m:68)

0x0000000100012d20: -[RollbarPerson email] (in test.dwarf) (RollbarPerson.m:73)

0x0000000100012d2c: -[RollbarMutablePerson init] (in test.dwarf) (RollbarPerson.m:83)

0x0000000100012d8c: -[RollbarMutablePerson setID:] (in test.dwarf) (RollbarPerson.m:99)

0x0000000100012d98: -[RollbarMutablePerson setUsername:] (in test.dwarf) (RollbarPerson.m:104)

0x0000000100012da4: -[RollbarMutablePerson setEmail:] (in test.dwarf) (RollbarPerson.m:109)

0x0000000100012db0: -[RollbarProxy initWithEnabled:proxyUrl:proxyPort:] (in test.dwarf) (RollbarProxy.m:22)

0x0000000100012ef0: -[RollbarProxy init] (in test.dwarf) (RollbarProxy.m:34)

0x0000000100012fc8: -[RollbarProxy enabled] (in test.dwarf) (RollbarProxy.m:45)

0x000000010001300c: -[RollbarProxy proxyUrl] (in test.dwarf) (RollbarProxy.m:51)

0x0000000100013018: -[RollbarProxy proxyPort] (in test.dwarf) (RollbarProxy.m:56)

0x0000000100013028: -[RollbarMutableProxy setEnabled:] (in test.dwarf) (RollbarProxy.m:71)

0x0000000100013078: -[RollbarMutableProxy setProxyUrl:] (in test.dwarf) (RollbarProxy.m:81)

0x0000000100013084: -[RollbarMutableProxy setProxyPort:] (in test.dwarf) (RollbarProxy.m:85)

0x0000000100013090: -[RollbarRequest url] (in test.dwarf) (RollbarRequest.m:18)

0x000000010001309c: -[RollbarRequest setUrl:] (in test.dwarf) (RollbarRequest.m:22)

0x00000001000130a8: -[RollbarRequest method] (in test.dwarf) (RollbarRequest.m:25)

0x00000001000130fc: -[RollbarRequest setMethod:] (in test.dwarf) (RollbarRequest.m:29)

0x0000000100013148: -[RollbarRequest headers] (in test.dwarf) (RollbarRequest.m:34)

0x0000000100013154: -[RollbarRequest setHeaders:] (in test.dwarf) (RollbarRequest.m:38)

0x0000000100013160: -[RollbarRequest params] (in test.dwarf) (RollbarRequest.m:42)

0x000000010001316c: -[RollbarRequest setParams:] (in test.dwarf) (RollbarRequest.m:46)

0x0000000100013178: -[RollbarRequest getParams] (in test.dwarf) (RollbarRequest.m:50)

0x0000000100013184: -[RollbarRequest setGetParams:] (in test.dwarf) (RollbarRequest.m:54)

0x0000000100013190: -[RollbarRequest queryString] (in test.dwarf) (RollbarRequest.m:58)

0x000000010001319c: -[RollbarRequest setQueryString:] (in test.dwarf) (RollbarRequest.m:62)

0x00000001000131a8: -[RollbarRequest postParams] (in test.dwarf) (RollbarRequest.m:66)

0x00000001000131b4: -[RollbarRequest setPostParams:] (in test.dwarf) (RollbarRequest.m:70)

0x00000001000131c0: -[RollbarRequest postBody] (in test.dwarf) (RollbarRequest.m:74)

0x00000001000131cc: -[RollbarRequest setPostBody:] (in test.dwarf) (RollbarRequest.m:78)

0x00000001000131d8: -[RollbarRequest userIP] (in test.dwarf) (RollbarRequest.m:82)

0x00000001000131e4: -[RollbarRequest setUserIP:] (in test.dwarf) (RollbarRequest.m:86)

0x00000001000131f0: -[RollbarRequest initWithHttpMethod:url:headers:params:queryString:getParams:postParams:postBody:userIP:] (in test.dwarf) (RollbarRequest.m:91)

0x00000001000135e8: -[RollbarScrubbingOptions initWithEnabled:scrubFields:safeListFields:] (in test.dwarf) (RollbarScrubbingOptions.m:19)

0x000000010001371c: -[RollbarScrubbingOptions initWithScrubFields:safeListFields:] (in test.dwarf) (RollbarScrubbingOptions.m:32)

0x000000010001379c: -[RollbarScrubbingOptions initWithScrubFields:] (in test.dwarf) (RollbarScrubbingOptions.m:43)

0x00000001000137a8: -[RollbarScrubbingOptions init] (in test.dwarf) (RollbarScrubbingOptions.m:49)

0x00000001000137b4: -[RollbarScrubbingOptions enabled] (in test.dwarf) (RollbarScrubbingOptions.m:63)

0x00000001000137f8: -[RollbarScrubbingOptions scrubFields] (in test.dwarf) (RollbarScrubbingOptions.m:69)

0x0000000100013804: -[RollbarScrubbingOptions safeListFields] (in test.dwarf) (RollbarScrubbingOptions.m:74)

0x0000000100013810: -[RollbarMutableScrubbingOptions init] (in test.dwarf) (RollbarScrubbingOptions.m:85)

0x0000000100013868: -[RollbarMutableScrubbingOptions setEnabled:] (in test.dwarf) (RollbarScrubbingOptions.m:97)

0x00000001000138b8: -[RollbarMutableScrubbingOptions scrubFields] (in test.dwarf) (RollbarScrubbingOptions.m:102)

0x00000001000138c4: -[RollbarMutableScrubbingOptions setScrubFields:] (in test.dwarf) (RollbarScrubbingOptions.m:106)

0x0000000100013904: -[RollbarMutableScrubbingOptions safeListFields] (in test.dwarf) (RollbarScrubbingOptions.m:111)

0x0000000100013910: -[RollbarMutableScrubbingOptions setSafeListFields:] (in test.dwarf) (RollbarScrubbingOptions.m:115)

0x0000000100013950: -[RollbarMutableScrubbingOptions addScrubField:] (in test.dwarf) (RollbarScrubbingOptions.m:121)

0x00000001000139a0: -[RollbarMutableScrubbingOptions removeScrubField:] (in test.dwarf) (RollbarScrubbingOptions.m:127)

0x00000001000139f0: -[RollbarMutableScrubbingOptions addScrubSafeListField:] (in test.dwarf) (RollbarScrubbingOptions.m:134)

0x0000000100013a40: -[RollbarMutableScrubbingOptions removeScrubSafeListField:] (in test.dwarf) (RollbarScrubbingOptions.m:139)

0x0000000100013a90: -[RollbarServer cpu] (in test.dwarf) (RollbarServer.m:10)

0x0000000100013a9c: -[RollbarServer setCpu:] (in test.dwarf) (RollbarServer.m:14)

0x0000000100013aa8: -[RollbarServer initWithCpu:host:root:branch:codeVersion:] (in test.dwarf) (RollbarServer.m:19)

0x0000000100013bdc: -[RollbarServer initWithCpu:serverConfig:] (in test.dwarf) (RollbarServer.m:37)

0x0000000100013d2c: -[RollbarServerConfig initWithHost:root:branch:codeVersion:] (in test.dwarf) (RollbarServerConfig.m:23)

0x0000000100013f5c: -[RollbarServerConfig init] (in test.dwarf) (RollbarServerConfig.m:37)

0x0000000100013f70: -[RollbarServerConfig host] (in test.dwarf) (RollbarServerConfig.m:46)

0x0000000100013f7c: -[RollbarServerConfig root] (in test.dwarf) (RollbarServerConfig.m:50)

0x0000000100013f88: -[RollbarServerConfig branch] (in test.dwarf) (RollbarServerConfig.m:54)

0x0000000100013f94: -[RollbarServerConfig codeVersion] (in test.dwarf) (RollbarServerConfig.m:58)

0x0000000100013fa0: -[RollbarMutableServerConfig setHost:] (in test.dwarf) (RollbarServerConfig.m:78)

0x0000000100013fac: -[RollbarMutableServerConfig setRoot:] (in test.dwarf) (RollbarServerConfig.m:86)

0x0000000100013fb8: -[RollbarMutableServerConfig setBranch:] (in test.dwarf) (RollbarServerConfig.m:94)

0x0000000100013fc4: -[RollbarMutableServerConfig setCodeVersion:] (in test.dwarf) (RollbarServerConfig.m:102)

0x0000000100013fd0: +[RollbarSourceUtil RollbarSourceToString:] (in test.dwarf) (RollbarSource.m:7)

0x0000000100013ffc: +[RollbarSourceUtil RollbarSourceFromString:] (in test.dwarf) (RollbarSource.m:17)

0x0000000100014060: -[RollbarTelemetryConnectivityBody initWithStatus:extraData:] (in test.dwarf) (RollbarTelemetryConnectivityBody.m:15)

0x0000000100014124: -[RollbarTelemetryConnectivityBody initWithStatus:] (in test.dwarf) (RollbarTelemetryConnectivityBody.m:28)

0x000000010001412c: -[RollbarTelemetryConnectivityBody initWithDictionary:] (in test.dwarf) (RollbarTelemetryConnectivityBody.m:31)

0x0000000100014160: -[RollbarTelemetryConnectivityBody status] (in test.dwarf) (RollbarTelemetryConnectivityBody.m:39)

0x000000010001416c: -[RollbarTelemetryConnectivityBody setStatus:] (in test.dwarf) (RollbarTelemetryConnectivityBody.m:44)

0x0000000100014178: -[RollbarTelemetryEvent initWithLevel:telemetryType:source:] (in test.dwarf) (RollbarTelemetryEvent.m:27)

0x0000000100014388: -[RollbarTelemetryEvent initWithLevel:source:body:] (in test.dwarf) (RollbarTelemetryEvent.m:44)

0x0000000100014598: -[RollbarTelemetryEvent initWithDictionary:] (in test.dwarf) (RollbarTelemetryEvent.m:60)

0x00000001000145cc: -[RollbarTelemetryEvent level] (in test.dwarf) (RollbarTelemetryEvent.m:69)

0x000000010001461c: -[RollbarTelemetryEvent type] (in test.dwarf) (RollbarTelemetryEvent.m:77)

0x000000010001466c: -[RollbarTelemetryEvent source] (in test.dwarf) (RollbarTelemetryEvent.m:85)

0x00000001000146bc: -[RollbarTelemetryEvent timestamp] (in test.dwarf) (RollbarTelemetryEvent.m:93)

0x0000000100014720: -[RollbarTelemetryEvent body] (in test.dwarf) (RollbarTelemetryEvent.m:106)

0x0000000100014794: +[RollbarTelemetryEvent createTelemetryBodyWithType:data:] (in test.dwarf) (RollbarTelemetryEvent.m:113)

0x0000000100014834: +[RollbarTelemetryEvent deriveTypeFromBody:] (in test.dwarf) (RollbarTelemetryEvent.m:151)

0x0000000100014960: -[RollbarTelemetryLogBody initWithMessage:extraData:] (in test.dwarf) (RollbarTelemetryLogBody.m:15)

0x0000000100014a24: -[RollbarTelemetryLogBody initWithMessage:] (in test.dwarf) (RollbarTelemetryLogBody.m:28)

0x0000000100014a2c: -[RollbarTelemetryLogBody initWithDictionary:] (in test.dwarf) (RollbarTelemetryLogBody.m:31)

0x0000000100014a60: -[RollbarTelemetryLogBody message] (in test.dwarf) (RollbarTelemetryLogBody.m:39)

0x0000000100014a6c: -[RollbarTelemetryLogBody setMessage:] (in test.dwarf) (RollbarTelemetryLogBody.m:44)

0x0000000100014a78: -[RollbarTelemetryNavigationBody initWithFromLocation:toLocation:extraData:] (in test.dwarf) (RollbarTelemetryNavigationBody.m:16)

0x0000000100014b74: -[RollbarTelemetryNavigationBody initWithFromLocation:toLocation:] (in test.dwarf) (RollbarTelemetryNavigationBody.m:32)

0x0000000100014b7c: -[RollbarTelemetryNavigationBody initWithDictionary:] (in test.dwarf) (RollbarTelemetryNavigationBody.m:37)

0x0000000100014bb0: -[RollbarTelemetryNavigationBody from] (in test.dwarf) (RollbarTelemetryNavigationBody.m:45)

0x0000000100014bbc: -[RollbarTelemetryNavigationBody setFrom:] (in test.dwarf) (RollbarTelemetryNavigationBody.m:50)

0x0000000100014bc8: -[RollbarTelemetryNavigationBody to] (in test.dwarf) (RollbarTelemetryNavigationBody.m:54)

0x0000000100014bd4: -[RollbarTelemetryNavigationBody setTo:] (in test.dwarf) (RollbarTelemetryNavigationBody.m:59)

0x0000000100014be0: -[RollbarTelemetryNetworkBody initWithMethod:url:statusCode:extraData:] (in test.dwarf) (RollbarTelemetryNetworkBody.m:17)

0x0000000100014d20: -[RollbarTelemetryNetworkBody initWithMethod:url:statusCode:] (in test.dwarf) (RollbarTelemetryNetworkBody.m:36)

0x0000000100014d28: -[RollbarTelemetryNetworkBody initWithDictionary:] (in test.dwarf) (RollbarTelemetryNetworkBody.m:42)

0x0000000100014d5c: -[RollbarTelemetryNetworkBody method] (in test.dwarf) (RollbarTelemetryNetworkBody.m:49)

0x0000000100014dac: -[RollbarTelemetryNetworkBody setMethod:] (in test.dwarf) (RollbarTelemetryNetworkBody.m:54)

0x0000000100014df8: -[RollbarTelemetryNetworkBody url] (in test.dwarf) (RollbarTelemetryNetworkBody.m:60)

0x0000000100014e04: -[RollbarTelemetryNetworkBody setUrl:] (in test.dwarf) (RollbarTelemetryNetworkBody.m:65)

0x0000000100014e10: -[RollbarTelemetryNetworkBody statusCode] (in test.dwarf) (RollbarTelemetryNetworkBody.m:69)

0x0000000100014e1c: -[RollbarTelemetryNetworkBody setStatusCode:] (in test.dwarf) (RollbarTelemetryNetworkBody.m:74)

0x0000000100014e28: -[RollbarTelemetryOptions initWithEnabled:captureLog:captureConnectivity:viewInputsScrubber:] (in test.dwarf) (RollbarTelemetryOptions.m:28)

0x0000000100015028: -[RollbarTelemetryOptions initWithEnabled:captureLog:captureConnectivity:] (in test.dwarf) (RollbarTelemetryOptions.m:44)

0x0000000100015098: -[RollbarTelemetryOptions initWithEnabled:] (in test.dwarf) (RollbarTelemetryOptions.m:54)

0x00000001000150f8: -[RollbarTelemetryOptions init] (in test.dwarf) (RollbarTelemetryOptions.m:61)

0x000000010001514c: -[RollbarTelemetryOptions enabled] (in test.dwarf) (RollbarTelemetryOptions.m:71)

0x0000000100015190: -[RollbarTelemetryOptions captureLog] (in test.dwarf) (RollbarTelemetryOptions.m:76)

0x00000001000151d4: -[RollbarTelemetryOptions captureConnectivity] (in test.dwarf) (RollbarTelemetryOptions.m:81)

0x0000000100015218: -[RollbarTelemetryOptions maximumTelemetryData] (in test.dwarf) (RollbarTelemetryOptions.m:87)

0x0000000100015228: -[RollbarTelemetryOptions viewInputsScrubber] (in test.dwarf) (RollbarTelemetryOptions.m:92)

0x000000010001527c: -[RollbarTelemetryOptions memoryStatsAutocollectionInterval] (in test.dwarf) (RollbarTelemetryOptions.m:99)

0x000000010001528c: -[RollbarMutableTelemetryOptions init] (in test.dwarf) (RollbarTelemetryOptions.m:111)

0x0000000100015310: -[RollbarMutableTelemetryOptions setEnabled:] (in test.dwarf) (RollbarTelemetryOptions.m:132)

0x000000010001535c: -[RollbarMutableTelemetryOptions setCaptureLog:] (in test.dwarf) (RollbarTelemetryOptions.m:139)

0x00000001000153a8: -[RollbarMutableTelemetryOptions setCaptureConnectivity:] (in test.dwarf) (RollbarTelemetryOptions.m:145)

0x00000001000153f4: -[RollbarMutableTelemetryOptions setMaximumTelemetryData:] (in test.dwarf) (RollbarTelemetryOptions.m:152)

0x0000000100015400: -[RollbarMutableTelemetryOptions setMemoryStatsAutocollectionInterval:] (in test.dwarf) (RollbarTelemetryOptions.m:156)

0x000000010001540c: -[RollbarMutableTelemetryOptions viewInputsScrubber] (in test.dwarf) (RollbarTelemetryOptions.m:159)

0x0000000100015460: -[RollbarMutableTelemetryOptions setViewInputsScrubber:] (in test.dwarf) (RollbarTelemetryOptions.m:165)

0x00000001000154a0: +[RollbarTelemetryTypeUtil RollbarTelemetryTypeToString:] (in test.dwarf) (RollbarTelemetryType.m:6)

0x00000001000154c4: +[RollbarTelemetryTypeUtil RollbarTelemetryTypeFromString:] (in test.dwarf) (RollbarTelemetryType.m:24)

0x00000001000155a8: -[RollbarTelemetryViewBody initWithElement:extraData:] (in test.dwarf) (RollbarTelemetryViewBody.m:15)

0x000000010001566c: -[RollbarTelemetryViewBody initWithElement:] (in test.dwarf) (RollbarTelemetryViewBody.m:28)

0x0000000100015674: -[RollbarTelemetryViewBody initWithDictionary:] (in test.dwarf) (RollbarTelemetryViewBody.m:31)

0x00000001000156a8: -[RollbarTelemetryViewBody element] (in test.dwarf) (RollbarTelemetryViewBody.m:39)

0x00000001000156b4: -[RollbarTelemetryViewBody setElement:] (in test.dwarf) (RollbarTelemetryViewBody.m:44)

0x00000001000156c0: -[RollbarTrace frames] (in test.dwarf) (RollbarTrace.m:12)

0x0000000100015850: -[RollbarTrace setFrames:] (in test.dwarf) (RollbarTrace.m:27)

0x0000000100015894: -[RollbarTrace exception] (in test.dwarf) (RollbarTrace.m:32)

0x0000000100015904: -[RollbarTrace setException:] (in test.dwarf) (RollbarTrace.m:40)

0x0000000100015968: -[RollbarTrace initWithRollbarException:rollbarCallStackFrames:] (in test.dwarf) (RollbarTrace.m:51)

0x0000000100015ad8: -[RollbarTrace initWithException:] (in test.dwarf) (RollbarTrace.m:62)

0x0000000100015d08: -[RollbarTrace initWithCrashReport:] (in test.dwarf) (RollbarTrace.m:81)

0x0000000100015f80: -[RollbarTrace getJsonFriendlyDataFromFrames:] (in test.dwarf) (RollbarTrace.m:110)

0x00000001000160e4: -[RollbarTrace buildStackFrameFromBacktraceLine:] (in test.dwarf) (RollbarTrace.m:125)

0x00000001000162a8: +[Rollbar initWithConfiguration:] (in test.dwarf) (Rollbar.m:34)

0x0000000100016324: +[Rollbar configuration] (in test.dwarf) (Rollbar.m:39)

0x0000000100016370: +[Rollbar updateWithConfiguration:] (in test.dwarf) (Rollbar.m:44)

0x00000001000163c8: +[Rollbar logCrashReport:] (in test.dwarf) (Rollbar.m:51)

0x000000010001643c: +[Rollbar log:message:] (in test.dwarf) (Rollbar.m:56)

0x00000001000164c0: +[Rollbar log:exception:] (in test.dwarf) (Rollbar.m:65)

0x0000000100016544: +[Rollbar log:error:] (in test.dwarf) (Rollbar.m:74)

0x00000001000165c8: +[Rollbar log:message:data:] (in test.dwarf) (Rollbar.m:83)

0x000000010001666c: +[Rollbar log:exception:data:] (in test.dwarf) (Rollbar.m:93)

0x0000000100016710: +[Rollbar log:error:data:] (in test.dwarf) (Rollbar.m:103)

0x00000001000167b4: +[Rollbar log:message:data:context:] (in test.dwarf) (Rollbar.m:113)

0x0000000100016870: +[Rollbar log:exception:data:context:] (in test.dwarf) (Rollbar.m:124)

0x000000010001692c: +[Rollbar log:error:data:context:] (in test.dwarf) (Rollbar.m:135)

0x00000001000169e8: +[Rollbar debugMessage:] (in test.dwarf) (Rollbar.m:148)

0x0000000100016a04: +[Rollbar debugException:] (in test.dwarf) (Rollbar.m:153)

0x0000000100016a20: +[Rollbar debugError:] (in test.dwarf) (Rollbar.m:158)

0x0000000100016a3c: +[Rollbar debugMessage:data:] (in test.dwarf) (Rollbar.m:163)

0x0000000100016a58: +[Rollbar debugException:data:] (in test.dwarf) (Rollbar.m:168)

0x0000000100016a74: +[Rollbar debugError:data:] (in test.dwarf) (Rollbar.m:173)

0x0000000100016a90: +[Rollbar debugMessage:data:context:] (in test.dwarf) (Rollbar.m:178)

0x0000000100016aac: +[Rollbar debugException:data:context:] (in test.dwarf) (Rollbar.m:182)

0x0000000100016ac8: +[Rollbar debugError:data:context:] (in test.dwarf) (Rollbar.m:187)

0x0000000100016ae4: +[Rollbar infoMessage:] (in test.dwarf) (Rollbar.m:194)

0x0000000100016b00: +[Rollbar infoException:] (in test.dwarf) (Rollbar.m:199)

0x0000000100016b1c: +[Rollbar infoError:] (in test.dwarf) (Rollbar.m:204)

0x0000000100016b38: +[Rollbar infoMessage:data:] (in test.dwarf) (Rollbar.m:209)

0x0000000100016b54: +[Rollbar infoException:data:] (in test.dwarf) (Rollbar.m:214)

0x0000000100016b70: +[Rollbar infoError:data:] (in test.dwarf) (Rollbar.m:219)

0x0000000100016b8c: +[Rollbar infoMessage:data:context:] (in test.dwarf) (Rollbar.m:224)

0x0000000100016ba8: +[Rollbar infoException:data:context:] (in test.dwarf) (Rollbar.m:229)

0x0000000100016bc4: +[Rollbar infoError:data:context:] (in test.dwarf) (Rollbar.m:234)

0x0000000100016be0: +[Rollbar warningMessage:] (in test.dwarf) (Rollbar.m:241)

0x0000000100016bfc: +[Rollbar warningException:] (in test.dwarf) (Rollbar.m:246)

0x0000000100016c18: +[Rollbar warningError:] (in test.dwarf) (Rollbar.m:251)

0x0000000100016c34: +[Rollbar warningMessage:data:] (in test.dwarf) (Rollbar.m:256)

0x0000000100016c50: +[Rollbar warningException:data:] (in test.dwarf) (Rollbar.m:261)

0x0000000100016c6c: +[Rollbar warningError:data:] (in test.dwarf) (Rollbar.m:266)

0x0000000100016c88: +[Rollbar warningMessage:data:context:] (in test.dwarf) (Rollbar.m:271)

0x0000000100016ca4: +[Rollbar warningException:data:context:] (in test.dwarf) (Rollbar.m:276)

0x0000000100016cc0: +[Rollbar warningError:data:context:] (in test.dwarf) (Rollbar.m:281)

0x0000000100016cdc: +[Rollbar errorMessage:] (in test.dwarf) (Rollbar.m:288)

0x0000000100016cf8: +[Rollbar errorException:] (in test.dwarf) (Rollbar.m:293)

0x0000000100016d14: +[Rollbar errorError:] (in test.dwarf) (Rollbar.m:298)

0x0000000100016d30: +[Rollbar errorMessage:data:] (in test.dwarf) (Rollbar.m:303)

0x0000000100016d4c: +[Rollbar errorException:data:] (in test.dwarf) (Rollbar.m:308)

0x0000000100016d68: +[Rollbar errorError:data:] (in test.dwarf) (Rollbar.m:313)

0x0000000100016d84: +[Rollbar errorMessage:data:context:] (in test.dwarf) (Rollbar.m:318)

0x0000000100016da0: +[Rollbar errorException:data:context:] (in test.dwarf) (Rollbar.m:323)

0x0000000100016dbc: +[Rollbar errorError:data:context:] (in test.dwarf) (Rollbar.m:328)

0x0000000100016dd8: +[Rollbar criticalMessage:] (in test.dwarf) (Rollbar.m:335)

0x0000000100016df4: +[Rollbar criticalException:] (in test.dwarf) (Rollbar.m:340)

0x0000000100016e10: +[Rollbar criticalError:] (in test.dwarf) (Rollbar.m:345)

0x0000000100016e2c: +[Rollbar criticalMessage:data:] (in test.dwarf) (Rollbar.m:350)

0x0000000100016e48: +[Rollbar criticalException:data:] (in test.dwarf) (Rollbar.m:355)

0x0000000100016e64: +[Rollbar criticalError:data:] (in test.dwarf) (Rollbar.m:360)

0x0000000100016e80: +[Rollbar criticalMessage:data:context:] (in test.dwarf) (Rollbar.m:365)

0x0000000100016e9c: +[Rollbar criticalException:data:context:] (in test.dwarf) (Rollbar.m:370)

0x0000000100016eb8: +[Rollbar criticalError:data:context:] (in test.dwarf) (Rollbar.m:375)

0x0000000100016ed4: +[Rollbar sendJsonPayload:] (in test.dwarf) (Rollbar.m:382)

0x0000000100016f58: +[Rollbar recordViewEventForLevel:element:] (in test.dwarf) (Rollbar.m:393)

0x0000000100016f60: +[Rollbar recordViewEventForLevel:element:extraData:] (in test.dwarf) (Rollbar.m:398)

0x0000000100016fe0: +[Rollbar recordNetworkEventForLevel:method:url:statusCode:] (in test.dwarf) (Rollbar.m:414)

0x0000000100016fe8: +[Rollbar recordNetworkEventForLevel:method:url:statusCode:extraData:] (in test.dwarf) (Rollbar.m:421)

0x00000001000170a8: +[Rollbar recordConnectivityEventForLevel:status:] (in test.dwarf) (Rollbar.m:439)

0x00000001000170b0: +[Rollbar recordConnectivityEventForLevel:status:extraData:] (in test.dwarf) (Rollbar.m:444)

0x0000000100017130: +[Rollbar recordErrorEventForLevel:message:] (in test.dwarf) (Rollbar.m:458)

0x0000000100017138: +[Rollbar recordErrorEventForLevel:exception:] (in test.dwarf) (Rollbar.m:463)

0x0000000100017268: +[Rollbar recordErrorEventForLevel:message:extraData:] (in test.dwarf) (Rollbar.m:473)

0x00000001000172e8: +[Rollbar recordNavigationEventForLevel:from:to:] (in test.dwarf) (Rollbar.m:488)

0x00000001000172f0: +[Rollbar recordNavigationEventForLevel:from:to:extraData:] (in test.dwarf) (Rollbar.m:494)

0x0000000100017394: +[Rollbar recordManualEventForLevel:withData:] (in test.dwarf) (Rollbar.m:507)

0x00000001000173f8: +[Rollbar recordLogEventForLevel:message:] (in test.dwarf) (Rollbar.m:519)

0x0000000100017400: +[Rollbar recordLogEventForLevel:message:extraData:] (in test.dwarf) (Rollbar.m:524)

0x0000000100017480: +[RollbarConfigUtil initialize] (in test.dwarf) (RollbarConfigUtil.m:17)

0x000000010001752c: +[RollbarConfigUtil getDefaultConfigFileName] (in test.dwarf) (RollbarConfigUtil.m:28)

0x0000000100017538: +[RollbarConfigUtil getDefaultConfigDirectory] (in test.dwarf) (RollbarConfigUtil.m:33)

0x0000000100017544: +[RollbarConfigUtil getDefaultConfigFilePath] (in test.dwarf) (RollbarConfigUtil.m:38)

0x0000000100017550: +[RollbarConfigUtil createRollbarConfigFromFile:error:] (in test.dwarf) (RollbarConfigUtil.m:41)

0x00000001000176e4: +[RollbarConfigUtil createRollbarConfigFromDefaultFile:] (in test.dwarf) (RollbarConfigUtil.m:79)

0x00000001000176fc: +[RollbarConfigUtil saveRollbarConfig:toFile:error:] (in test.dwarf) (RollbarConfigUtil.m:85)

0x0000000100017860: +[RollbarConfigUtil saveRollbarConfig:error:] (in test.dwarf) (RollbarConfigUtil.m:113)

0x0000000100017878: +[RollbarConfigUtil deleteFile:error:] (in test.dwarf) (RollbarConfigUtil.m:121)

0x0000000100017950: +[RollbarConfigUtil deleteDefaultRollbarConfigFile:] (in test.dwarf) (RollbarConfigUtil.m:147)

0x0000000100017968: -[RollbarCrashLoggingFilter filterReports:onCompletion:] (in test.dwarf) (RollbarCrashCollector.m:17)

0x0000000100017a9c: -[RollbarCrashCollector init] (in test.dwarf) (RollbarCrashCollector.m:33)

0x0000000100017ad8: -[RollbarCrashCollector install] (in test.dwarf) (RollbarCrashCollector.m:37)

0x0000000100017c5c: -[RollbarCrashCollector sendAllReports] (in test.dwarf) (RollbarCrashCollector.m:59)

0x0000000100017c68: __39-[RollbarCrashCollector sendAllReports]_block_invoke (in test.dwarf) (RollbarCrashCollector.m:60)

0x0000000100017c9c: -[RollbarCrashCollector sink] (in test.dwarf) (RollbarCrashCollector.m:66)

0x0000000100017d34: __isDebuggerAttached_block_invoke (in test.dwarf) (RollbarCrashCollector.m:81)

0x0000000100017e08: -[RollbarDestinationRecord rateLimitBehavior] (in test.dwarf) (RollbarDestinationRecord.m:12)

0x0000000100017e84: -[RollbarDestinationRecord initWithConfig:andRegistry:] (in test.dwarf) (RollbarDestinationRecord.m:18)

0x00000001000180bc: -[RollbarDestinationRecord initWithDestinationID:andRegistry:] (in test.dwarf) (RollbarDestinationRecord.m:38)

0x00000001000181a0: -[RollbarDestinationRecord canPostWithConfig:] (in test.dwarf) (RollbarDestinationRecord.m:57)

0x00000001000182a0: -[RollbarDestinationRecord recordPostReply:withConfig:] (in test.dwarf) (RollbarDestinationRecord.m:77)

0x00000001000184a0: -[RollbarDestinationRecord description] (in test.dwarf) (RollbarDestinationRecord.m:147)

0x0000000100018548: -[RollbarDestinationRecord destinationID] (in test.dwarf) (RollbarDestinationRecord.h:19)

0x0000000100018554: -[RollbarDestinationRecord localWindowLimit] (in test.dwarf) (RollbarDestinationRecord.h:21)

0x000000010001855c: -[RollbarDestinationRecord setLocalWindowLimit:] (in test.dwarf) (RollbarDestinationRecord.h:21)

0x0000000100018564: -[RollbarDestinationRecord localWindowCount] (in test.dwarf) (RollbarDestinationRecord.h:23)

0x000000010001856c: -[RollbarDestinationRecord serverWindowRemainingCount] (in test.dwarf) (RollbarDestinationRecord.h:24)

0x0000000100018574: -[RollbarDestinationRecord nextLocalWindowStart] (in test.dwarf) (RollbarDestinationRecord.h:25)

0x0000000100018580: -[RollbarDestinationRecord nextServerWindowStart] (in test.dwarf) (RollbarDestinationRecord.h:26)

0x000000010001858c: -[RollbarDestinationRecord nextEarliestPost] (in test.dwarf) (RollbarDestinationRecord.h:27)

0x0000000100018598: -[RollbarDestinationRecord registry] (in test.dwarf) (RollbarDestinationRecord.h:29)

0x00000001000185a4: -[RollbarDestinationRecord .cxx_destruct] (in test.dwarf) (RollbarDestinationRecord.m:6)

0x00000001000185f8: +[RollbarInfrastructure sharedInstance] (in test.dwarf) (RollbarInfrastructure.m:21)

0x0000000100018638: __39+[RollbarInfrastructure sharedInstance]_block_invoke (in test.dwarf) (RollbarInfrastructure.m:25)

0x0000000100018664: -[RollbarInfrastructure configureWith:] (in test.dwarf) (RollbarInfrastructure.m:34)

0x0000000100018988: -[RollbarInfrastructure configuration] (in test.dwarf) (RollbarInfrastructure.h:12)

0x0000000100018994: -[RollbarInfrastructure setConfiguration:] (in test.dwarf) (RollbarInfrastructure.m:15)

0x000000010001899c: -[RollbarInfrastructure logger] (in test.dwarf) (RollbarInfrastructure.h:13)

0x00000001000189a8: -[RollbarInfrastructure setLogger:] (in test.dwarf) (RollbarInfrastructure.m:14)

0x00000001000189b0: -[RollbarInfrastructure collector] (in test.dwarf) (RollbarInfrastructure.m:16)

0x00000001000189bc: -[RollbarInfrastructure setCollector:] (in test.dwarf) (RollbarInfrastructure.m:16)

0x00000001000189c4: -[RollbarInfrastructure .cxx_destruct] (in test.dwarf) (RollbarInfrastructure.m:19)

0x0000000100018a00: RBLog (in test.dwarf) (RollbarInternalLogging.m:16)

0x0000000100018a04: RBErr (in test.dwarf) (RollbarInternalLogging.m:30)

0x0000000100018a08: +[RollbarLogger(Test) clearSdkDataStore] (in test.dwarf) (RollbarLogger+Test.m:10)

0x0000000100018b04: +[RollbarLogger(Test) clearSdkFile:] (in test.dwarf) (RollbarLogger+Test.m:21)

0x0000000100018b48: +[RollbarLogger(Test) readPayloadsFromSdkIncomingLog] (in test.dwarf) (RollbarLogger+Test.m:26)

0x0000000100018b94: +[RollbarLogger(Test) readPayloadsFromSdkTransmittedLog] (in test.dwarf) (RollbarLogger+Test.m:31)

0x0000000100018be0: +[RollbarLogger(Test) readPayloadsFromSdkDroppedLog] (in test.dwarf) (RollbarLogger+Test.m:36)

0x0000000100018c2c: +[RollbarLogger(Test) readPayloadsDataFromFile:] (in test.dwarf) (RollbarLogger+Test.m:41)

0x0000000100018cec: __48+[RollbarLogger(Test) readPayloadsDataFromFile:]_block_invoke (in test.dwarf) (RollbarLogger+Test.m:47)

0x0000000100018dfc: __copy_helper_block_e8_32s (in test.dwarf) (RollbarLogger+Test.m:0)

0x0000000100018e04: __destroy_helper_block_e8_32s (in test.dwarf) (RollbarLogger+Test.m:0)

0x0000000100018e0c: +[RollbarLogger(Test) flushRollbarThread] (in test.dwarf) (RollbarLogger+Test.m:70)

0x0000000100018e6c: +[RollbarLogger(Test) _clearFile:] (in test.dwarf) (RollbarLogger+Test.m:79)

0x0000000100018f64: +[RollbarLogger(Test) _logPayloadsStorePath] (in test.dwarf) (RollbarLogger+Test.m:97)

0x0000000100018fc0: +[RollbarLogger(Test) _telemetryItemsStorePath] (in test.dwarf) (RollbarLogger+Test.m:102)

0x000000010001901c: +[RollbarLogger(Test) _incomingPayloadsLogPath] (in test.dwarf) (RollbarLogger+Test.m:107)

0x0000000100019078: +[RollbarLogger(Test) _transmittedPayloadsLogPath] (in test.dwarf) (RollbarLogger+Test.m:112)

0x00000001000190d4: +[RollbarLogger(Test) _droppedPayloadsLogPath] (in test.dwarf) (RollbarLogger+Test.m:117)

0x0000000100019130: +[RollbarLogger(Test) _getSDKDataFilePath:] (in test.dwarf) (RollbarLogger+Test.m:122)

0x00000001000191a0: +[RollbarLogger(Test) _test_rollbarThread] (in test.dwarf) (RollbarLogger+Test.m:130)

0x00000001000191ac: +[RollbarLogger(Test) _test_doNothing] (in test.dwarf) (RollbarLogger+Test.m:136)

0x00000001000191b0: +[RollbarLogger loggerWithAccessToken:] (in test.dwarf) (RollbarLogger.m:37)

0x00000001000191fc: +[RollbarLogger loggerWithAccessToken:andEnvironment:] (in test.dwarf) (RollbarLogger.m:41)

0x000000010001926c: +[RollbarLogger loggerWithConfiguration:] (in test.dwarf) (RollbarLogger.m:46)

0x00000001000192b8: -[RollbarLogger initWithAccessToken:] (in test.dwarf) (RollbarLogger.m:52)

0x0000000100019340: -[RollbarLogger initWithAccessToken:andEnvironment:] (in test.dwarf) (RollbarLogger.m:58)

0x000000010001940c: -[RollbarLogger initWithConfiguration:] (in test.dwarf) (RollbarLogger.m:66)

0x0000000100019790: -[RollbarLogger logCrashReport:] (in test.dwarf) (RollbarLogger.m:104)

0x00000001000198c4: -[RollbarLogger log:message:data:context:] (in test.dwarf) (RollbarLogger.m:117)

0x00000001000199c8: -[RollbarLogger log:exception:data:context:] (in test.dwarf) (RollbarLogger.m:135)

0x0000000100019acc: -[RollbarLogger log:error:data:context:] (in test.dwarf) (RollbarLogger.m:153)

0x0000000100019bd0: -[RollbarLogger shouldSkipReporting:] (in test.dwarf) (RollbarLogger.m:171)

0x0000000100019c64: -[RollbarLogger report:] (in test.dwarf) (RollbarLogger.m:189)

0x0000000100019cf0: -[RollbarLogger updateConfiguration:] (in test.dwarf) (RollbarLogger.m:197)

0x0000000100019d28: -[RollbarLogger configuration] (in test.dwarf) (RollbarLogger.m:33)

0x0000000100019d34: -[RollbarLogger setConfiguration:] (in test.dwarf) (RollbarLogger.m:33)

0x0000000100019d3c: -[RollbarLogger .cxx_destruct] (in test.dwarf) (RollbarLogger.m:27)

0x0000000100019d6c: +[RollbarNotifierFiles payloadsStore] (in test.dwarf) (RollbarNotifierFiles.m:20)

0x0000000100019d78: +[RollbarNotifierFiles telemetryQueue] (in test.dwarf) (RollbarNotifierFiles.m:25)

0x0000000100019d84: +[RollbarNotifierFiles runtimeSession] (in test.dwarf) (RollbarNotifierFiles.m:30)

0x0000000100019d90: +[RollbarNotifierFiles appQuit] (in test.dwarf) (RollbarNotifierFiles.m:35)

0x0000000100019d9c: +[RollbarNotifierFiles incomingPayloadsLog] (in test.dwarf) (RollbarNotifierFiles.m:40)

0x0000000100019da8: +[RollbarNotifierFiles transmittedPayloadsLog] (in test.dwarf) (RollbarNotifierFiles.m:45)

0x0000000100019db4: +[RollbarNotifierFiles droppedPayloadsLog] (in test.dwarf) (RollbarNotifierFiles.m:50)

0x0000000100019dc0: +[RollbarNotifierFiles config] (in test.dwarf) (RollbarNotifierFiles.m:55)

0x0000000100019dcc: +[RollbarPayloadFactory factoryWithConfig:] (in test.dwarf) (RollbarPayloadFactory.m:34)

0x0000000100019e18: -[RollbarPayloadFactory initWithConfig:] (in test.dwarf) (RollbarPayloadFactory.m:40)

0x0000000100019ee4: -[RollbarPayloadFactory payloadWithLevel:crashReport:] (in test.dwarf) (RollbarPayloadFactory.m:54)

0x0000000100019f18: -[RollbarPayloadFactory payloadWithLevel:message:data:context:] (in test.dwarf) (RollbarPayloadFactory.m:67)

0x0000000100019f48: -[RollbarPayloadFactory payloadWithLevel:exception:data:context:] (in test.dwarf) (RollbarPayloadFactory.m:82)

0x0000000100019f7c: -[RollbarPayloadFactory payloadWithLevel:error:data:context:] (in test.dwarf) (RollbarPayloadFactory.m:97)

0x0000000100019fb4: -[RollbarPayloadFactory buildRollbarPayloadWithLevel:message:exception:error:extra:crashReport:context:] (in test.dwarf) (RollbarPayloadFactory.m:114)

0x000000010001a628: -[RollbarPayloadFactory buildRollbarNotifierModule] (in test.dwarf) (RollbarPayloadFactory.m:200)

0x000000010001a73c: -[RollbarPayloadFactory buildRollbarClient] (in test.dwarf) (RollbarPayloadFactory.m:212)

0x000000010001a988: -[RollbarPayloadFactory buildRollbarPerson] (in test.dwarf) (RollbarPayloadFactory.m:241)

0x000000010001aa18: -[RollbarPayloadFactory buildRollbarServer] (in test.dwarf) (RollbarPayloadFactory.m:250)

0x000000010001aad0: -[RollbarPayloadFactory buildOSData] (in test.dwarf) (RollbarPayloadFactory.m:260)

0x000000010001ad88: -[RollbarPayloadFactory messageFromCrashReport:] (in test.dwarf) (RollbarPayloadFactory.m:301)

0x000000010001ae64: -[RollbarPayloadFactory osData] (in test.dwarf) (RollbarPayloadFactory.m:25)

0x000000010001ae70: -[RollbarPayloadFactory setOsData:] (in test.dwarf) (RollbarPayloadFactory.m:25)

0x000000010001ae78: -[RollbarPayloadFactory .cxx_destruct] (in test.dwarf) (RollbarPayloadFactory.m:29)

0x000000010001aea8: +[RollbarPayloadPostReply replyFromHttpResponse:] (in test.dwarf) (RollbarPayloadPostReply.m:10)

0x000000010001af98: -[RollbarPayloadPostReply initWithStatusCode:rateLimit:remainingCount:remainingSeconds:] (in test.dwarf) (RollbarPayloadPostReply.m:21)

0x000000010001b03c: -[RollbarPayloadPostReply description] (in test.dwarf) (RollbarPayloadPostReply.m:41)

0x000000010001b0dc: +[RollbarPayloadPostReply greenReply] (in test.dwarf) (RollbarPayloadPostReply.m:61)

0x000000010001b10c: +[RollbarPayloadPostReply yellowReply] (in test.dwarf) (RollbarPayloadPostReply.m:71)

0x000000010001b13c: +[RollbarPayloadPostReply redReply] (in test.dwarf) (RollbarPayloadPostReply.m:81)

0x000000010001b16c: -[RollbarPayloadPostReply statusCode] (in test.dwarf) (RollbarPayloadPostReply.h:14)

0x000000010001b174: -[RollbarPayloadPostReply rateLimit] (in test.dwarf) (RollbarPayloadPostReply.h:15)

0x000000010001b17c: -[RollbarPayloadPostReply remainingCount] (in test.dwarf) (RollbarPayloadPostReply.h:16)

0x000000010001b184: -[RollbarPayloadPostReply remainingSeconds] (in test.dwarf) (RollbarPayloadPostReply.h:17)

0x000000010001b18c: -[RollbarPayloadPostReply nextPostTime] (in test.dwarf) (RollbarPayloadPostReply.h:18)

0x000000010001b198: -[RollbarPayloadPostReply .cxx_destruct] (in test.dwarf) (RollbarPayloadPostReply.m:8)

0x000000010001b1a4: +[RollbarPayloadRepository repositoryWithFlag:] (in test.dwarf) (RollbarPayloadRepository.m:95)

0x000000010001b1dc: +[RollbarPayloadRepository repositoryWithPath:] (in test.dwarf) (RollbarPayloadRepository.m:106)

0x000000010001b228: +[RollbarPayloadRepository inMemoryRepository] (in test.dwarf) (RollbarPayloadRepository.m:113)

0x000000010001b238: +[RollbarPayloadRepository persistentRepository] (in test.dwarf) (RollbarPayloadRepository.m:118)

0x000000010001b248: +[RollbarPayloadRepository persistentRepositoryWithPath:] (in test.dwarf) (RollbarPayloadRepository.m:123)

0x000000010001b254: +[RollbarPayloadRepository initialize] (in test.dwarf) (RollbarPayloadRepository.m:130)

0x000000010001b258: -[RollbarPayloadRepository initInMemoryOnly] (in test.dwarf) (RollbarPayloadRepository.m:134)

0x000000010001b2bc: -[RollbarPayloadRepository initWithStore:] (in test.dwarf) (RollbarPayloadRepository.m:145)

0x000000010001b350: -[RollbarPayloadRepository init] (in test.dwarf) (RollbarPayloadRepository.m:157)

0x000000010001b3f0: -[RollbarPayloadRepository addDestinationWithEndpoint:andAccesToken:] (in test.dwarf) (RollbarPayloadRepository.m:170)

0x000000010001b544: -[RollbarPayloadRepository getIDofDestinationWithEndpoint:andAccesToken:] (in test.dwarf) (RollbarPayloadRepository.m:192)

0x000000010001b668: selectSingleRowCallback (in test.dwarf) (RollbarPayloadRepository.m:35)

0x000000010001b778: -[RollbarPayloadRepository getDestinationWithEndpoint:andAccesToken:] (in test.dwarf) (RollbarPayloadRepository.m:221)

0x000000010001b7ec: -[RollbarPayloadRepository getDestinationByID:] (in test.dwarf) (RollbarPayloadRepository.m:236)

0x000000010001b8d4: -[RollbarPayloadRepository getAllDestinations] (in test.dwarf) (RollbarPayloadRepository.m:254)

0x000000010001b8e8: selectMultipleRowsCallback (in test.dwarf) (RollbarPayloadRepository.m:55)

0x000000010001ba30: -[RollbarPayloadRepository removeDestinationWithEndpoint:andAccesToken:] (in test.dwarf) (RollbarPayloadRepository.m:259)

0x000000010001ba94: -[RollbarPayloadRepository removeDestinationByID:] (in test.dwarf) (RollbarPayloadRepository.m:271)

0x000000010001baf8: -[RollbarPayloadRepository removeUnusedDestinations] (in test.dwarf) (RollbarPayloadRepository.m:283)

0x000000010001bb04: -[RollbarPayloadRepository removeAllDestinations] (in test.dwarf) (RollbarPayloadRepository.m:289)

0x000000010001bb10: -[RollbarPayloadRepository addPayload:withConfig:andDestinationID:] (in test.dwarf) (RollbarPayloadRepository.m:294)

0x000000010001bd4c: -[RollbarPayloadRepository getPayloadByID:] (in test.dwarf) (RollbarPayloadRepository.m:325)

0x000000010001bdc0: -[RollbarPayloadRepository getAllPayloadsWithDestinationID:] (in test.dwarf) (RollbarPayloadRepository.m:338)

0x000000010001be34: -[RollbarPayloadRepository getPayloadsWithDestinationID:andLimit:] (in test.dwarf) (RollbarPayloadRepository.m:351)

0x000000010001be40: -[RollbarPayloadRepository getPayloadsWithDestinationID:andOffset:andLimit:] (in test.dwarf) (RollbarPayloadRepository.m:357)

0x000000010001beb8: -[RollbarPayloadRepository getPayloadsWithLimit:] (in test.dwarf) (RollbarPayloadRepository.m:375)

0x000000010001bec4: -[RollbarPayloadRepository getPayloadsWithOffset:andLimit:] (in test.dwarf) (RollbarPayloadRepository.m:380)

0x000000010001bf38: -[RollbarPayloadRepository getAllPayloads] (in test.dwarf) (RollbarPayloadRepository.m:397)

0x000000010001bf4c: -[RollbarPayloadRepository getPayloadCount] (in test.dwarf) (RollbarPayloadRepository.m:402)

0x000000010001bfe0: -[RollbarPayloadRepository removePayloadByID:] (in test.dwarf) (RollbarPayloadRepository.m:420)

0x000000010001c044: -[RollbarPayloadRepository removePayloadsOlderThan:] (in test.dwarf) (RollbarPayloadRepository.m:428)

0x000000010001c0b4: -[RollbarPayloadRepository removeAllPayloads] (in test.dwarf) (RollbarPayloadRepository.m:442)

0x000000010001c0c0: -[RollbarPayloadRepository checkIfTableExists_Destinations] (in test.dwarf) (RollbarPayloadRepository.m:449)

0x000000010001c0cc: -[RollbarPayloadRepository checkIfTableExists_Payloads] (in test.dwarf) (RollbarPayloadRepository.m:455)

0x000000010001c0d8: -[RollbarPayloadRepository checkIfTableExists_Unknown] (in test.dwarf) (RollbarPayloadRepository.m:461)

0x000000010001c0e4: -[RollbarPayloadRepository clearDestinations] (in test.dwarf) (RollbarPayloadRepository.m:467)

0x000000010001c0e8: -[RollbarPayloadRepository clearPayloads] (in test.dwarf) (RollbarPayloadRepository.m:472)

0x000000010001c0ec: -[RollbarPayloadRepository clear] (in test.dwarf) (RollbarPayloadRepository.m:475)

0x000000010001c120: -[RollbarPayloadRepository initDB:] (in test.dwarf) (RollbarPayloadRepository.m:486)

0x000000010001c190: -[RollbarPayloadRepository openDB:] (in test.dwarf) (RollbarPayloadRepository.m:499)

0x000000010001c21c: -[RollbarPayloadRepository ensureDestinationsTable] (in test.dwarf) (RollbarPayloadRepository.m:517)

0x000000010001c274: -[RollbarPayloadRepository ensurePayloadsTable] (in test.dwarf) (RollbarPayloadRepository.m:525)

0x000000010001c2cc: -[RollbarPayloadRepository releaseDB] (in test.dwarf) (RollbarPayloadRepository.m:535)

0x000000010001c2f4: -[RollbarPayloadRepository checkIfTableExists:] (in test.dwarf) (RollbarPayloadRepository.m:541)

0x000000010001c3c4: checkIfTableExistsCallback (in test.dwarf) (RollbarPayloadRepository.m:26)

0x000000010001c3dc: -[RollbarPayloadRepository executeSql:] (in test.dwarf) (RollbarPayloadRepository.m:559)

0x000000010001c480: -[RollbarPayloadRepository selectSingleRowWithSql:andCallback:] (in test.dwarf) (RollbarPayloadRepository.m:574)

0x000000010001c530: -[RollbarPayloadRepository selectMultipleRowsWithSql:andCallback:] (in test.dwarf) (RollbarPayloadRepository.m:592)

0x000000010001c600: -[RollbarPayloadRepository checkDbFile] (in test.dwarf) (RollbarPayloadRepository.m:615)

0x000000010001c740: -[RollbarPayloadRepository .cxx_destruct] (in test.dwarf) (RollbarPayloadRepository.m:84)

0x000000010001c74c: +[RollbarPayloadTruncator truncatePayloads:] (in test.dwarf) (RollbarPayloadTruncator.m:31)

0x000000010001c75c: +[RollbarPayloadTruncator truncatePayloads:toMaxByteSize:] (in test.dwarf) (RollbarPayloadTruncator.m:34)

0x000000010001c7b0: __58+[RollbarPayloadTruncator truncatePayloads:toMaxByteSize:]_block_invoke (in test.dwarf) (RollbarPayloadTruncator.m:39)

0x000000010001c7c8: +[RollbarPayloadTruncator truncatePayload:] (in test.dwarf) (RollbarPayloadTruncator.m:45)

0x000000010001c7d8: +[RollbarPayloadTruncator truncatePayload:toTotalBytes:] (in test.dwarf) (RollbarPayloadTruncator.m:48)

0x000000010001c9e8: +[RollbarPayloadTruncator limitRawCrashReportInPayload:] (in test.dwarf) (RollbarPayloadTruncator.m:112)

0x000000010001cb5c: +[RollbarPayloadTruncator truncatePayload:toTotalBytes:withExceptionMessageLimit:andTraceFramesLimit:] (in test.dwarf) (RollbarPayloadTruncator.m:134)

0x000000010001ccdc: __102+[RollbarPayloadTruncator truncatePayload:toTotalBytes:withExceptionMessageLimit:andTraceFramesLimit:]_block_invoke (in test.dwarf) (RollbarPayloadTruncator.m:165)

0x000000010001ce04: +[RollbarPayloadTruncator truncatePayload:toTotalBytes:byLimitingStringBytes:] (in test.dwarf) (RollbarPayloadTruncator.m:187)

0x000000010001ce70: +[RollbarPayloadTruncator itereateObjectStructure:whileTuncatingStrings:] (in test.dwarf) (RollbarPayloadTruncator.m:202)

0x000000010001d078: __73+[RollbarPayloadTruncator itereateObjectStructure:whileTuncatingStrings:]_block_invoke (in test.dwarf) (RollbarPayloadTruncator.m:216)

0x000000010001d090: __73+[RollbarPayloadTruncator itereateObjectStructure:whileTuncatingStrings:]_block_invoke_2 (in test.dwarf) (RollbarPayloadTruncator.m:224)

0x000000010001d1bc: __73+[RollbarPayloadTruncator itereateObjectStructure:whileTuncatingStrings:]_block_invoke.35 (in test.dwarf) (RollbarPayloadTruncator.m:246)

0x000000010001d1d4: +[RollbarPayloadTruncator isMutable:] (in test.dwarf) (RollbarPayloadTruncator.m:260)

0x000000010001d224: +[RollbarPayloadTruncator truncatePayload:toTotalBytes:byReducingItems:keepingHeadsCount:keepingTailsCount:] (in test.dwarf) (RollbarPayloadTruncator.m:266)

0x000000010001d374: +[RollbarPayloadTruncator isTruncationNeeded:forLimit:] (in test.dwarf) (RollbarPayloadTruncator.m:298)

0x000000010001d3cc: +[RollbarPayloadTruncator measureTotalEncodingBytes:] (in test.dwarf) (RollbarPayloadTruncator.m:310)

0x000000010001d3dc: +[RollbarPayloadTruncator measureTotalEncodingBytes:usingEncoding:] (in test.dwarf) (RollbarPayloadTruncator.m:315)

0x000000010001d3e8: +[RollbarPayloadTruncator truncateString:toTotalBytes:] (in test.dwarf) (RollbarPayloadTruncator.m:323)

0x000000010001d528: +[RollbarReachability reachabilityWithHostName:] (in test.dwarf) (RollbarReachability.m:115)

0x000000010001d534: +[RollbarReachability reachabilityWithHostname:] (in test.dwarf) (RollbarReachability.m:118)

0x000000010001d5b4: +[RollbarReachability reachabilityWithAddress:] (in test.dwarf) (RollbarReachability.m:145)

0x000000010001d5fc: +[RollbarReachability reachabilityForInternetConnection] (in test.dwarf) (RollbarReachability.m:162)

0x000000010001d65c: +[RollbarReachability reachabilityForLocalWiFi] (in test.dwarf) (RollbarReachability.m:172)

0x000000010001d6c4: -[RollbarReachability initWithReachabilityRef:] (in test.dwarf) (RollbarReachability.m:187)

0x000000010001d728: -[RollbarReachability dealloc] (in test.dwarf) (RollbarReachability.m:199)

0x000000010001d7a8: -[RollbarReachability startNotifier] (in test.dwarf) (RollbarReachability.m:224)

0x000000010001d8dc: TMReachabilityCallback (in test.dwarf) (RollbarReachability.m:81)

0x000000010001d92c: -[RollbarReachability stopNotifier] (in test.dwarf) (RollbarReachability.m:295)

0x000000010001d998: -[RollbarReachability isReachableWithFlags:] (in test.dwarf) (RollbarReachability.m:326)

0x000000010001d9d4: -[RollbarReachability isReachable] (in test.dwarf) (RollbarReachability.m:351)

0x000000010001da14: -[RollbarReachability isReachableViaWWAN] (in test.dwarf) (RollbarReachability.m:361)

0x000000010001da60: -[RollbarReachability isReachableViaWiFi] (in test.dwarf) (RollbarReachability.m:384)

0x000000010001daa0: -[RollbarReachability isConnectionRequired] (in test.dwarf) (RollbarReachability.m:412)

0x000000010001daa4: -[RollbarReachability connectionRequired] (in test.dwarf) (RollbarReachability.m:415)

0x000000010001dadc: -[RollbarReachability isConnectionOnDemand] (in test.dwarf) (RollbarReachability.m:428)

0x000000010001db18: -[RollbarReachability isInterventionRequired] (in test.dwarf) (RollbarReachability.m:442)

0x000000010001db50: -[RollbarReachability currentReachabilityStatus] (in test.dwarf) (RollbarReachability.m:458)

0x000000010001db90: -[RollbarReachability reachabilityFlags] (in test.dwarf) (RollbarReachability.m:474)

0x000000010001dbc4: -[RollbarReachability currentReachabilityString] (in test.dwarf) (RollbarReachability.m:486)

0x000000010001dc80: -[RollbarReachability currentReachabilityFlags] (in test.dwarf) (RollbarReachability.m:503)

0x000000010001dd38: -[RollbarReachability reachabilityChanged:] (in test.dwarf) (RollbarReachability.m:510)

0x000000010001de24: __43-[RollbarReachability reachabilityChanged:]_block_invoke (in test.dwarf) (RollbarReachability.m:528)

0x000000010001de6c: -[RollbarReachability description] (in test.dwarf) (RollbarReachability.m:536)

0x000000010001dee0: -[RollbarReachability reachabilityRef] (in test.dwarf) (RollbarReachability.m:101)

0x000000010001dee8: -[RollbarReachability setReachabilityRef:] (in test.dwarf) (RollbarReachability.m:0)

0x000000010001def0: -[RollbarReachability reachabilitySerialQueue] (in test.dwarf) (RollbarReachability.m:102)

0x000000010001def8: -[RollbarReachability setReachabilitySerialQueue:] (in test.dwarf) (RollbarReachability.m:102)

0x000000010001df04: -[RollbarReachability reachableOnWWAN] (in test.dwarf) (RollbarReachability.m:104)

0x000000010001df0c: -[RollbarReachability setReachableOnWWAN:] (in test.dwarf) (RollbarReachability.m:0)

0x000000010001df14: -[RollbarReachability reachableBlock] (in test.dwarf) (RollbarReachability.m:106)

0x000000010001df1c: -[RollbarReachability setReachableBlock:] (in test.dwarf) (RollbarReachability.m:106)

0x000000010001df24: -[RollbarReachability unreachableBlock] (in test.dwarf) (RollbarReachability.m:107)

0x000000010001df2c: -[RollbarReachability setUnreachableBlock:] (in test.dwarf) (RollbarReachability.m:107)

0x000000010001df34: -[RollbarReachability reachabilityObject] (in test.dwarf) (RollbarReachability.m:109)

0x000000010001df3c: -[RollbarReachability setReachabilityObject:] (in test.dwarf) (RollbarReachability.m:109)

0x000000010001df48: -[RollbarReachability .cxx_destruct] (in test.dwarf) (RollbarReachability.m:99)

0x000000010001df90: -[RollbarRegistry init] (in test.dwarf) (RollbarRegistry.m:11)

0x000000010001e000: -[RollbarRegistry getRecordForConfig:] (in test.dwarf) (RollbarRegistry.m:19)

0x000000010001e2a4: -[RollbarRegistry getRecordForEndpoint:andAccessToken:] (in test.dwarf) (RollbarRegistry.m:34)

0x000000010001e404: -[RollbarRegistry totalDestinationRecords] (in test.dwarf) (RollbarRegistry.m:52)

0x000000010001e40c: -[RollbarRegistry description] (in test.dwarf) (RollbarRegistry.m:57)

0x000000010001e4a4: +[RollbarRegistry destinationID:] (in test.dwarf) (RollbarRegistry.m:68)

0x000000010001e534: +[RollbarRegistry destinationIDwithEndpoint:andAccessToken:] (in test.dwarf) (RollbarRegistry.m:74)

0x000000010001e564: -[RollbarRegistry .cxx_destruct] (in test.dwarf) (RollbarRegistry.m:6)

0x000000010001e570: -[RollbarSender sendPayload:usingConfig:] (in test.dwarf) (RollbarSender.m:12)

0x000000010001e6ac: -[RollbarSender transmitPayload:toDestination:usingDeveloperOptions:andHttpProxySettings:andHttpsProxySettings:] (in test.dwarf) (RollbarSender.m:30)

0x000000010001e964: -[RollbarSender postPayload:toDestination:usingDeveloperOptions:andHttpProxySettings:andHttpsProxySettings:] (in test.dwarf) (RollbarSender.m:54)

0x000000010001ee88: __Block_byref_object_copy_ (in test.dwarf) (RollbarSender.m:0)

0x000000010001ee98: __Block_byref_object_dispose_ (in test.dwarf) (RollbarSender.m:0)

0x000000010001eea0: __108-[RollbarSender postPayload:toDestination:usingDeveloperOptions:andHttpProxySettings:andHttpsProxySettings:]_block_invoke (in test.dwarf) (RollbarSender.m:95)

0x000000010001eee8: __copy_helper_block_e8_32s40s48r (in test.dwarf) (RollbarSender.m:0)

0x000000010001ef24: __destroy_helper_block_e8_32s40s48r (in test.dwarf) (RollbarSender.m:0)

0x000000010001ef58: -[RollbarSender checkPayloadResponse:error:] (in test.dwarf) (RollbarSender.m:107)

0x000000010001f024: +[RollbarTelemetry NSLogReplacement:] (in test.dwarf) (RollbarTelemetry.m:40)

0x000000010001f0f8: +[RollbarTelemetry sharedInstance] (in test.dwarf) (RollbarTelemetry.m:60)

0x000000010001f138: __34+[RollbarTelemetry sharedInstance]_block_invoke (in test.dwarf) (RollbarTelemetry.m:65)

0x000000010001f1ac: +[RollbarTelemetry sharedInstanceExists] (in test.dwarf) (RollbarTelemetry.m:73)

0x000000010001f1e8: -[RollbarTelemetry init] (in test.dwarf) (RollbarTelemetry.m:80)

0x000000010001f2f0: -[RollbarTelemetry configureWithOptions:] (in test.dwarf) (RollbarTelemetry.m:101)

0x000000010001f488: -[RollbarTelemetry telemetryOptions] (in test.dwarf) (RollbarTelemetry.m:119)

0x000000010001f4d4: -[RollbarTelemetry setCaptureLog:] (in test.dwarf) (RollbarTelemetry.m:124)

0x000000010001f52c: __34-[RollbarTelemetry setCaptureLog:]_block_invoke (in test.dwarf) (RollbarTelemetry.m:127)

0x000000010001f53c: -[RollbarTelemetry setDataLimit:] (in test.dwarf) (RollbarTelemetry.m:131)

0x000000010001f598: __33-[RollbarTelemetry setDataLimit:]_block_invoke (in test.dwarf) (RollbarTelemetry.m:134)

0x000000010001f5a8: -[RollbarTelemetry recordEvent:] (in test.dwarf) (RollbarTelemetry.m:141)

0x000000010001f870: __32-[RollbarTelemetry recordEvent:]_block_invoke (in test.dwarf) (RollbarTelemetry.m:151)

0x000000010001f8f8: __copy_helper_block_e8_32s40r (in test.dwarf) (RollbarTelemetry.m:0)

0x000000010001f92c: __destroy_helper_block_e8_32s40r (in test.dwarf) (RollbarTelemetry.m:0)

0x000000010001f958: __32-[RollbarTelemetry recordEvent:]_block_invoke.14 (in test.dwarf) (RollbarTelemetry.m:168)

0x000000010001fa28: __32-[RollbarTelemetry recordEvent:]_block_invoke_2 (in test.dwarf) (RollbarTelemetry.m:174)

0x000000010001fa34: __copy_helper_block_e8_32s40s (in test.dwarf) (RollbarTelemetry.m:0)

0x000000010001fa5c: __destroy_helper_block_e8_32s40s (in test.dwarf) (RollbarTelemetry.m:0)

0x000000010001fa84: -[RollbarTelemetry recordEventWithLevel:eventBody:] (in test.dwarf) (RollbarTelemetry.m:183)

0x000000010001fa9c: -[RollbarTelemetry recordEventWithLevel:source:eventBody:] (in test.dwarf) (RollbarTelemetry.m:192)

0x000000010001fb34: -[RollbarTelemetry recordEventForLevel:type:data:] (in test.dwarf) (RollbarTelemetry.m:207)

0x000000010001fd44: -[RollbarTelemetry recordViewEventForLevel:element:extraData:] (in test.dwarf) (RollbarTelemetry.m:228)

0x000000010001fdd4: -[RollbarTelemetry recordNetworkEventForLevel:method:url:statusCode:extraData:] (in test.dwarf) (RollbarTelemetry.m:237)

0x000000010001feac: -[RollbarTelemetry recordConnectivityEventForLevel:status:extraData:] (in test.dwarf) (RollbarTelemetry.m:255)

0x000000010001ff58: -[RollbarTelemetry recordErrorEventForLevel:message:extraData:] (in test.dwarf) (RollbarTelemetry.m:268)

0x0000000100020004: -[RollbarTelemetry recordNavigationEventForLevel:from:to:extraData:] (in test.dwarf) (RollbarTelemetry.m:281)

0x00000001000200cc: -[RollbarTelemetry recordManualEventForLevel:withData:] (in test.dwarf) (RollbarTelemetry.m:296)

0x0000000100020150: -[RollbarTelemetry recordLogEventForLevel:message:extraData:] (in test.dwarf) (RollbarTelemetry.m:307)

0x00000001000201fc: -[RollbarTelemetry getAllEvents] (in test.dwarf) (RollbarTelemetry.m:322)

0x00000001000204ac: -[RollbarTelemetry getAllData] (in test.dwarf) (RollbarTelemetry.m:350)

0x0000000100020564: __Block_byref_object_copy_ (in test.dwarf) (RollbarTelemetry.m:0)

0x0000000100020574: __Block_byref_object_dispose_ (in test.dwarf) (RollbarTelemetry.m:0)

0x000000010002057c: __30-[RollbarTelemetry getAllData]_block_invoke (in test.dwarf) (RollbarTelemetry.m:353)

0x00000001000205b8: -[RollbarTelemetry clearAllData] (in test.dwarf) (RollbarTelemetry.m:360)

0x0000000100020614: __32-[RollbarTelemetry clearAllData]_block_invoke (in test.dwarf) (RollbarTelemetry.m:362)

0x00000001000206b4: __32-[RollbarTelemetry clearAllData]_block_invoke_2 (in test.dwarf) (RollbarTelemetry.m:367)

0x00000001000206c0: -[RollbarTelemetry trimDataArray] (in test.dwarf) (RollbarTelemetry.m:374)

0x000000010002072c: -[RollbarTelemetry serializedDataArray] (in test.dwarf) (RollbarTelemetry.m:390)

0x000000010002076c: -[RollbarTelemetry saveTelemetryData:] (in test.dwarf) (RollbarTelemetry.m:402)

0x00000001000207c0: -[RollbarTelemetry loadTelemetryData] (in test.dwarf) (RollbarTelemetry.m:412)

0x0000000100020890: -[RollbarTelemetry enabled] (in test.dwarf) (RollbarTelemetry.h:58)

0x000000010002089c: -[RollbarTelemetry setEnabled:] (in test.dwarf) (RollbarTelemetry.h:58)

0x00000001000208a4: -[RollbarTelemetry scrubViewInputs] (in test.dwarf) (RollbarTelemetry.h:61)

0x00000001000208b0: -[RollbarTelemetry setScrubViewInputs:] (in test.dwarf) (RollbarTelemetry.h:61)

0x00000001000208b8: -[RollbarTelemetry viewInputsToScrub] (in test.dwarf) (RollbarTelemetry.h:64)

0x00000001000208c4: -[RollbarTelemetry setViewInputsToScrub:] (in test.dwarf) (RollbarTelemetry.h:64)

0x00000001000208cc: -[RollbarTelemetry .cxx_destruct] (in test.dwarf) (RollbarTelemetry.m:31)

0x0000000100020908: -[RollbarTelemetryOptionsObserver registerAsObserverForTelemetryOptions:] (in test.dwarf) (RollbarTelemetryOptionsObserver.m:15)

0x00000001000209b8: -[RollbarTelemetryOptionsObserver unregisterAsObserverForTelemetryOptions:] (in test.dwarf) (RollbarTelemetryOptionsObserver.m:28)

0x0000000100020a60: -[RollbarTelemetryOptionsObserver observeValueForKeyPath:ofObject:change:context:] (in test.dwarf) (RollbarTelemetryOptionsObserver.m:39)

0x0000000100020ba4: +[RollbarTelemetryThread sharedInstance] (in test.dwarf) (RollbarTelemetryThread.m:22)

0x0000000100020c18: __40+[RollbarTelemetryThread sharedInstance]_block_invoke (in test.dwarf) (RollbarTelemetryThread.m:26)

0x0000000100020ce4: +[RollbarTelemetryThread sharedInstanceExists] (in test.dwarf) (RollbarTelemetryThread.m:50)

0x0000000100020cf8: -[RollbarTelemetryThread initWithTarget:selector:object:] (in test.dwarf) (RollbarTelemetryThread.m:53)

0x0000000100020d98: -[RollbarTelemetryThread configureWithOptions:] (in test.dwarf) (RollbarTelemetryThread.m:72)

0x0000000100020dec: -[RollbarTelemetryThread telemetryOptions] (in test.dwarf) (RollbarTelemetryThread.m:91)

0x0000000100020dfc: -[RollbarTelemetryThread setupTimer] (in test.dwarf) (RollbarTelemetryThread.m:94)

0x0000000100020ef4: +[RollbarTelemetryThread calculateCollectionTimeInterval:] (in test.dwarf) (RollbarTelemetryThread.m:131)

0x0000000100020efc: -[RollbarTelemetryThread start] (in test.dwarf) (RollbarTelemetryThread.m:161)

0x0000000100020f88: __31-[RollbarTelemetryThread start]_block_invoke (in test.dwarf) (RollbarTelemetryThread.m:168)

0x0000000100020fc0: -[RollbarTelemetryThread run] (in test.dwarf) (RollbarTelemetryThread.m:175)

0x00000001000210c4: -[RollbarTelemetryThread attemptCollection] (in test.dwarf) (RollbarTelemetryThread.m:196)

0x0000000100021128: -[RollbarTelemetryThread attemptMemoryStatsCollection] (in test.dwarf) (RollbarTelemetryThread.m:216)

0x00000001000211d0: -[RollbarTelemetryThread collectMemoryStats] (in test.dwarf) (RollbarTelemetryThread.m:235)

0x00000001000212ac: -[RollbarTelemetryThread active] (in test.dwarf) (RollbarTelemetryThread.h:23)

0x00000001000212c0: -[RollbarTelemetryThread setActive:] (in test.dwarf) (RollbarTelemetryThread.h:23)

0x00000001000212d0: -[RollbarTelemetryThread .cxx_destruct] (in test.dwarf) (RollbarTelemetryThread.m:13)

0x0000000100021310: -[RollbarThread initWithTarget:selector:object:] (in test.dwarf) (RollbarThread.m:36)

0x00000001000215a4: __48-[RollbarThread initWithTarget:selector:object:]_block_invoke (in test.dwarf) (RollbarThread.m:65)

0x00000001000215f8: __copy_helper_block_e8_32s40w (in test.dwarf) (RollbarThread.m:0)

0x0000000100021628: __destroy_helper_block_e8_32s40w (in test.dwarf) (RollbarThread.m:0)

0x0000000100021650: __48-[RollbarThread initWithTarget:selector:object:]_block_invoke.5 (in test.dwarf) (RollbarThread.m:69)

0x0000000100021698: -[RollbarThread setupDataStorage] (in test.dwarf) (RollbarThread.m:84)

0x00000001000217ec: -[RollbarThread run] (in test.dwarf) (RollbarThread.m:99)

0x0000000100021900: -[RollbarThread persistPayload:withConfig:] (in test.dwarf) (RollbarThread.m:118)

0x00000001000219dc: +[RollbarThread shouldIgnorePayload:withConfig:] (in test.dwarf) (RollbarThread.m:128)

0x0000000100021b60: +[RollbarThread modifyPayload:withConfig:] (in test.dwarf) (RollbarThread.m:150)

0x0000000100021cf0: +[RollbarThread scrubPayload:withConfig:] (in test.dwarf) (RollbarThread.m:167)

0x0000000100021f0c: +[RollbarThread getScrubFields:] (in test.dwarf) (RollbarThread.m:190)

0x00000001000221d8: +[RollbarThread createMutableDataWithData:forPath:] (in test.dwarf) (RollbarThread.m:223)

0x00000001000223d8: +[RollbarThread truncatePayload:] (in test.dwarf) (RollbarThread.m:250)

0x0000000100022490: -[RollbarThread queuePayload_OnlyCallOnThisThread:] (in test.dwarf) (RollbarThread.m:266)

0x0000000100022714: -[RollbarThread savePayload:withConfig:] (in test.dwarf) (RollbarThread.m:289)

0x0000000100023210: -[RollbarThread checkItems] (in test.dwarf) (RollbarThread.m:387)

0x0000000100023274: -[RollbarThread checkProcessStalePayload:] (in test.dwarf) (RollbarThread.m:401)

0x0000000100023560: -[RollbarThread processSavedPayload:] (in test.dwarf) (RollbarThread.m:433)

0x0000000100023b10: -[RollbarThread processSavedItems] (in test.dwarf) (RollbarThread.m:508)

0x0000000100023cd4: -[RollbarThread sendPayload:withConfig:] (in test.dwarf) (RollbarThread.m:527)

0x0000000100023d7c: -[RollbarThread sendPayload:toDestination:withConfig:] (in test.dwarf) (RollbarThread.m:537)

0x0000000100023eb0: -[RollbarThread captureTelemetryDataForNetwork:] (in test.dwarf) (RollbarThread.m:577)

0x0000000100024070: -[RollbarThread rateLimitBehavior] (in test.dwarf) (RollbarThread.m:607)

0x00000001000240ec: -[RollbarThread removePayloadByID:] (in test.dwarf) (RollbarThread.m:611)

0x0000000100024158: -[RollbarThread loggableStringFromPayload:result:] (in test.dwarf) (RollbarThread.m:619)

0x000000010002421c: +[RollbarThread sharedInstance] (in test.dwarf) (RollbarThread.m:629)

0x0000000100024290: __31+[RollbarThread sharedInstance]_block_invoke (in test.dwarf) (RollbarThread.m:633)

0x00000001000242d8: -[RollbarThread active] (in test.dwarf) (RollbarThread.h:12)

0x00000001000242ec: -[RollbarThread setActive:] (in test.dwarf) (RollbarThread.h:12)

0x00000001000242fc: -[RollbarThread .cxx_destruct] (in test.dwarf) (RollbarThread.m:21)

0x0000000100024378: protocol witness for RawRepresentable.init(rawValue:) in conformance Diagnostic (in test.dwarf) (<compiler-generated>:0)

0x00000001000243a4: protocol witness for RawRepresentable.rawValue.getter in conformance Diagnostic (in test.dwarf) (<compiler-generated>:0)

0x00000001000244a4: protocol witness for CustomStringConvertible.description.getter in conformance Diagnostic (in test.dwarf) (<compiler-generated>:0)

0x0000000100024510: initializeBufferWithCopyOfBuffer for Diagnostic (in test.dwarf) (<compiler-generated>:0)

0x0000000100024540: destroy for Diagnostic (in test.dwarf) (<compiler-generated>:0)

0x0000000100024568: initializeWithCopy for Diagnostic (in test.dwarf) (<compiler-generated>:0)

0x00000001000245a4: assignWithCopy for Diagnostic (in test.dwarf) (<compiler-generated>:0)

0x0000000100024610: __swift_memcpy32_8 (in test.dwarf) (<compiler-generated>:0)

0x000000010002461c: assignWithTake for Diagnostic (in test.dwarf) (<compiler-generated>:0)

0x0000000100024660: getEnumTagSinglePayload for Diagnostic (in test.dwarf) (<compiler-generated>:0)

0x00000001000246a8: storeEnumTagSinglePayload for Diagnostic (in test.dwarf) (<compiler-generated>:0)

0x00000001000246e8: type metadata accessor for Diagnostic (in test.dwarf) (<compiler-generated>:0)

0x00000001000246f8: __swift_instantiateConcreteTypeFromMangledName (in test.dwarf) (<compiler-generated>:0)

0x0000000100024734: specialized Diagnostic.init(rawValue:) (in test.dwarf) (Diagnostic.swift:0)

0x0000000100024918: outlined destroy of Any? (in test.dwarf) (<compiler-generated>:0)

0x0000000100024958: outlined init with copy of Any (in test.dwarf) (<compiler-generated>:0)

0x0000000100024994: RollbarCrashDiagnosticFilter.filterReports(_:onCompletion:) (in test.dwarf) (RollbarCrashDiagnosticFilter.swift:20)

0x0000000100024bc8: specialized Collection.map<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100024ee0: specialized Sequence.compactMap<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100024fdc: specialized _arrayForceCast<A, B>(_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010002511c: @objc RollbarCrashDiagnosticFilter.filterReports(_:onCompletion:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000251d8: RollbarCrashDiagnosticFilter.__allocating_init() (in test.dwarf) (RollbarCrashDiagnosticFilter.swift:9)

0x00000001000251f8: RollbarCrashDiagnosticFilter.init() (in test.dwarf) (RollbarCrashDiagnosticFilter.swift:9)

0x0000000100025228: @objc RollbarCrashDiagnosticFilter.init() (in test.dwarf) + 0

0x000000010002523c: RollbarCrashDiagnosticFilter.__deallocating_deinit (in test.dwarf) + 0

0x0000000100025248: one-time initialization function for requiredKeys (in test.dwarf) (RollbarCrashDiagnosticFilter.swift:0)

0x0000000100025278: specialized StringProtocol.matches(in:) (in test.dwarf) (Prelude.swift:274)

0x00000001000254ec: @objc SwiftDiagnosisFormatter.string(for:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100025590: @objc SwiftDiagnosisFormatter.init() (in test.dwarf) + 0

0x00000001000255a4: @objc RollbarCrashDiagnosticFilter.init() (in test.dwarf) + 0

0x00000001000255e4: @objc SwiftDiagnosisFormatter.init(coder:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100025628: SwiftDiagnosisFormatter.__deallocating_deinit (in test.dwarf) + 0

0x0000000100025634: RollbarCrashDiagnosticFilter.__deallocating_deinit (in test.dwarf) + 0

0x0000000100025664: @nonobjc NSRegularExpression.init(pattern:options:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100025724: specialized _ArrayBuffer._getElementSlowPath(_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100025924: specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x0000000100025930: specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x0000000100025990: specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x000000010002599c: specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x00000001000259a8: specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x0000000100025a1c: specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x0000000100025a30: specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x0000000100025a3c: specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x0000000100025a48: specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x0000000100025a54: specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x0000000100025a60: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100025b60: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100025c80: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100025d7c: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100025ee8: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100026004: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) + 0

0x0000000100026104: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100026234: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x000000010002633c: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x000000010002646c: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x000000010002658c: specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000266a8: specialized Array.append<A>(contentsOf:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100026784: specialized Dictionary._Variant.setValue(_:forKey:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100026844: specialized _NativeDictionary.mutatingFind(_:isUnique:) (in test.dwarf) (<compiler-generated>:0)

0x000000010002691c: specialized _NativeDictionary.copy() (in test.dwarf) (<compiler-generated>:0)

0x0000000100026b10: specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100026e50: specialized RollbarCrashDiagnosticFilter.validated(_:) (in test.dwarf) (RollbarCrashDiagnosticFilter.swift:83)

0x00000001000270b4: specialized Collection.map<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100027344: specialized RollbarCrashDiagnosticFilter.diagnose(_:) (in test.dwarf) (RollbarCrashDiagnosticFilter.swift:54)

0x0000000100027e94: outlined consume of Result<[String : Any], NSError> (in test.dwarf) (<compiler-generated>:0)

0x0000000100027ea0: type metadata accessor for RollbarCrashDiagnosticFilter (in test.dwarf) (<compiler-generated>:0)

0x0000000100027ebc: type metadata accessor for SwiftDiagnosisFormatter (in test.dwarf) (<compiler-generated>:0)

0x0000000100027ed8: specialized SwiftDiagnosisFormatter.string(for:) (in test.dwarf) (RollbarCrashDiagnosticFilter.swift:119)

0x00000001000281a4: lazy protocol witness table accessor for type String and conformance String (in test.dwarf) (<compiler-generated>:0)

0x00000001000281e4: lazy protocol witness table accessor for type Substring and conformance Substring (in test.dwarf) (<compiler-generated>:0)

0x0000000100028224: __swift_instantiateConcreteTypeFromMangledNameAbstract (in test.dwarf) (<compiler-generated>:0)

0x0000000100028264: type metadata accessor for NSTextCheckingResult (in test.dwarf) (<compiler-generated>:0)

0x000000010002829c: outlined consume of (@escaping @callee_guaranteed (@guaranteed [Any]?, @unowned Bool, @guaranteed Error?) -> ())? (in test.dwarf) (<compiler-generated>:0)

0x00000001000282d0: partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned NSArray?, @unowned ObjCBool, @unowned NSError?) -> () (in test.dwarf) (<compiler-generated>:0)

0x0000000100028304: lazy protocol witness table accessor for type Range<String.Index> and conformance Range<A> (in test.dwarf) + 0

0x0000000100028358: outlined init with copy of BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x000000010002839c: outlined init with take of BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x00000001000283e0: outlined destroy of BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x000000010002841c: outlined init with take of Any (in test.dwarf) (<compiler-generated>:0)

0x000000010002842c: outlined consume of Diagnostic? (in test.dwarf) (<compiler-generated>:0)

0x000000010002845c: __swift_destroy_boxed_opaque_existential_0 (in test.dwarf) (<compiler-generated>:0)

0x000000010002847c: partial apply for specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100028498: lazy protocol witness table accessor for type Substring and conformance Substring (in test.dwarf) (<compiler-generated>:0)

0x00000001000284d8: outlined init with copy of Any? (in test.dwarf) + 0

0x000000010002851c: outlined copy of Result<[String : Any], NSError> (in test.dwarf) (<compiler-generated>:0)

0x0000000100028528: specialized static Error<>.missingKeys(_:keys:_:_:) (in test.dwarf) (Error.swift:25)

0x0000000100028778: lazy protocol witness table accessor for type UInt and conformance UInt (in test.dwarf) (<compiler-generated>:0)

0x00000001000287b8: lazy protocol witness table accessor for type [String] and conformance [A] (in test.dwarf) (<compiler-generated>:0)

0x0000000100028800: specialized static Error<>.invalidType(_:_:_:) (in test.dwarf) (Error.swift:11)

0x0000000100028a38: specialized static Error<>.unsupported(_:version:_:_:) (in test.dwarf) (Error.swift:40)

0x0000000100028c6c: __swift_project_boxed_opaque_existential_0 (in test.dwarf) (<compiler-generated>:0)

0x0000000100028c90: Formatted.description.getter (in test.dwarf) (FormatBuilder.swift:63)

0x0000000100028dd8: protocol witness for CustomStringConvertible.description.getter in conformance Formatted<A> (in test.dwarf) (<compiler-generated>:0)

0x0000000100028ddc: static Optional<A>.*? infix(_:_:) (in test.dwarf) (FormatBuilder.swift:106)

0x0000000100028e40: partial apply for closure #1 in static Optional<A>.*? infix(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100028e8c: static Optional<A>.*? infix<A>(_:_:) (in test.dwarf) (FormatBuilder.swift:113)

0x0000000100028efc: implicit closure #1 in static Optional<A>.*? infix<A>(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100029038: partial apply for implicit closure #1 in static Optional<A>.*? infix<A>(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100029048: partial apply for closure #1 in static Optional<A>.*? infix<A>(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000290c0: static Optional<A>.*? infix<A>(_:_:) (in test.dwarf) (FormatBuilder.swift:123)

0x00000001000292a8: partial apply for implicit closure #1 in static Optional<A>.*? infix<A>(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000292c8: partial apply for closure #1 in static Optional<A>.*? infix<A>(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100029340: static Optional<A>.*? infix(_:_:) (in test.dwarf) (FormatBuilder.swift:132)

0x00000001000293a0: implicit closure #1 in static Optional<A>.*? infix(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000293f4: partial apply for implicit closure #1 in static Optional<A>.*? infix(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000293fc: specialized Dictionary<>.description.getter (in test.dwarf) (Report.swift:217)

0x00000001000294f8: partial apply for closure #1 in static Optional<A>.*? infix(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010002956c: static Optional<A>.*? infix(_:_:) (in test.dwarf) (FormatBuilder.swift:138)

0x0000000100029648: partial apply for implicit closure #1 in static Optional<A>.*? infix(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100029668: partial apply for closure #1 in static Optional<A>.*? infix(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000296dc: static Result<>.*? infix(_:_:) (in test.dwarf) (FormatBuilder.swift:148)

0x0000000100029760: implicit closure #2 in static Result<>.*? infix(_:_:) (in test.dwarf) (FormatBuilder.swift:0)

0x00000001000297ec: type metadata instantiation function for Formatted (in test.dwarf) (<compiler-generated>:0)

0x00000001000297f4: type metadata completion function for Formatted (in test.dwarf) (<compiler-generated>:0)

0x000000010002985c: initializeBufferWithCopyOfBuffer for Formatted (in test.dwarf) (<compiler-generated>:0)

0x0000000100029934: destroy for Formatted (in test.dwarf) (<compiler-generated>:0)

0x0000000100029990: initializeWithCopy for Formatted (in test.dwarf) (<compiler-generated>:0)

0x0000000100029a28: assignWithCopy for Formatted (in test.dwarf) (<compiler-generated>:0)

0x0000000100029b08: initializeWithTake for Formatted (in test.dwarf) (<compiler-generated>:0)

0x0000000100029ba0: assignWithTake for Formatted (in test.dwarf) (<compiler-generated>:0)

0x0000000100029c80: getEnumTagSinglePayload for Formatted (in test.dwarf) (<compiler-generated>:0)

0x0000000100029dc0: storeEnumTagSinglePayload for Formatted (in test.dwarf) (<compiler-generated>:0)

0x0000000100029f94: type metadata accessor for Formatted (in test.dwarf) (<compiler-generated>:0)

0x0000000100029fa0: specialized static Optional<A>.*? infix<A>(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010002a1c8: specialized static Optional<A>.*? infix<A>(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010002a41c: specialized static Optional<A>.*? infix<A>(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010002a680: outlined consume of Data? (in test.dwarf) (<compiler-generated>:0)

0x000000010002a694: outlined consume of Data._Representation (in test.dwarf) (<compiler-generated>:0)

0x000000010002a6d8: __swift_instantiateGenericMetadata (in test.dwarf) (<compiler-generated>:0)

0x000000010002a700: partial apply for implicit closure #1 in static Optional<A>.*? infix(_:_:) (in test.dwarf) + 0

0x000000010002a704: partial apply for implicit closure #1 in static Result<>.*? infix(_:_:) (in test.dwarf) + 0

0x000000010002a708: specialized Sequence.compactMap<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010002a828: thunk for @escaping @callee_unowned @convention(block) (@unowned NSArray?, @unowned ObjCBool, @unowned NSError?) -> () (in test.dwarf) (<compiler-generated>:0)

0x000000010002a8ac: specialized Sequence.compact<A>() (in test.dwarf) (Prelude.swift:151)

0x000000010002a9a0: RollbarCrashFormattingFilter.filterReports(_:onCompletion:) (in test.dwarf) (RollbarCrashFormattingFilter.swift:21)

0x000000010002acfc: @objc RollbarCrashFormattingFilter.filterReports(_:onCompletion:) (in test.dwarf) (<compiler-generated>:0)

0x000000010002adb8: RollbarCrashFormattingFilter.__allocating_init() (in test.dwarf) (RollbarCrashFormattingFilter.swift:10)

0x000000010002add8: RollbarCrashFormattingFilter.init() (in test.dwarf) (RollbarCrashFormattingFilter.swift:10)

0x000000010002ae08: @objc RollbarCrashFormattingFilter.init() (in test.dwarf) (<compiler-generated>:0)

0x000000010002ae44: RollbarCrashFormattingFilter.__deallocating_deinit (in test.dwarf) (RollbarCrashFormattingFilter.swift:10)

0x000000010002ae74: closure #1 in RollbarCrashFormattingFilter.format(_:) (in test.dwarf) (RollbarCrashFormattingFilter.swift:62)

0x000000010002bfe4: closure #1 in RollbarCrashFormattingFilter.header(for:system:) (in test.dwarf) (RollbarCrashFormattingFilter.swift:111)

0x000000010002d110: closure #1 in RollbarCrashFormattingFilter.error(for:) (in test.dwarf) (RollbarCrashFormattingFilter.swift:141)

0x000000010002d9c0: closure #1 in RollbarCrashFormattingFilter.diagnostics(for:exception:) (in test.dwarf) (RollbarCrashFormattingFilter.swift:177)

0x00000001000300f0: specialized thunk for @callee_guaranteed (@guaranteed String, @in_guaranteed Any, @guaranteed String, @in_guaranteed Any) -> (@unowned Bool, @error @owned Error) (in test.dwarf) (<compiler-generated>:0)

0x00000001000301a4: closure #1 in RollbarCrashFormattingFilter.threadInfo(for:process:) (in test.dwarf) (RollbarCrashFormattingFilter.swift:240)

0x00000001000305fc: closure #1 in RollbarCrashFormattingFilter.backtrace(for:process:) (in test.dwarf) (RollbarCrashFormattingFilter.swift:257)

0x0000000100032220: specialized EnumeratedSequence.Iterator.next() (in test.dwarf) (<compiler-generated>:0)

0x00000001000322d4: closure #1 in RollbarCrashFormattingFilter.cpuState(for:cpu:) (in test.dwarf) (RollbarCrashFormattingFilter.swift:301)

0x0000000100032e2c: closure #1 in closure #1 in RollbarCrashFormattingFilter.cpuState(for:cpu:) (in test.dwarf) (RollbarCrashFormattingFilter.swift:305)

0x0000000100033178: closure #1 in RollbarCrashFormattingFilter.binaryImages(for:) (in test.dwarf) (RollbarCrashFormattingFilter.swift:322)

0x0000000100033fbc: one-time initialization function for requiredKeys (in test.dwarf) (RollbarCrashFormattingFilter.swift:0)

0x0000000100033fec: specialized _dictionaryUpCast<A, B, C, D>(_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100034374: specialized __RawDictionaryStorage.find<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000343d8: specialized __RawDictionaryStorage.find<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100034408: specialized __RawDictionaryStorage.find<A>(_:hashValue:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000344e8: specialized __RawDictionaryStorage.find<A>(_:hashValue:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000345ac: specialized MutableCollection<>.sort(by:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100034674: specialized MutableCollection<>.sort(by:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003473c: specialized UnsafeMutableBufferPointer._stableSortImpl(by:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000348a0: specialized UnsafeMutableBufferPointer._stableSortImpl(by:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100034a00: specialized closure #1 in UnsafeMutableBufferPointer._stableSortImpl(by:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100034e40: specialized closure #1 in UnsafeMutableBufferPointer._stableSortImpl(by:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003551c: specialized MutableCollection<>._insertionSort(within:sortedEnd:by:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100035658: specialized MutableCollection<>._insertionSort(within:sortedEnd:by:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100035888: specialized UnsafeMutableBufferPointer._mergeTopRuns(_:buffer:by:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100035b20: specialized UnsafeMutableBufferPointer._mergeTopRuns(_:buffer:by:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100035db4: specialized UnsafeMutableBufferPointer._finalizeRuns(_:buffer:by:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100035f0c: specialized UnsafeMutableBufferPointer._finalizeRuns(_:buffer:by:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100036080: specialized _merge<A>(low:mid:high:buffer:by:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100036484: specialized _merge<A>(low:mid:high:buffer:by:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100036990: specialized Array.remove(at:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100036a18: specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100036ac8: specialized _ArrayBuffer._consumeAndCreateNew() (in test.dwarf) (<compiler-generated>:0)

0x0000000100036adc: specialized _ArrayBuffer._consumeAndCreateNew() (in test.dwarf) (<compiler-generated>:0)

0x0000000100036af0: specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100036be4: specialized _NativeDictionary.mapValues<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100036e38: specialized Sequence._copySequenceContents(initializing:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100036f04: specialized Sequence._copySequenceContents(initializing:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000370f8: specialized _ContiguousArrayBuffer._consumeAndCreateNew() (in test.dwarf) (<compiler-generated>:0)

0x000000010003710c: specialized _ContiguousArrayBuffer._consumeAndCreateNew() (in test.dwarf) (<compiler-generated>:0)

0x0000000100037120: specialized Dictionary<>.subscript.getter (in test.dwarf) (Prelude.swift:204)

0x0000000100037344: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x0000000100037358: specialized Dictionary<>.subscript.getter (in test.dwarf) (Prelude.swift:204)

0x000000010003758c: specialized RollbarCrashFormattingFilter.validated(_:) (in test.dwarf) (RollbarCrashFormattingFilter.swift:37)

0x0000000100037888: type metadata accessor for NSString (in test.dwarf) (<compiler-generated>:0)

0x00000001000378c0: type metadata accessor for RollbarCrashFormattingFilter (in test.dwarf) (<compiler-generated>:0)

0x0000000100037900: partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned NSArray?, @unowned ObjCBool, @unowned NSError?) -> () (in test.dwarf) (<compiler-generated>:0)

0x0000000100037908: specialized Sequence.compactMap<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100037a30: specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100037aa8: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x0000000100037abc: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x0000000100037ce4: lazy protocol witness table accessor for type Int and conformance Int (in test.dwarf) (<compiler-generated>:0)

0x0000000100037d24: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x0000000100037f50: specialized Collection.map<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100038068: specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000380ec: specialized Collection.map<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100038258: outlined destroy of AnyHashable (in test.dwarf) (<compiler-generated>:0)

0x000000010003828c: outlined init with copy of AnyHashable (in test.dwarf) (<compiler-generated>:0)

0x00000001000382c8: outlined consume of [A : B].Iterator._Variant<A, B> (in test.dwarf) (<compiler-generated>:0)

0x00000001000382d8: partial apply for specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000382f4: lazy protocol witness table accessor for type URL and conformance URL (in test.dwarf) (<compiler-generated>:0)

0x0000000100038338: outlined copy of Frame (in test.dwarf) (<compiler-generated>:0)

0x000000010003838c: outlined consume of (offset: Int, element: Frame)? (in test.dwarf) (<compiler-generated>:0)

0x00000001000383dc: outlined consume of Frame (in test.dwarf) (<compiler-generated>:0)

0x000000010003847c: lazy protocol witness table accessor for type Diagnostic and conformance Diagnostic (in test.dwarf) (<compiler-generated>:0)

0x00000001000384bc: outlined init with copy of URL? (in test.dwarf) + 0

0x0000000100038500: lazy protocol witness table accessor for type [Formatted<String>] and conformance [A] (in test.dwarf) + 0

0x000000010003853c: partial apply for implicit closure #1 in Dictionary<>.signalName.getter (in test.dwarf) (<compiler-generated>:0)

0x0000000100038544: partial apply for thunk for @callee_guaranteed () -> (@owned String) (in test.dwarf) (<compiler-generated>:0)

0x000000010003856c: outlined destroy of (key: AnyHashable, value: Address)? (in test.dwarf) + 0

0x00000001000385a8: outlined init with copy of BinaryImage (in test.dwarf) + 0

0x00000001000385ec: outlined destroy of BinaryImage (in test.dwarf) + 0

0x0000000100038628: outlined copy of Result<Formatted<String>, NSError> (in test.dwarf) (<compiler-generated>:0)

0x0000000100038638: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x0000000100038650: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x0000000100038668: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x0000000100038680: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x0000000100038698: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x00000001000386b0: Result.success.getter (in test.dwarf) (Prelude.swift:126)

0x0000000100038790: Result.isSuccess.getter (in test.dwarf) (Prelude.swift:113)

0x0000000100038820: Result.isFailure.getter (in test.dwarf) (Prelude.swift:119)

0x000000010003883c: Result.failure.getter (in test.dwarf) (Prelude.swift:136)

0x000000010003891c: static KeyPath<>.! prefix(_:) (in test.dwarf) (Prelude.swift:328)

0x000000010003894c: ! prefix<A>(_:) (in test.dwarf) (Prelude.swift:311)

0x00000001000389b0: StringProtocol.trimming(_:) (in test.dwarf) (Prelude.swift:263)

0x00000001000389b4: zip<A, B>(_:_:) (in test.dwarf) (Prelude.swift:59)

0x0000000100038a44: StringProtocol.replacing(_:with:) (in test.dwarf) (Prelude.swift:255)

0x0000000100038ab0: lift<A, B, C>(_:_:_:) (in test.dwarf) (Prelude.swift:45)

0x0000000100038d00: lift<A, B, C, D>(_:_:_:) (in test.dwarf) (Prelude.swift:88)

0x00000001000391d4: Sequence.compact<A>() (in test.dwarf) (Prelude.swift:151)

0x0000000100039268: their<A, B>(_:) (in test.dwarf) (Prelude.swift:26)

0x00000001000392e0: id<A>(_:) (in test.dwarf) (Prelude.swift:8)

0x00000001000392f8: const<A, B>(_:) (in test.dwarf) (Prelude.swift:14)

0x00000001000393b4: specialized closure #1 in their<A, B>(_:) (in test.dwarf) (Prelude.swift:29)

0x00000001000394e0: closure #1 in their<A, B>(_:) (in test.dwarf) (Prelude.swift:29)

0x00000001000395c0: static Comparable<>.< infix(_:_:) (in test.dwarf) (Prelude.swift:35)

0x00000001000396d8: zip<A, B>(_:) (in test.dwarf) (Prelude.swift:65)

0x00000001000398b4: implicit closure #1 in zip<A, B>(_:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000399d0: zip<A, B, C>(_:_:_:) (in test.dwarf) (Prelude.swift:71)

0x0000000100039b80: closure #1 in zip<A, B, C>(_:_:_:) (in test.dwarf) (Prelude.swift:72)

0x0000000100039d4c: thunk for @callee_guaranteed (@in_guaranteed A, @in_guaranteed B, @in_guaranteed C) -> (@out A, @out B, @out C, @error @owned Error) (in test.dwarf) (<compiler-generated>:0)

0x0000000100039e3c: Optional.orElse(_:) (in test.dwarf) (Prelude.swift:80)

0x0000000100039efc: zip<A, B, C>(_:_:) (in test.dwarf) (Prelude.swift:102)

0x0000000100039fa8: RangeReplaceableCollection.popFirst() (in test.dwarf) (Prelude.swift:171)

0x000000010003a06c: Dictionary<>.subscript.getter (in test.dwarf) (Prelude.swift:185)

0x000000010003a084: Dictionary<>.subscript.getter (in test.dwarf) (Prelude.swift:204)

0x000000010003a2b0: Dictionary<>.subscript.getter (in test.dwarf) (Prelude.swift:195)

0x000000010003a2f8: Dictionary<>.subscript.getter (in test.dwarf) (Prelude.swift:214)

0x000000010003a608: Dictionary<>.nestedLookup(keys:) (in test.dwarf) (Prelude.swift:220)

0x000000010003a6fc: specialized closure #1 in Dictionary<>.nestedLookup(keys:) (in test.dwarf) (Prelude.swift:222)

0x000000010003a900: closure #1 in Dictionary<>.nestedLookup(keys:) (in test.dwarf) (Prelude.swift:222)

0x000000010003aad0: static StringProtocol.* infix(_:_:) (in test.dwarf) (Prelude.swift:239)

0x000000010003abc0: NSTextCheckingResult.groups(in:) (in test.dwarf) (Prelude.swift:285)

0x000000010003ad30: partial apply for closure #1 in static KeyPath<>.! prefix(_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003ad84: partial apply for closure #1 in ! prefix<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003adac: partial apply for implicit closure #1 in zip<A, B>(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003ade8: partial apply for closure #1 in zip<A, B>(_:_:) (in test.dwarf) + 0

0x000000010003ae0c: partial apply for id<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003ae48: partial apply for closure #1 in their<A, B>(_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003aeb0: partial apply for closure #1 in const<A, B>(_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003aed4: partial apply for implicit closure #1 in zip<A, B>(_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003aee0: partial apply for closure #1 in zip<A, B>(_:) (in test.dwarf) + 0

0x000000010003aef4: partial apply for closure #1 in zip<A, B>(_:_:) (in test.dwarf) + 0

0x000000010003af8c: partial apply for closure #1 in zip<A, B, C>(_:_:_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003afb4: partial apply for thunk for @callee_guaranteed (@in_guaranteed A, @in_guaranteed B, @in_guaranteed C) -> (@out A, @out B, @out C, @error @owned Error) (in test.dwarf) (<compiler-generated>:0)

0x000000010003afd4: partial apply for implicit closure #1 in zip<A, B, C>(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003b014: partial apply for closure #1 in zip<A, B, C>(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003b0ac: Data.init(from:options:) (in test.dwarf) (Prelude.swift:337)

0x000000010003b204: one-time initialization function for empty (in test.dwarf) (Prelude.swift:0)

0x000000010003b2e4: specialized _NativeDictionary._insert(at:key:value:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003b350: specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003b470: specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003b56c: specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003b668: specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003b764: specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003b884: specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003b978: specialized Collection.split(maxSplits:omittingEmptySubsequences:whereSeparator:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003bdac: specialized appendSubsequence #1 <A>(end:) in Collection.split(maxSplits:omittingEmptySubsequences:whereSeparator:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003beb8: specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003bf0c: partial apply for specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:) (in test.dwarf) + 0

0x000000010003bf24: partial apply for implicit closure #1 in Dictionary<>.subscript.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010003bf44: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003bf5c: specialized Dictionary.init(dictionaryLiteral:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003c064: specialized _ArrayBufferProtocol.replaceSubrange<A>(_:with:elementsOf:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003c1f0: specialized Array.replaceSubrange<A>(_:with:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003c2a4: partial apply for closure #1 in Dictionary<>.nestedLookup(keys:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003c2f4: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003c300: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003c30c: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003c320: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003c334: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003c348: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003c35c: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003c370: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003c384: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003c390: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003c39c: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003c3a8: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003c5f8: specialized Dictionary<>.subscript.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010003c83c: specialized Dictionary<>.subscript.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010003ca80: specialized Dictionary<>.subscript.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010003ccdc: specialized Dictionary<>.subscript.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010003cf28: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003cf34: specialized Dictionary<>.subscript.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010003d164: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003d170: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003d3c0: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003d3d8: outlined init with copy of (String, Any) (in test.dwarf) (<compiler-generated>:0)

0x000000010003d420: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003d438: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003d450: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003d468: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003d480: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003d498: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003d4b0: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003d4c8: __swift_allocate_value_buffer (in test.dwarf) (<compiler-generated>:0)

0x000000010003d508: __swift_project_value_buffer (in test.dwarf) (<compiler-generated>:0)

0x000000010003d520: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003d538: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003d550: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003d55c: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003d568: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003d7b0: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003d7c4: specialized Dictionary<>.subscript.getter (in test.dwarf) + 0

0x000000010003d9f4: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003da0c: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003da24: specialized Dictionary<>.subscript.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010003dc5c: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003dc74: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003dc8c: outlined destroy of Any? (in test.dwarf) + 0

0x000000010003dcc8: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003dce0: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003dcf8: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003dd10: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003dd28: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003dd40: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003dd58: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003dd70: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x000000010003dd88: partial apply for specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:) (in test.dwarf) + 0

0x000000010003dddc: specialized StringProtocol.pad(_:with:) (in test.dwarf) (Prelude.swift:246)

0x000000010003e018: Address.value.getter (in test.dwarf) (Address.swift:29)

0x000000010003e01c: static Address.- infix(_:_:) (in test.dwarf) (Address.swift:0)

0x000000010003e040: Address.size.getter (in test.dwarf) (Address.swift:17)

0x000000010003e054: protocol witness for static Equatable.== infix(_:_:) in conformance Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e05c: protocol witness for Hashable.hashValue.getter in conformance Address.BinaryCodingKeys (in test.dwarf) + 0

0x000000010003e060: protocol witness for Hashable.hash(into:) in conformance Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e084: protocol witness for Hashable._rawHashValue(seed:) in conformance Address.BinaryCodingKeys (in test.dwarf) + 0

0x000000010003e088: protocol witness for CodingKey.stringValue.getter in conformance Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e094: protocol witness for CodingKey.init(stringValue:) in conformance Address.BinaryCodingKeys (in test.dwarf) + 0

0x000000010003e098: protocol witness for CodingKey.intValue.getter in conformance Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e0a4: protocol witness for CodingKey.init(intValue:) in conformance Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e0b0: protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e0d8: protocol witness for CustomStringConvertible.description.getter in conformance Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e100: protocol witness for static Equatable.== infix(_:_:) in conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e114: protocol witness for Hashable.hashValue.getter in conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e158: protocol witness for Hashable.hash(into:) in conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e180: protocol witness for Hashable._rawHashValue(seed:) in conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e1c0: protocol witness for CodingKey.stringValue.getter in conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e1ec: protocol witness for CodingKey.init(stringValue:) in conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e210: protocol witness for CodingKey.intValue.getter in conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e21c: protocol witness for CodingKey.init(intValue:) in conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e228: protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e250: protocol witness for CustomStringConvertible.description.getter in conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e278: protocol witness for static Equatable.== infix(_:_:) in conformance Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e280: protocol witness for Hashable.hashValue.getter in conformance Address.MemoryCodingKeys (in test.dwarf) + 0

0x000000010003e284: protocol witness for Hashable.hashValue.getter in conformance Address.BinaryCodingKeys (in test.dwarf) + 0

0x000000010003e2c4: protocol witness for Hashable._rawHashValue(seed:) in conformance Address.MemoryCodingKeys (in test.dwarf) + 0

0x000000010003e2c8: protocol witness for Hashable._rawHashValue(seed:) in conformance Address.BinaryCodingKeys (in test.dwarf) + 0

0x000000010003e304: protocol witness for CodingKey.stringValue.getter in conformance Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e310: protocol witness for CodingKey.init(stringValue:) in conformance Address.MemoryCodingKeys (in test.dwarf) + 0

0x000000010003e324: protocol witness for CodingKey.init(stringValue:) in conformance Address.BinaryCodingKeys (in test.dwarf) + 0

0x000000010003e3a0: protocol witness for CodingKey.intValue.getter in conformance Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e3ac: protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e3d4: protocol witness for CustomStringConvertible.description.getter in conformance Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e3fc: Address.description.getter (in test.dwarf) (Address.swift:35)

0x000000010003e4ac: protocol witness for CustomStringConvertible.description.getter in conformance Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003e4b8: static Address.+ infix(_:_:) (in test.dwarf) (Address.swift:0)

0x000000010003e4dc: static Address.< infix(_:_:) (in test.dwarf) (Address.swift:65)

0x000000010003e4e8: static Address.__derived_enum_equals(_:_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003e504: Address.hash(into:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003e534: Address.encode(to:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003e744: __swift_project_boxed_opaque_existential_1 (in test.dwarf) (<compiler-generated>:0)

0x000000010003e768: lazy protocol witness table accessor for type Address.CodingKeys and conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e7a8: lazy protocol witness table accessor for type Address.BinaryCodingKeys and conformance Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e7e8: lazy protocol witness table accessor for type Address.MemoryCodingKeys and conformance Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003e828: Address.hashValue.getter (in test.dwarf) (<compiler-generated>:0)

0x000000010003e884: Address.init(from:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003e8a4: protocol witness for static Equatable.== infix(_:_:) in conformance Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003e8c8: protocol witness for static Comparable.< infix(_:_:) in conformance Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003e8dc: protocol witness for static Comparable.<= infix(_:_:) in conformance Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003e8f0: protocol witness for static Comparable.>= infix(_:_:) in conformance Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003e904: protocol witness for static Comparable.> infix(_:_:) in conformance Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003e918: protocol witness for Hashable.hashValue.getter in conformance Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003e974: protocol witness for Hashable.hash(into:) in conformance Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003e9b0: protocol witness for Hashable._rawHashValue(seed:) in conformance Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003ea08: protocol witness for Decodable.init(from:) in conformance Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003ea38: protocol witness for Encodable.encode(to:) in conformance Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003ea54: specialized Address.CodingKeys.init(stringValue:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003eb34: specialized Address.init(from:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003ef1c: base witness table accessor for Equatable in Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003ef20: lazy protocol witness table accessor for type Address and conformance Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003ef60: base witness table accessor for Equatable in Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003ef64: __swift_memcpy9_8 (in test.dwarf) (<compiler-generated>:0)

0x000000010003ef78: __swift_noop_void_return (in test.dwarf) (<compiler-generated>:0)

0x000000010003ef7c: getEnumTagSinglePayload for Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003efc4: storeEnumTagSinglePayload for Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003f008: getEnumTag for Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003f010: destructiveProjectEnumData for Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003f014: destructiveInjectEnumTag for Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003f020: type metadata accessor for Address (in test.dwarf) (<compiler-generated>:0)

0x000000010003f030: __swift_memcpy1_1 (in test.dwarf) (<compiler-generated>:0)

0x000000010003f03c: getEnumTagSinglePayload for Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f0cc: storeEnumTagSinglePayload for Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f188: getEnumTag for Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f190: destructiveProjectEnumData for Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f194: destructiveInjectEnumTag for Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f1a0: type metadata accessor for Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f1b0: __swift_memcpy0_1 (in test.dwarf) (<compiler-generated>:0)

0x000000010003f1b4: getEnumTagSinglePayload for Address.MemoryCodingKeys (in test.dwarf) + 0

0x000000010003f1b8: storeEnumTagSinglePayload for Address.MemoryCodingKeys (in test.dwarf) + 0

0x000000010003f1bc: getEnumTag for Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f1c4: destructiveProjectEnumData for Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f1c8: destructiveInjectEnumTag for Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f1cc: type metadata accessor for Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f1dc: getEnumTagSinglePayload for Address.BinaryCodingKeys (in test.dwarf) + 0

0x000000010003f1e0: getEnumTagSinglePayload for Address.MemoryCodingKeys (in test.dwarf) + 0

0x000000010003f230: storeEnumTagSinglePayload for Address.BinaryCodingKeys (in test.dwarf) + 0

0x000000010003f234: storeEnumTagSinglePayload for Address.MemoryCodingKeys (in test.dwarf) + 0

0x000000010003f2c0: getEnumTag for Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f2c8: destructiveProjectEnumData for Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f2cc: destructiveInjectEnumTag for Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f2d0: type metadata accessor for Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f2e0: base witness table accessor for Equatable in Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f2e4: lazy protocol witness table accessor for type Address.BinaryCodingKeys and conformance Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f324: base witness table accessor for Equatable in Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f328: lazy protocol witness table accessor for type Address.MemoryCodingKeys and conformance Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f368: base witness table accessor for Equatable in Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f36c: lazy protocol witness table accessor for type Address.CodingKeys and conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f3ac: base witness table accessor for CustomDebugStringConvertible in Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f3b0: lazy protocol witness table accessor for type Address.MemoryCodingKeys and conformance Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f3f0: base witness table accessor for CustomStringConvertible in Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f3f4: lazy protocol witness table accessor for type Address.MemoryCodingKeys and conformance Address.MemoryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f434: base witness table accessor for CustomDebugStringConvertible in Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f438: lazy protocol witness table accessor for type Address.BinaryCodingKeys and conformance Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f478: base witness table accessor for CustomStringConvertible in Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f47c: lazy protocol witness table accessor for type Address.BinaryCodingKeys and conformance Address.BinaryCodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f4bc: base witness table accessor for CustomDebugStringConvertible in Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f4c0: lazy protocol witness table accessor for type Address.CodingKeys and conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f500: base witness table accessor for CustomStringConvertible in Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f504: lazy protocol witness table accessor for type Address.CodingKeys and conformance Address.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010003f544: __swift_destroy_boxed_opaque_existential_1 (in test.dwarf) (<compiler-generated>:0)

0x000000010003f564: lazy protocol witness table accessor for type Repeated<String> and conformance Repeated<A> (in test.dwarf) (<compiler-generated>:0)

0x000000010003f5ac: protocol witness for Hashable.hash(into:) in conformance Address.MemoryCodingKeys (in test.dwarf) + 0

0x000000010003f5b0: protocol witness for CodingKey.init(intValue:) in conformance Address.MemoryCodingKeys (in test.dwarf) + 0

0x000000010003f5c4: BinaryImage.init(rawValue:) (in test.dwarf) (BinaryImage.swift:41)

0x000000010003fbd0: type metadata accessor for BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x000000010003fc08: protocol witness for RawRepresentable.init(rawValue:) in conformance BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x000000010003fc48: BinaryImage.rawValue.getter (in test.dwarf) (<compiler-generated>:0)
0x000000010003fc48: protocol witness for RawRepresentable.rawValue.getter in conformance BinaryImage (in test.dwarf) (<compiler-generated>:38)

0x000000010003fc58: outlined init with copy of URL? (in test.dwarf) + 0

0x000000010003fc9c: outlined destroy of URL? (in test.dwarf) + 0

0x000000010003fcd8: specialized Sequence.compactMap<A>(_:) (in test.dwarf) (<compiler-generated>:0)

0x000000010003fdf8: initializeBufferWithCopyOfBuffer for BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x000000010003ff2c: destroy for BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x000000010003ffa8: initializeWithCopy for BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x00000001000400b0: assignWithCopy for BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x0000000100040200: initializeWithTake for BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x00000001000402fc: assignWithTake for BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x0000000100040418: getEnumTagSinglePayload for BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x00000001000404cc: storeEnumTagSinglePayload for BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x000000010004057c: type metadata completion function for BinaryImage (in test.dwarf) (<compiler-generated>:0)

0x0000000100040640: CPU.typeName.getter (in test.dwarf) (CPU.swift:12)

0x000000010004070c: CPU.registers.getter (in test.dwarf) (CPU.swift:57)

0x00000001000407b4: CPU.subtypeName.getter (in test.dwarf) (CPU.swift:24)

0x0000000100040c28: CPU.debugDescription.getter (in test.dwarf) (CPU.swift:105)

0x0000000100040e54: protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CPU (in test.dwarf) (<compiler-generated>:0)

0x0000000100040e5c: lazy protocol witness table accessor for type Int32 and conformance Int32 (in test.dwarf) (<compiler-generated>:0)

0x0000000100040e9c: __swift_memcpy8_4 (in test.dwarf) (<compiler-generated>:0)

0x0000000100040ea8: getEnumTagSinglePayload for CPU (in test.dwarf) (<compiler-generated>:0)

0x0000000100040ec8: storeEnumTagSinglePayload for CPU (in test.dwarf) (<compiler-generated>:0)

0x0000000100040ef0: type metadata accessor for CPU (in test.dwarf) (<compiler-generated>:0)

0x0000000100040f00: Frame.rawValue.getter (in test.dwarf) (Frame.swift:26)

0x00000001000412ec: protocol witness for RawRepresentable.init(rawValue:) in conformance Frame (in test.dwarf) (<compiler-generated>:0)

0x000000010004133c: protocol witness for RawRepresentable.rawValue.getter in conformance Frame (in test.dwarf) (<compiler-generated>:0)

0x0000000100041378: specialized Frame.init(rawValue:) (in test.dwarf) (Frame.swift:0)

0x0000000100041594: destroy for Frame (in test.dwarf) (<compiler-generated>:0)

0x00000001000415d4: initializeWithCopy for Frame (in test.dwarf) (<compiler-generated>:0)

0x0000000100041680: assignWithCopy for Frame (in test.dwarf) (<compiler-generated>:0)

0x0000000100041750: __swift_memcpy73_8 (in test.dwarf) (<compiler-generated>:0)

0x0000000100041774: assignWithTake for Frame (in test.dwarf) (<compiler-generated>:0)

0x00000001000417e4: getEnumTagSinglePayload for Frame (in test.dwarf) (<compiler-generated>:0)

0x0000000100041834: storeEnumTagSinglePayload for Frame (in test.dwarf) (<compiler-generated>:0)

0x000000010004189c: getEnumTag for Frame (in test.dwarf) (<compiler-generated>:0)

0x00000001000418a8: destructiveProjectEnumData for Frame (in test.dwarf) (<compiler-generated>:0)

0x00000001000418b8: destructiveInjectEnumTag for Frame (in test.dwarf) (<compiler-generated>:0)

0x00000001000418e4: type metadata accessor for Frame (in test.dwarf) (<compiler-generated>:0)

0x00000001000418f4: __swift_memcpy73_8 (in test.dwarf) (<compiler-generated>:0)
0x00000001000418f4: outlined init with take of Frame (in test.dwarf) (<compiler-generated>:0)

0x000000010004191c: outlined init with take of Address (in test.dwarf) (<compiler-generated>:0)

0x0000000100041958: outlined retain of Frame (in test.dwarf) (<compiler-generated>:0)

0x00000001000419a4: destroy for Frame.Unsymbolicated (in test.dwarf) (<compiler-generated>:0)

0x00000001000419ac: initializeWithCopy for Frame.Unsymbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041a08: assignWithCopy for Frame.Unsymbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041a84: __swift_memcpy57_8 (in test.dwarf) (<compiler-generated>:0)

0x0000000100041aa0: assignWithTake for Frame.Unsymbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041b04: getEnumTagSinglePayload for Frame.Unsymbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041b4c: storeEnumTagSinglePayload for Frame.Unsymbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041b9c: type metadata accessor for Frame.Unsymbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041bac: initializeBufferWithCopyOfBuffer for Frame.Symbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041bdc: destroy for Frame.Symbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041c04: initializeWithCopy for Frame.Symbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041c70: assignWithCopy for Frame.Symbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041d0c: assignWithTake for Frame.Symbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041d80: getEnumTagSinglePayload for Frame.Symbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041dc8: storeEnumTagSinglePayload for Frame.Symbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041e1c: type metadata accessor for Frame.Symbolicated (in test.dwarf) (<compiler-generated>:0)

0x0000000100041e2c: initializeBufferWithCopyOfBuffer for Frame (in test.dwarf) + 0

0x0000000100041e30: initializeBufferWithCopyOfBuffer for Frame.Unsymbolicated (in test.dwarf) + 0

0x0000000100041e34: Dictionary<>.crashType.getter (in test.dwarf) (Report.swift:53)

0x0000000100041f04: Dictionary<>.binaryImages.getter (in test.dwarf) (Report.swift:32)

0x0000000100042074: Dictionary<>.diagnosis.setter (in test.dwarf) (Report.swift:112)

0x0000000100042100: Dictionary<>.description.getter (in test.dwarf) (Report.swift:217)

0x0000000100042210: Dictionary<>.exception.getter (in test.dwarf) (Report.swift:57)

0x00000001000422c0: Dictionary<>.crashedThread.getter (in test.dwarf) (Report.swift:120)

0x0000000100042654: Dictionary<>.cpu.getter (in test.dwarf) (Report.swift:99)

0x0000000100042724: Dictionary<>.reportId.getter (in test.dwarf) (Report.swift:42)

0x00000001000428bc: Dictionary<>.exceptionType.getter (in test.dwarf) (Report.swift:64)

0x0000000100042a40: Dictionary<>.diagnostics.getter (in test.dwarf) (Report.swift:116)

0x0000000100042d2c: Dictionary<>.backtraceContents.getter (in test.dwarf) (Report.swift:190)

0x0000000100043044: Dictionary<>.threadName.getter (in test.dwarf) (Report.swift:165)

0x0000000100043138: Dictionary<>.isZombieNSException.getter (in test.dwarf) (Report.swift:199)

0x000000010004378c: implicit closure #1 in Dictionary<>.signalName.getter (in test.dwarf) (<compiler-generated>:0)

0x00000001000437c8: specialized Sequence.contains(where:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100043958: specialized Dictionary._Variant.removeValue(forKey:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100043a44: specialized _NativeDictionary._delete(at:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100043c28: partial apply for specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100043c44: partial apply for specialized closure #1 in Sequence<>.contains(_:) (in test.dwarf) (<compiler-generated>:0)

0x0000000100043c6c: outlined init with copy of UUID? (in test.dwarf) (<compiler-generated>:0)

0x0000000100043cb4: outlined destroy of Any? (in test.dwarf) + 0

0x0000000100043cf0: closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)specialized partial apply (in test.dwarf) + 0

0x0000000100043d08: Timestamp.init(rfc3339String:) (in test.dwarf) (Timestamp.swift:19)

0x0000000100043f14: Timestamp.init(from:) (in test.dwarf) (<compiler-generated>:0)

0x00000001000440d0: protocol witness for static Equatable.== infix(_:_:) in conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x00000001000440d8: protocol witness for Hashable.hashValue.getter in conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100044118: protocol witness for Hashable.hash(into:) in conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010004413c: protocol witness for Hashable._rawHashValue(seed:) in conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100044178: protocol witness for CodingKey.stringValue.getter in conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100044190: protocol witness for CodingKey.init(stringValue:) in conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100044224: protocol witness for CodingKey.intValue.getter in conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100044230: protocol witness for CodingKey.init(intValue:) in conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010004423c: protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100044264: protocol witness for CustomStringConvertible.description.getter in conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010004428c: protocol witness for RawRepresentable.init(rawValue:) in conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x00000001000442f0: protocol witness for RawRepresentable.rawValue.getter in conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100044328: protocol witness for static Equatable.== infix(_:_:) in conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x000000010004442c: protocol witness for static Comparable.< infix(_:_:) in conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100044530: protocol witness for static Comparable.<= infix(_:_:) in conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100044638: protocol witness for static Comparable.>= infix(_:_:) in conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100044740: protocol witness for static Comparable.> infix(_:_:) in conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100044844: protocol witness for Hashable.hashValue.getter in conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x00000001000448a8: protocol witness for Hashable.hash(into:) in conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x00000001000448f8: protocol witness for Hashable._rawHashValue(seed:) in conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100044958: protocol witness for Decodable.init(from:) in conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x000000010004496c: protocol witness for Encodable.encode(to:) in conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100044a74: @objc ISO8601Formatter.init(coder:) (in test.dwarf) + 0

0x0000000100044a78: ISO8601Formatter.init() (in test.dwarf) (Timestamp.swift:46)

0x0000000100044bdc: @objc ISO8601Formatter.init() (in test.dwarf) (<compiler-generated>:0)

0x0000000100044bfc: ISO8601Formatter.__deallocating_deinit (in test.dwarf) + 0

0x0000000100044c00: type metadata accessor for ISO8601Formatter (in test.dwarf) (<compiler-generated>:0)

0x0000000100044c1c: @objc RFC3339Formatter.init(coder:) (in test.dwarf) + 0

0x0000000100044c20: @objc ISO8601Formatter.init(coder:) (in test.dwarf) + 0

0x0000000100044c64: RFC3339Formatter.init() (in test.dwarf) (Timestamp.swift:60)

0x0000000100044e84: @objc RFC3339Formatter.init() (in test.dwarf) (<compiler-generated>:0)

0x0000000100044ea4: RFC3339Formatter.__deallocating_deinit (in test.dwarf) + 0

0x0000000100044ea8: ISO8601Formatter.__deallocating_deinit (in test.dwarf) + 0

0x0000000100044edc: type metadata accessor for RFC3339Formatter (in test.dwarf) (<compiler-generated>:0)

0x0000000100044ef8: base witness table accessor for Equatable in Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100044efc: lazy protocol witness table accessor for type Timestamp and conformance Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100044f40: type metadata accessor for Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100044f78: base witness table accessor for Equatable in Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100044f7c: lazy protocol witness table accessor for type Timestamp.CodingKeys and conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100044fbc: outlined init with take of Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100045000: lazy protocol witness table accessor for type Date and conformance Date (in test.dwarf) + 0

0x000000010004503c: getEnumTagSinglePayload for Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010004508c: storeEnumTagSinglePayload for Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100045118: getEnumTag for Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100045120: destructiveProjectEnumData for Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100045124: destructiveInjectEnumTag for Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100045128: type metadata accessor for Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100045138: initializeBufferWithCopyOfBuffer for Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100045174: destroy for Timestamp (in test.dwarf) (<compiler-generated>:0)

0x00000001000451a8: initializeWithCopy for Timestamp (in test.dwarf) (<compiler-generated>:0)

0x00000001000451ec: assignWithCopy for Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100045230: initializeWithTake for Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100045274: assignWithTake for Timestamp (in test.dwarf) (<compiler-generated>:0)

0x00000001000452b8: getEnumTagSinglePayload for Timestamp (in test.dwarf) (<compiler-generated>:0)

0x0000000100045300: storeEnumTagSinglePayload for Timestamp (in test.dwarf) (<compiler-generated>:0)

0x000000010004534c: type metadata completion function for Timestamp (in test.dwarf) (<compiler-generated>:0)

0x00000001000453b0: base witness table accessor for Equatable in Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x00000001000453b4: lazy protocol witness table accessor for type Timestamp.CodingKeys and conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x00000001000453f4: base witness table accessor for CustomDebugStringConvertible in Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x00000001000453f8: lazy protocol witness table accessor for type Timestamp.CodingKeys and conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x0000000100045438: base witness table accessor for CustomStringConvertible in Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010004543c: lazy protocol witness table accessor for type Timestamp.CodingKeys and conformance Timestamp.CodingKeys (in test.dwarf) (<compiler-generated>:0)

0x000000010004547c: -[KSCrashInstallation(Alert) addConditionalAlertWithTitle:message:yesAnswer:noAnswer:] (in test.dwarf) (KSCrashInstallation+Alert.m:31)

0x00000001000454f8: -[KSCrashInstallation(Alert) addUnconditionalAlertWithTitle:message:dismissButtonText:] (in test.dwarf) (KSCrashInstallation+Alert.m:49)

0x0000000100045540: +[KSCrashInstReportField fieldWithIndex:] (in test.dwarf) (KSCrashInstallation.m:100)

0x0000000100045568: -[KSCrashInstReportField initWithIndex:] (in test.dwarf) (KSCrashInstallation.m:105)

0x00000001000455e8: -[KSCrashInstReportField field] (in test.dwarf) (KSCrashInstallation.m:115)

0x0000000100045628: -[KSCrashInstReportField setKey:] (in test.dwarf) (KSCrashInstallation.m:120)

0x00000001000456e0: -[KSCrashInstReportField setValue:] (in test.dwarf) (KSCrashInstallation.m:134)

0x0000000100045848: -[KSCrashInstReportField index] (in test.dwarf) (KSCrashInstallation.m:93)

0x0000000100045850: -[KSCrashInstReportField key] (in test.dwarf) (KSCrashInstallation.m:94)

0x0000000100045858: -[KSCrashInstReportField value] (in test.dwarf) (KSCrashInstallation.m:95)

0x0000000100045860: -[KSCrashInstReportField fieldBacking] (in test.dwarf) (KSCrashInstallation.m:96)

0x0000000100045868: -[KSCrashInstReportField setFieldBacking:] (in test.dwarf) (KSCrashInstallation.m:96)

0x0000000100045874: -[KSCrashInstReportField keyBacking] (in test.dwarf) (KSCrashInstallation.m:97)

0x000000010004587c: -[KSCrashInstReportField setKeyBacking:] (in test.dwarf) (KSCrashInstallation.m:97)

0x0000000100045888: -[KSCrashInstReportField valueBacking] (in test.dwarf) (KSCrashInstallation.m:98)

0x0000000100045890: -[KSCrashInstReportField setValueBacking:] (in test.dwarf) (KSCrashInstallation.m:98)

0x000000010004589c: -[KSCrashInstReportField .cxx_destruct] (in test.dwarf) (KSCrashInstallation.m:91)

0x00000001000458f0: -[KSCrashInstallation init] (in test.dwarf) (KSCrashInstallation.m:179)

0x0000000100045958: -[KSCrashInstallation initWithRequiredProperties:] (in test.dwarf) (KSCrashInstallation.m:186)

0x0000000100045a58: -[KSCrashInstallation dealloc] (in test.dwarf) (KSCrashInstallation.m:199)

0x0000000100045b14: -[KSCrashInstallation crashHandlerData] (in test.dwarf) (KSCrashInstallation.m:212)

0x0000000100045b54: -[KSCrashInstallation reportFieldForProperty:] (in test.dwarf) (KSCrashInstallation.m:217)

0x0000000100045c70: -[KSCrashInstallation reportFieldForProperty:setKey:] (in test.dwarf) (KSCrashInstallation.m:231)

0x0000000100045cd0: -[KSCrashInstallation reportFieldForProperty:setValue:] (in test.dwarf) (KSCrashInstallation.m:237)

0x0000000100045d30: -[KSCrashInstallation validateProperties] (in test.dwarf) (KSCrashInstallation.m:243)

0x0000000100045f40: -[KSCrashInstallation makeKeyPath:] (in test.dwarf) (KSCrashInstallation.m:279)

0x0000000100045fc0: -[KSCrashInstallation makeKeyPaths:] (in test.dwarf) (KSCrashInstallation.m:289)

0x000000010004613c: -[KSCrashInstallation onCrash] (in test.dwarf) (KSCrashInstallation.m:303)

0x0000000100046194: -[KSCrashInstallation setOnCrash:] (in test.dwarf) (KSCrashInstallation.m:311)

0x00000001000461e8: -[KSCrashInstallation install] (in test.dwarf) (KSCrashInstallation.m:319)

0x0000000100046274: crashCallback (in test.dwarf) (KSCrashInstallation.m:61)

0x0000000100046308: -[KSCrashInstallation sendAllReportsWithCompletion:] (in test.dwarf) (KSCrashInstallation.m:330)

0x0000000100046488: -[KSCrashInstallation addPreFilter:] (in test.dwarf) (KSCrashInstallation.m:358)

0x00000001000464d8: -[KSCrashInstallation sink] (in test.dwarf) (KSCrashInstallation.m:365)

0x00000001000464e0: -[KSCrashInstallation nextFieldIndex] (in test.dwarf) (KSCrashInstallation.m:173)

0x00000001000464e8: -[KSCrashInstallation setNextFieldIndex:] (in test.dwarf) (KSCrashInstallation.m:0)

0x00000001000464f0: -[KSCrashInstallation crashHandlerDataBacking] (in test.dwarf) (KSCrashInstallation.m:174)

0x00000001000464f8: -[KSCrashInstallation setCrashHandlerDataBacking:] (in test.dwarf) (KSCrashInstallation.m:174)

0x0000000100046504: -[KSCrashInstallation fields] (in test.dwarf) (KSCrashInstallation.m:175)

0x000000010004650c: -[KSCrashInstallation setFields:] (in test.dwarf) (KSCrashInstallation.m:175)

0x0000000100046518: -[KSCrashInstallation requiredProperties] (in test.dwarf) (KSCrashInstallation.m:176)

0x0000000100046520: -[KSCrashInstallation setRequiredProperties:] (in test.dwarf) (KSCrashInstallation.m:176)

0x000000010004652c: -[KSCrashInstallation prependedFilters] (in test.dwarf) (KSCrashInstallation.m:177)

0x0000000100046534: -[KSCrashInstallation setPrependedFilters:] (in test.dwarf) (KSCrashInstallation.m:177)

0x0000000100046540: -[KSCrashInstallation .cxx_destruct] (in test.dwarf) (KSCrashInstallation.m:171)

0x0000000100046588: +[KSCrashInstallationConsole sharedInstance] (in test.dwarf) (KSCrashInstallationConsole.m:38)

0x00000001000465c8: __44+[KSCrashInstallationConsole sharedInstance]_block_invoke (in test.dwarf) (KSCrashInstallationConsole.m:43)

0x00000001000465f8: -[KSCrashInstallationConsole init] (in test.dwarf) (KSCrashInstallationConsole.m:49)

0x0000000100046650: -[KSCrashInstallationConsole sink] (in test.dwarf) (KSCrashInstallationConsole.m:58)

0x0000000100046744: -[KSCrashInstallationConsole printAppleFormat] (in test.dwarf) (KSCrashInstallationConsole.m:36)

0x0000000100046754: -[KSCrashInstallationConsole setPrintAppleFormat:] (in test.dwarf) (KSCrashInstallationConsole.m:0)

0x0000000100046764: +[KSCrashInstallationEmail sharedInstance] (in test.dwarf) (KSCrashInstallationEmail.m:50)

0x00000001000467a4: __42+[KSCrashInstallationEmail sharedInstance]_block_invoke (in test.dwarf) (KSCrashInstallationEmail.m:55)

0x00000001000467d4: -[KSCrashInstallationEmail init] (in test.dwarf) (KSCrashInstallationEmail.m:61)

0x00000001000469ec: -[KSCrashInstallationEmail setReportStyle:useDefaultFilenameFormat:] (in test.dwarf) (KSCrashInstallationEmail.m:82)

0x0000000100046a98: -[KSCrashInstallationEmail sink] (in test.dwarf) (KSCrashInstallationEmail.m:93)

0x0000000100046ba4: -[KSCrashInstallationEmail recipients] (in test.dwarf) (KSCrashInstallationEmail.m:43)

0x0000000100046bb4: -[KSCrashInstallationEmail setRecipients:] (in test.dwarf) (KSCrashInstallationEmail.m:43)

0x0000000100046bc8: -[KSCrashInstallationEmail subject] (in test.dwarf) (KSCrashInstallationEmail.m:44)

0x0000000100046bd8: -[KSCrashInstallationEmail setSubject:] (in test.dwarf) (KSCrashInstallationEmail.m:44)

0x0000000100046bec: -[KSCrashInstallationEmail message] (in test.dwarf) (KSCrashInstallationEmail.m:45)

0x0000000100046bfc: -[KSCrashInstallationEmail setMessage:] (in test.dwarf) (KSCrashInstallationEmail.m:45)

0x0000000100046c10: -[KSCrashInstallationEmail filenameFmt] (in test.dwarf) (KSCrashInstallationEmail.m:46)

0x0000000100046c20: -[KSCrashInstallationEmail setFilenameFmt:] (in test.dwarf) (KSCrashInstallationEmail.m:46)

0x0000000100046c34: -[KSCrashInstallationEmail reportStyle] (in test.dwarf) (KSCrashInstallationEmail.m:47)

0x0000000100046c44: -[KSCrashInstallationEmail setReportStyle:] (in test.dwarf) (KSCrashInstallationEmail.m:0)

0x0000000100046c54: -[KSCrashInstallationEmail defaultFilenameFormats] (in test.dwarf) (KSCrashInstallationEmail.m:48)

0x0000000100046c64: -[KSCrashInstallationEmail setDefaultFilenameFormats:] (in test.dwarf) (KSCrashInstallationEmail.m:48)

0x0000000100046c78: -[KSCrashInstallationEmail .cxx_destruct] (in test.dwarf) (KSCrashInstallationEmail.m:41)

0x0000000100046cf4: -[KSCrashInstallationBaseQuincyHockey setUserID:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:45)

0x0000000100046d4c: -[KSCrashInstallationBaseQuincyHockey setUserIDKey:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:45)

0x0000000100046da4: -[KSCrashInstallationBaseQuincyHockey setUserName:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:46)

0x0000000100046dfc: -[KSCrashInstallationBaseQuincyHockey setUserNameKey:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:46)

0x0000000100046e54: -[KSCrashInstallationBaseQuincyHockey setContactEmail:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:47)

0x0000000100046eac: -[KSCrashInstallationBaseQuincyHockey setContactEmailKey:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:47)

0x0000000100046f04: -[KSCrashInstallationBaseQuincyHockey setCrashDescription:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:48)

0x0000000100046f5c: -[KSCrashInstallationBaseQuincyHockey setCrashDescriptionKey:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:48)

0x0000000100046fb4: -[KSCrashInstallationBaseQuincyHockey initWithRequiredProperties:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:53)

0x0000000100047088: -[KSCrashInstallationBaseQuincyHockey allCrashDescriptionKeys] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:67)

0x000000010004715c: -[KSCrashInstallationBaseQuincyHockey userID] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:45)

0x000000010004716c: -[KSCrashInstallationBaseQuincyHockey userIDKey] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:45)

0x000000010004717c: -[KSCrashInstallationBaseQuincyHockey userName] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:46)

0x000000010004718c: -[KSCrashInstallationBaseQuincyHockey userNameKey] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:46)

0x000000010004719c: -[KSCrashInstallationBaseQuincyHockey contactEmail] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:47)

0x00000001000471ac: -[KSCrashInstallationBaseQuincyHockey contactEmailKey] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:47)

0x00000001000471bc: -[KSCrashInstallationBaseQuincyHockey crashDescription] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:48)

0x00000001000471cc: -[KSCrashInstallationBaseQuincyHockey crashDescriptionKey] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:48)

0x00000001000471dc: -[KSCrashInstallationBaseQuincyHockey extraDescriptionKeys] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:50)

0x00000001000471ec: -[KSCrashInstallationBaseQuincyHockey setExtraDescriptionKeys:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:50)

0x0000000100047200: -[KSCrashInstallationBaseQuincyHockey waitUntilReachable] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:51)

0x0000000100047210: -[KSCrashInstallationBaseQuincyHockey setWaitUntilReachable:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:0)

0x0000000100047220: -[KSCrashInstallationBaseQuincyHockey .cxx_destruct] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:43)

0x00000001000472ec: +[KSCrashInstallationQuincy sharedInstance] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:88)

0x000000010004732c: __43+[KSCrashInstallationQuincy sharedInstance]_block_invoke (in test.dwarf) (KSCrashInstallationQuincyHockey.m:93)

0x000000010004735c: -[KSCrashInstallationQuincy init] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:99)

0x00000001000473d4: -[KSCrashInstallationQuincy sink] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:104)

0x0000000100047588: -[KSCrashInstallationQuincy url] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:86)

0x0000000100047598: -[KSCrashInstallationQuincy setUrl:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:86)

0x00000001000475ac: -[KSCrashInstallationQuincy .cxx_destruct] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:84)

0x00000001000475c0: +[KSCrashInstallationHockey sharedInstance] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:122)

0x0000000100047600: __43+[KSCrashInstallationHockey sharedInstance]_block_invoke (in test.dwarf) (KSCrashInstallationQuincyHockey.m:127)

0x0000000100047630: -[KSCrashInstallationHockey init] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:133)

0x00000001000476a8: -[KSCrashInstallationHockey sink] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:143)

0x000000010004785c: -[KSCrashInstallationHockey appIdentifier] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:120)

0x000000010004786c: -[KSCrashInstallationHockey setAppIdentifier:] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:120)

0x0000000100047880: -[KSCrashInstallationHockey .cxx_destruct] (in test.dwarf) (KSCrashInstallationQuincyHockey.m:118)

0x0000000100047894: +[KSCrashInstallationStandard sharedInstance] (in test.dwarf) (KSCrashInstallationStandard.m:38)

0x00000001000478d4: __45+[KSCrashInstallationStandard sharedInstance]_block_invoke (in test.dwarf) (KSCrashInstallationStandard.m:43)

0x0000000100047904: -[KSCrashInstallationStandard init] (in test.dwarf) (KSCrashInstallationStandard.m:49)

0x000000010004797c: -[KSCrashInstallationStandard sink] (in test.dwarf) (KSCrashInstallationStandard.m:54)

0x0000000100047a28: -[KSCrashInstallationStandard url] (in test.dwarf) (KSCrashInstallationStandard.m:36)

0x0000000100047a38: -[KSCrashInstallationStandard setUrl:] (in test.dwarf) (KSCrashInstallationStandard.m:36)

0x0000000100047a4c: -[KSCrashInstallationStandard .cxx_destruct] (in test.dwarf) (KSCrashInstallationStandard.m:34)

0x0000000100047a60: +[KSCrashInstallationVictory sharedInstance] (in test.dwarf) (KSCrashInstallationVictory.m:40)

0x0000000100047aa0: __44+[KSCrashInstallationVictory sharedInstance]_block_invoke (in test.dwarf) (KSCrashInstallationVictory.m:45)

0x0000000100047ad0: -[KSCrashInstallationVictory init] (in test.dwarf) (KSCrashInstallationVictory.m:51)

0x0000000100047b48: -[KSCrashInstallationVictory sink] (in test.dwarf) (KSCrashInstallationVictory.m:56)

0x0000000100047c38: -[KSCrashInstallationVictory url] (in test.dwarf) (KSCrashInstallationVictory.m:36)

0x0000000100047c48: -[KSCrashInstallationVictory setUrl:] (in test.dwarf) (KSCrashInstallationVictory.m:36)

0x0000000100047c5c: -[KSCrashInstallationVictory userName] (in test.dwarf) (KSCrashInstallationVictory.m:37)

0x0000000100047c6c: -[KSCrashInstallationVictory setUserName:] (in test.dwarf) (KSCrashInstallationVictory.m:37)

0x0000000100047c80: -[KSCrashInstallationVictory userEmail] (in test.dwarf) (KSCrashInstallationVictory.m:38)

0x0000000100047c90: -[KSCrashInstallationVictory setUserEmail:] (in test.dwarf) (KSCrashInstallationVictory.m:38)

0x0000000100047ca4: -[KSCrashInstallationVictory .cxx_destruct] (in test.dwarf) (KSCrashInstallationVictory.m:34)

0x0000000100047cf8: +[KSCrash load] (in test.dwarf) (KSCrash.m:120)

0x0000000100047d0c: +[KSCrash initialize] (in test.dwarf) (KSCrash.m:125)

0x0000000100047d50: +[KSCrash sharedInstance] (in test.dwarf) (KSCrash.m:132)

0x0000000100047d90: __25+[KSCrash sharedInstance]_block_invoke (in test.dwarf) (KSCrash.m:137)

0x0000000100047dc0: -[KSCrash init] (in test.dwarf) (KSCrash.m:143)

0x0000000100047f10: -[KSCrash initWithBasePath:] (in test.dwarf) (KSCrash.m:148)

0x000000010004804c: -[KSCrash userInfo] (in test.dwarf) (KSCrash.m:176)

0x0000000100048054: -[KSCrash setUserInfo:] (in test.dwarf) (KSCrash.m:179)

0x0000000100048194: -[KSCrash setMonitoring:] (in test.dwarf) (KSCrash.m:202)

0x00000001000481bc: -[KSCrash setDeadlockWatchdogInterval:] (in test.dwarf) (KSCrash.m:209)

0x00000001000481c4: -[KSCrash setSearchQueueNames:] (in test.dwarf) (KSCrash.m:215)

0x00000001000481d0: -[KSCrash setOnCrash:] (in test.dwarf) (KSCrash.m:221)

0x00000001000481dc: -[KSCrash setIntrospectMemory:] (in test.dwarf) (KSCrash.m:227)

0x00000001000481e8: -[KSCrash catchZombies] (in test.dwarf) (KSCrash.m:231)

0x0000000100048200: -[KSCrash setCatchZombies:] (in test.dwarf) (KSCrash.m:236)

0x000000010004823c: -[KSCrash setDoNotIntrospectClasses:] (in test.dwarf) (KSCrash.m:248)

0x0000000100048320: -[KSCrash setMaxReportCount:] (in test.dwarf) (KSCrash.m:270)

0x000000010004832c: -[KSCrash systemInfo] (in test.dwarf) (KSCrash.m:274)

0x0000000100048a64: -[KSCrash install] (in test.dwarf) (KSCrash.m:317)

0x0000000100048af0: -[KSCrash sendAllReportsWithCompletion:] (in test.dwarf) (KSCrash.m:329)

0x0000000100048ba0: __40-[KSCrash sendAllReportsWithCompletion:]_block_invoke (in test.dwarf) (KSCrash.m:337)

0x0000000100048c6c: __copy_helper_block_e8_32s40b (in test.dwarf) (KSCrash.m:0)

0x0000000100048ca0: __destroy_helper_block_e8_32s40s (in test.dwarf) (KSCrash.m:0)

0x0000000100048cc8: -[KSCrash deleteAllReports] (in test.dwarf) (KSCrash.m:354)

0x0000000100048ccc: -[KSCrash deleteReportWithID:] (in test.dwarf) (KSCrash.m:357)

0x0000000100048ce4: -[KSCrash reportUserException:reason:language:lineOfCode:stackTrace:logAllThreads:terminateProgram:] (in test.dwarf) (KSCrash.m:362)

0x0000000100048ed8: -[KSCrash enableSwapOfCxaThrow] (in test.dwarf) (KSCrash.m:400)

0x0000000100048edc: -[KSCrash activeDurationSinceLastCrash] (in test.dwarf) (KSCrash.m:413)

0x0000000100048ef4: -[KSCrash backgroundDurationSinceLastCrash] (in test.dwarf) (KSCrash.m:414)

0x0000000100048f0c: -[KSCrash launchesSinceLastCrash] (in test.dwarf) (KSCrash.m:415)

0x0000000100048f24: -[KSCrash sessionsSinceLastCrash] (in test.dwarf) (KSCrash.m:416)

0x0000000100048f3c: -[KSCrash activeDurationSinceLaunch] (in test.dwarf) (KSCrash.m:417)

0x0000000100048f54: -[KSCrash backgroundDurationSinceLaunch] (in test.dwarf) (KSCrash.m:418)

0x0000000100048f6c: -[KSCrash sessionsSinceLaunch] (in test.dwarf) (KSCrash.m:419)

0x0000000100048f84: -[KSCrash crashedLastLaunch] (in test.dwarf) (KSCrash.m:420)

0x0000000100048f9c: -[KSCrash reportCount] (in test.dwarf) (KSCrash.m:424)

0x0000000100048fa0: -[KSCrash sendReports:onCompletion:] (in test.dwarf) (KSCrash.m:427)

0x000000010004911c: __36-[KSCrash sendReports:onCompletion:]_block_invoke (in test.dwarf) (KSCrash.m:447)

0x0000000100049130: __copy_helper_block_e8_32b (in test.dwarf) (KSCrash.m:0)

0x0000000100049140: __destroy_helper_block_e8_32s (in test.dwarf) (KSCrash.m:0)

0x0000000100049148: -[KSCrash loadCrashReportJSONWithID:] (in test.dwarf) (KSCrash.m:451)

0x0000000100049198: -[KSCrash doctorReport:] (in test.dwarf) (KSCrash.m:461)

0x00000001000492d8: -[KSCrash reportIDs] (in test.dwarf) (KSCrash.m:475)

0x00000001000493d0: -[KSCrash reportWithID:] (in test.dwarf) (KSCrash.m:488)

0x00000001000493fc: -[KSCrash reportWithIntID:] (in test.dwarf) (KSCrash.m:493)

0x000000010004951c: -[KSCrash allReports] (in test.dwarf) (KSCrash.m:521)

0x000000010004961c: -[KSCrash setAddConsoleLogToReport:] (in test.dwarf) (KSCrash.m:541)

0x0000000100049628: -[KSCrash setPrintPreviousLog:] (in test.dwarf) (KSCrash.m:547)

0x0000000100049634: -[KSCrash nullTerminated:] (in test.dwarf) (KSCrash.m:556)

0x0000000100049684: +[KSCrash subscribeToNotifications] (in test.dwarf) (KSCrash.m:572)

0x000000010004976c: +[KSCrash classDidBecomeLoaded] (in test.dwarf) (KSCrash.m:620)

0x0000000100049770: +[KSCrash applicationDidBecomeActive] (in test.dwarf) (KSCrash.m:625)

0x0000000100049778: +[KSCrash applicationWillResignActive] (in test.dwarf) (KSCrash.m:630)

0x0000000100049780: +[KSCrash applicationDidEnterBackground] (in test.dwarf) (KSCrash.m:635)

0x0000000100049788: +[KSCrash applicationWillEnterForeground] (in test.dwarf) (KSCrash.m:640)

0x0000000100049790: +[KSCrash applicationWillTerminate] (in test.dwarf) (KSCrash.m:645)

0x0000000100049794: -[KSCrash sink] (in test.dwarf) (KSCrash.m:98)

0x000000010004979c: -[KSCrash setSink:] (in test.dwarf) (KSCrash.m:98)

0x00000001000497a8: -[KSCrash deleteBehaviorAfterSendAll] (in test.dwarf) (KSCrash.m:100)

0x00000001000497b0: -[KSCrash setDeleteBehaviorAfterSendAll:] (in test.dwarf) (KSCrash.m:0)

0x00000001000497b8: -[KSCrash monitoring] (in test.dwarf) (KSCrash.m:101)

0x00000001000497c0: -[KSCrash deadlockWatchdogInterval] (in test.dwarf) (KSCrash.m:102)

0x00000001000497c8: -[KSCrash searchQueueNames] (in test.dwarf) (KSCrash.m:103)

0x00000001000497d0: -[KSCrash onCrash] (in test.dwarf) (KSCrash.m:104)

0x00000001000497d8: -[KSCrash bundleName] (in test.dwarf) (KSCrash.m:105)

0x00000001000497e0: -[KSCrash setBundleName:] (in test.dwarf) (KSCrash.m:105)

0x00000001000497ec: -[KSCrash basePath] (in test.dwarf) (KSCrash.m:106)

0x00000001000497f4: -[KSCrash setBasePath:] (in test.dwarf) (KSCrash.m:106)

0x0000000100049800: -[KSCrash introspectMemory] (in test.dwarf) (KSCrash.m:107)

0x0000000100049808: -[KSCrash doNotIntrospectClasses] (in test.dwarf) (KSCrash.m:108)

0x0000000100049810: -[KSCrash demangleLanguages] (in test.dwarf) (KSCrash.m:109)

0x0000000100049818: -[KSCrash setDemangleLanguages:] (in test.dwarf) (KSCrash.m:0)

0x0000000100049820: -[KSCrash addConsoleLogToReport] (in test.dwarf) (KSCrash.m:110)

0x0000000100049828: -[KSCrash printPreviousLog] (in test.dwarf) (KSCrash.m:111)

0x0000000100049830: -[KSCrash maxReportCount] (in test.dwarf) (KSCrash.m:112)

0x0000000100049838: -[KSCrash uncaughtExceptionHandler] (in test.dwarf) (KSCrash.m:113)

0x0000000100049840: -[KSCrash setUncaughtExceptionHandler:] (in test.dwarf) (KSCrash.m:0)

0x0000000100049848: -[KSCrash currentSnapshotUserReportedExceptionHandler] (in test.dwarf) (KSCrash.m:114)

0x0000000100049850: -[KSCrash setCurrentSnapshotUserReportedExceptionHandler:] (in test.dwarf) (KSCrash.m:0)

0x0000000100049858: -[KSCrash .cxx_destruct] (in test.dwarf) (KSCrash.m:92)

0x00000001000498ac: getBundleName (in test.dwarf) (KSCrash.m:62)

0x000000010004992c: kscrash_install (in test.dwarf) (KSCrashC.c:157)

0x0000000100049b54: onCrash (in test.dwarf) (KSCrashC.c:126)

0x0000000100049c54: kscrash_setMonitoring (in test.dwarf) (KSCrashC.c:197)

0x0000000100049c84: kscrash_setUserInfoJSON (in test.dwarf) (KSCrashC.c:211)

0x0000000100049c88: kscrash_setDeadlockWatchdogInterval (in test.dwarf) (KSCrashC.c:217)

0x0000000100049c8c: kscrash_setSearchQueueNames (in test.dwarf) (KSCrashC.c:223)

0x0000000100049c90: kscrash_setIntrospectMemory (in test.dwarf) (KSCrashC.c:228)

0x0000000100049c94: kscrash_setDoNotIntrospectClasses (in test.dwarf) (KSCrashC.c:233)

0x0000000100049c98: kscrash_setCrashNotifyCallback (in test.dwarf) (KSCrashC.c:238)

0x0000000100049c9c: kscrash_setAddConsoleLogToReport (in test.dwarf) (KSCrashC.c:248)

0x0000000100049ca8: kscrash_setPrintPreviousLog (in test.dwarf) (KSCrashC.c:253)

0x0000000100049cb4: kscrash_setMaxReportCount (in test.dwarf) (KSCrashC.c:258)

0x0000000100049cb8: kscrash_reportUserException (in test.dwarf) (KSCrashC.c:268)

0x0000000100049ce0: enableSwapCxaThrow (in test.dwarf) (KSCrashC.c:284)

0x0000000100049ce4: kscrash_notifyObjCLoad (in test.dwarf) (KSCrashC.c:289)

0x0000000100049ce8: kscrash_notifyAppActive (in test.dwarf) (KSCrashC.c:293)

0x0000000100049d2c: kscrash_notifyAppInForeground (in test.dwarf) (KSCrashC.c:304)

0x0000000100049d70: kscrash_notifyAppTerminate (in test.dwarf) (KSCrashC.c:315)

0x0000000100049d9c: kscrash_getReportCount (in test.dwarf) (KSCrashC.c:330)

0x0000000100049da0: kscrash_getReportIDs (in test.dwarf) (KSCrashC.c:335)

0x0000000100049da4: kscrash_readReport (in test.dwarf) (KSCrashC.c:339)

0x0000000100049e8c: kscrash_deleteAllReports (in test.dwarf) (KSCrashC.c:370)

0x0000000100049e90: kscrash_deleteReportWithID (in test.dwarf) (KSCrashC.c:375)

0x0000000100049e94: ksccd_init (in test.dwarf) (KSCrashCachedData.c:168)

0x0000000100049f68: monitorCachedData (in test.dwarf) (KSCrashCachedData.c:146)

0x000000010004a258: ksccd_freeze (in test.dwarf) (KSCrashCachedData.c:189)

0x000000010004a284: ksccd_unfreeze (in test.dwarf) (KSCrashCachedData.c:198)

0x000000010004a2b4: ksccd_setSearchQueueNames (in test.dwarf) (KSCrashCachedData.c:208)

0x000000010004a2c0: ksccd_getThreadName (in test.dwarf) (KSCrashCachedData.c:222)

0x000000010004a310: ksccd_getQueueName (in test.dwarf) (KSCrashCachedData.c:237)

0x000000010004a360: -[KSCrashDoctorParam className] (in test.dwarf) (KSCrashDoctor.m:35)

0x000000010004a368: -[KSCrashDoctorParam setClassName:] (in test.dwarf) (KSCrashDoctor.m:35)

0x000000010004a374: -[KSCrashDoctorParam previousClassName] (in test.dwarf) (KSCrashDoctor.m:36)

0x000000010004a37c: -[KSCrashDoctorParam setPreviousClassName:] (in test.dwarf) (KSCrashDoctor.m:36)

0x000000010004a388: -[KSCrashDoctorParam isInstance] (in test.dwarf) (KSCrashDoctor.m:37)

0x000000010004a390: -[KSCrashDoctorParam setIsInstance:] (in test.dwarf) (KSCrashDoctor.m:0)

0x000000010004a398: -[KSCrashDoctorParam address] (in test.dwarf) (KSCrashDoctor.m:38)

0x000000010004a3a0: -[KSCrashDoctorParam setAddress:] (in test.dwarf) (KSCrashDoctor.m:0)

0x000000010004a3a8: -[KSCrashDoctorParam value] (in test.dwarf) (KSCrashDoctor.m:39)

0x000000010004a3b0: -[KSCrashDoctorParam setValue:] (in test.dwarf) (KSCrashDoctor.m:39)

0x000000010004a3bc: -[KSCrashDoctorParam type] (in test.dwarf) (KSCrashDoctor.m:40)

0x000000010004a3c4: -[KSCrashDoctorParam setType:] (in test.dwarf) (KSCrashDoctor.m:40)

0x000000010004a3d0: -[KSCrashDoctorParam .cxx_destruct] (in test.dwarf) (KSCrashDoctor.m:33)

0x000000010004a418: -[KSCrashDoctorFunctionCall descriptionForObjCCall] (in test.dwarf) (KSCrashDoctor.m:56)

0x000000010004a814: -[KSCrashDoctorFunctionCall descriptionWithParamCount:] (in test.dwarf) (KSCrashDoctor.m:126)

0x000000010004aaa4: -[KSCrashDoctorFunctionCall name] (in test.dwarf) (KSCrashDoctor.m:53)

0x000000010004aaac: -[KSCrashDoctorFunctionCall setName:] (in test.dwarf) (KSCrashDoctor.m:53)

0x000000010004aab8: -[KSCrashDoctorFunctionCall params] (in test.dwarf) (KSCrashDoctor.m:54)

0x000000010004aac0: -[KSCrashDoctorFunctionCall setParams:] (in test.dwarf) (KSCrashDoctor.m:54)

0x000000010004aacc: -[KSCrashDoctorFunctionCall .cxx_destruct] (in test.dwarf) (KSCrashDoctor.m:51)

0x000000010004aafc: +[KSCrashDoctor doctor] (in test.dwarf) (KSCrashDoctor.m:170)

0x000000010004ab14: -[KSCrashDoctor recrashReport:] (in test.dwarf) (KSCrashDoctor.m:175)

0x000000010004ab24: -[KSCrashDoctor systemReport:] (in test.dwarf) (KSCrashDoctor.m:180)

0x000000010004ab34: -[KSCrashDoctor crashReport:] (in test.dwarf) (KSCrashDoctor.m:185)

0x000000010004ab44: -[KSCrashDoctor infoReport:] (in test.dwarf) (KSCrashDoctor.m:190)

0x000000010004ab54: -[KSCrashDoctor errorReport:] (in test.dwarf) (KSCrashDoctor.m:195)

0x000000010004aba0: -[KSCrashDoctor cpuFamily:] (in test.dwarf) (KSCrashDoctor.m:200)

0x000000010004ac6c: -[KSCrashDoctor registerNameForFamily:paramIndex:] (in test.dwarf) (KSCrashDoctor.m:220)

0x000000010004accc: -[KSCrashDoctor mainExecutableNameForReport:] (in test.dwarf) (KSCrashDoctor.m:270)

0x000000010004ad18: -[KSCrashDoctor crashedThreadReport:] (in test.dwarf) (KSCrashDoctor.m:276)

0x000000010004aec0: -[KSCrashDoctor backtraceFromThreadReport:] (in test.dwarf) (KSCrashDoctor.m:295)

0x000000010004af18: -[KSCrashDoctor basicRegistersFromThreadReport:] (in test.dwarf) (KSCrashDoctor.m:301)

0x000000010004af70: -[KSCrashDoctor lastInAppStackEntry:] (in test.dwarf) (KSCrashDoctor.m:308)

0x000000010004b12c: -[KSCrashDoctor lastStackEntry:] (in test.dwarf) (KSCrashDoctor.m:324)

0x000000010004b1b4: -[KSCrashDoctor isInvalidAddress:] (in test.dwarf) (KSCrashDoctor.m:335)

0x000000010004b29c: -[KSCrashDoctor isMathError:] (in test.dwarf) (KSCrashDoctor.m:348)

0x000000010004b384: -[KSCrashDoctor isMemoryCorruption:] (in test.dwarf) (KSCrashDoctor.m:361)

0x000000010004b6f0: -[KSCrashDoctor lastFunctionCall:] (in test.dwarf) (KSCrashDoctor.m:409)

0x000000010004bc08: -[KSCrashDoctor zombieCall:] (in test.dwarf) (KSCrashDoctor.m:466)

0x000000010004bdd0: -[KSCrashDoctor isStackOverflow:] (in test.dwarf) (KSCrashDoctor.m:479)

0x000000010004be40: -[KSCrashDoctor isDeadlock:] (in test.dwarf) (KSCrashDoctor.m:485)

0x000000010004beb0: -[KSCrashDoctor appendOriginatingCall:callName:] (in test.dwarf) (KSCrashDoctor.m:492)

0x000000010004bf4c: -[KSCrashDoctor diagnoseCrash:] (in test.dwarf) (KSCrashDoctor.m:501)

0x000000010004c3f0: kscrashreport_writeRecrashReport (in test.dwarf) (KSCrashReport.c:1598)

0x000000010004c6e8: addJSONData (in test.dwarf) (KSCrashReport.c:329)

0x000000010004c718: writeReportInfo (in test.dwarf) (KSCrashReport.c:1538)

0x000000010004c80c: writeError (in test.dwarf) (KSCrashReport.c:1353)

0x000000010004cc40: writeThread (in test.dwarf) (KSCrashReport.c:1177)

0x000000010004d2e4: kscrashreport_writeStandardReport (in test.dwarf) (KSCrashReport.c:1721)

0x000000010004dc30: writeAllThreads (in test.dwarf) (KSCrashReport.c:1232)

0x000000010004dd60: addJSONElement (in test.dwarf) (KSCrashReport.c:251)

0x000000010004de54: kscrashreport_setUserInfoJSON (in test.dwarf) (KSCrashReport.c:1802)

0x000000010004deac: kscrashreport_setIntrospectMemory (in test.dwarf) (KSCrashReport.c:1824)

0x000000010004deb8: kscrashreport_setDoNotIntrospectClasses (in test.dwarf) (KSCrashReport.c:1828)

0x000000010004dfd4: kscrashreport_setUserSectionWriteCallback (in test.dwarf) (KSCrashReport.c:1866)

0x000000010004dfe0: addBooleanElement (in test.dwarf) (KSCrashReport.c:123)

0x000000010004dfe8: addFloatingPointElement (in test.dwarf) (KSCrashReport.c:128)

0x000000010004dff0: addIntegerElement (in test.dwarf) (KSCrashReport.c:133)

0x000000010004dff8: addUIntegerElement (in test.dwarf) (KSCrashReport.c:138)

0x000000010004e000: addStringElement (in test.dwarf) (KSCrashReport.c:143)

0x000000010004e00c: addTextFileElement (in test.dwarf) (KSCrashReport.c:147)

0x000000010004e184: addTextLinesFromFile (in test.dwarf) (KSCrashReport.c:302)

0x000000010004e288: addJSONElementFromFile (in test.dwarf) (KSCrashReport.c:282)

0x000000010004e290: addDataElement (in test.dwarf) (KSCrashReport.c:184)

0x000000010004e298: beginDataElement (in test.dwarf) (KSCrashReport.c:189)

0x000000010004e2a0: appendDataElement (in test.dwarf) (KSCrashReport.c:194)

0x000000010004e2a8: endDataElement (in test.dwarf) (KSCrashReport.c:199)

0x000000010004e2b0: addUUIDElement (in test.dwarf) (KSCrashReport.c:203)

0x000000010004e46c: beginObject (in test.dwarf) (KSCrashReport.c:287)

0x000000010004e474: beginArray (in test.dwarf) (KSCrashReport.c:292)

0x000000010004e47c: endContainer (in test.dwarf) (KSCrashReport.c:297)

0x000000010004e484: writeAddressReferencedByString (in test.dwarf) (KSCrashReport.c:867)

0x000000010004e4f0: writeMemoryContents (in test.dwarf) (KSCrashReport.c:760)

0x000000010004e7f8: isValidString (in test.dwarf) (KSCrashReport.c:347)

0x000000010004e878: writeArrayContents (in test.dwarf) (KSCrashReport.c:519)

0x000000010004e8d4: writeUnknownObjectContents (in test.dwarf) (KSCrashReport.c:542)

0x000000010004ec4c: writeMemoryContentsIfNotable (in test.dwarf) (KSCrashReport.c:848)

0x000000010004ecdc: kscrf_fixupCrashReport (in test.dwarf) (KSCrashReportFixer.c:313)

0x000000010004ee70: onBooleanElement (in test.dwarf) (KSCrashReportFixer.c:167)

0x000000010004ee84: onFloatingPointElement (in test.dwarf) (KSCrashReportFixer.c:175)

0x000000010004ee94: onIntegerElement (in test.dwarf) (KSCrashReportFixer.c:183)

0x000000010004efac: onNullElement (in test.dwarf) (KSCrashReportFixer.c:210)

0x000000010004efbc: onStringElement (in test.dwarf) (KSCrashReportFixer.c:218)

0x000000010004f0ec: onBeginObject (in test.dwarf) (KSCrashReportFixer.c:259)

0x000000010004f13c: onBeginArray (in test.dwarf) (KSCrashReportFixer.c:271)

0x000000010004f18c: onEndContainer (in test.dwarf) (KSCrashReportFixer.c:282)

0x000000010004f1c0: onEndData (in test.dwarf) (KSCrashReportFixer.c:295)

0x000000010004f1c8: addJSONData (in test.dwarf) (KSCrashReportFixer.c:299)

0x000000010004f228: matchesAPath (in test.dwarf) (KSCrashReportFixer.c:127)

0x000000010004f318: increaseDepth (in test.dwarf) (KSCrashReportFixer.c:78)

0x000000010004f374: kscrs_initialize (in test.dwarf) (KSCrashReportStore.c:177)

0x000000010004f450: kscrs_getNextCrashReport (in test.dwarf) (KSCrashReportStore.c:188)

0x000000010004f4c4: kscrs_getReportCount (in test.dwarf) (KSCrashReportStore.c:198)

0x000000010004f500: kscrs_getReportIDs (in test.dwarf) (KSCrashReportStore.c:206)

0x000000010004f554: getReportIDs (in test.dwarf) (KSCrashReportStore.c:112)

0x000000010004f634: kscrs_readReport (in test.dwarf) (KSCrashReportStore.c:214)

0x000000010004f6ec: kscrs_deleteAllReports (in test.dwarf) (KSCrashReportStore.c:260)

0x000000010004f724: kscrs_deleteReportWithID (in test.dwarf) (KSCrashReportStore.c:267)

0x000000010004f7a8: kscrs_setMaxReportCount (in test.dwarf) (KSCrashReportStore.c:275)

0x000000010004f7b4: pruneReports (in test.dwarf) (KSCrashReportStore.c:142)

0x000000010004f884: getReportCount (in test.dwarf) (KSCrashReportStore.c:86)

0x000000010004f924: getReportIDFromFilename (in test.dwarf) (KSCrashReportStore.c:76)

0x000000010004f9b0: compareInt64 (in test.dwarf) (KSCrashReportStore.c:52)

0x000000010004f9c8: kscm_setEventCallback (in test.dwarf) (KSCrashMonitor.c:159)

0x000000010004f9d4: kscm_setActiveMonitors (in test.dwarf) (KSCrashMonitor.c:163)

0x000000010004fabc: kscm_getActiveMonitors (in test.dwarf) (KSCrashMonitor.c:207)

0x000000010004fac8: kscm_notifyFatalExceptionCaptured (in test.dwarf) (KSCrashMonitor.c:216)

0x000000010004fb38: kscm_handleException (in test.dwarf) (KSCrashMonitor.c:232)

0x000000010004fc24: kscrashstate_initialize (in test.dwarf) (KSCrashMonitor_AppState.c:350)

0x000000010004fdb0: kscrashstate_reset (in test.dwarf) (KSCrashMonitor_AppState.c:357)

0x000000010004fe28: saveState (in test.dwarf) (KSCrashMonitor_AppState.c:253)

0x0000000100050020: kscrashstate_notifyObjCLoad (in test.dwarf) (KSCrashMonitor_AppState.c:382)

0x000000010005008c: kscrashstate_notifyAppActive (in test.dwarf) (KSCrashMonitor_AppState.c:391)

0x0000000100050158: kscrashstate_notifyAppInForeground (in test.dwarf) (KSCrashMonitor_AppState.c:412)

0x000000010005024c: kscrashstate_notifyAppTerminate (in test.dwarf) (KSCrashMonitor_AppState.c:437)

0x000000010005028c: updateAppState (in test.dwarf) (KSCrashMonitor_AppState.c:325)

0x0000000100050354: kscrashstate_notifyAppCrash (in test.dwarf) (KSCrashMonitor_AppState.c:447)

0x00000001000503a0: kscrashstate_currentState (in test.dwarf) (KSCrashMonitor_AppState.c:460)

0x00000001000503ac: kscm_appstate_getAPI (in test.dwarf) (KSCrashMonitor_AppState.c:509)

0x00000001000503b8: setEnabled (in test.dwarf) (KSCrashMonitor_AppState.c:465)

0x00000001000503d8: addContextualInfoToEvent (in test.dwarf) (KSCrashMonitor_AppState.c:482)

0x0000000100050444: onBeginArray (in test.dwarf) (KSCrashMonitor_AppState.c:150)

0x000000010005044c: onBeginObject (in test.dwarf) (KSCrashMonitor_AppState.c:145)

0x0000000100050454: onBooleanElement (in test.dwarf) (KSCrashMonitor_AppState.c:79)

0x000000010005048c: onEndContainer (in test.dwarf) (KSCrashMonitor_AppState.c:155)

0x0000000100050494: onEndData (in test.dwarf) (KSCrashMonitor_AppState.c:160)

0x000000010005049c: onFloatingPointElement (in test.dwarf) (KSCrashMonitor_AppState.c:91)

0x00000001000504f8: onIntegerElement (in test.dwarf) (KSCrashMonitor_AppState.c:107)

0x00000001000505c0: onNullElement (in test.dwarf) (KSCrashMonitor_AppState.c:133)

0x00000001000505c8: onStringElement (in test.dwarf) (KSCrashMonitor_AppState.c:140)

0x00000001000505d0: addJSONData (in test.dwarf) (KSCrashMonitor_AppState.c:167)

0x0000000100050600: isEnabled (in test.dwarf) (KSCrashMonitor_AppState.c:477)

0x000000010005060c: __cxa_throw (in test.dwarf) (KSCrashMonitor_CPPException.cpp:95)

0x0000000100050688: captureStackTrace(void*, std::type_info*, void (*)(void*)) (in test.dwarf) (KSCrashMonitor_CPPException.cpp:82)

0x00000001000506a8: kscm_enableSwapCxaThrow (in test.dwarf) (KSCrashMonitor_CPPException.cpp:235)

0x00000001000506e0: kscm_cppexception_getAPI (in test.dwarf) (KSCrashMonitor_CPPException.cpp:250)

0x00000001000506ec: setEnabled(bool) (in test.dwarf) (KSCrashMonitor_CPPException.cpp:210)

0x0000000100050780: isEnabled() (in test.dwarf) (KSCrashMonitor_CPPException.cpp:231)

0x000000010005078c: CPPExceptionTerminate() (in test.dwarf) (KSCrashMonitor_CPPException.cpp:111)

0x0000000100050b20: -[KSCrashDeadlockMonitor init] (in test.dwarf) (KSCrashMonitor_Deadlock.m:76)

0x0000000100050be8: -[KSCrashDeadlockMonitor cancel] (in test.dwarf) (KSCrashMonitor_Deadlock.m:88)

0x0000000100050c18: -[KSCrashDeadlockMonitor watchdogPulse] (in test.dwarf) (KSCrashMonitor_Deadlock.m:93)

0x0000000100050ce8: __Block_byref_object_copy_ (in test.dwarf) (KSCrashMonitor_Deadlock.m:0)

0x0000000100050cf8: __Block_byref_object_dispose_ (in test.dwarf) (KSCrashMonitor_Deadlock.m:0)

0x0000000100050d00: __39-[KSCrashDeadlockMonitor watchdogPulse]_block_invoke (in test.dwarf) (KSCrashMonitor_Deadlock.m:99)

0x0000000100050d10: __copy_helper_block_e8_32r (in test.dwarf) (KSCrashMonitor_Deadlock.m:0)

0x0000000100050d20: __destroy_helper_block_e8_32r (in test.dwarf) (KSCrashMonitor_Deadlock.m:0)

0x0000000100050d2c: -[KSCrashDeadlockMonitor watchdogAnswer] (in test.dwarf) (KSCrashMonitor_Deadlock.m:105)

0x0000000100050d34: -[KSCrashDeadlockMonitor handleDeadlock] (in test.dwarf) (KSCrashMonitor_Deadlock.m:108)

0x0000000100050e58: -[KSCrashDeadlockMonitor runMonitor] (in test.dwarf) (KSCrashMonitor_Deadlock.m:138)

0x0000000100050f10: -[KSCrashDeadlockMonitor monitorThread] (in test.dwarf) (KSCrashMonitor_Deadlock.m:73)

0x0000000100050f18: -[KSCrashDeadlockMonitor setMonitorThread:] (in test.dwarf) (KSCrashMonitor_Deadlock.m:73)

0x0000000100050f24: -[KSCrashDeadlockMonitor awaitingResponse] (in test.dwarf) (KSCrashMonitor_Deadlock.m:74)

0x0000000100050f30: -[KSCrashDeadlockMonitor setAwaitingResponse:] (in test.dwarf) (KSCrashMonitor_Deadlock.m:74)

0x0000000100050f38: -[KSCrashDeadlockMonitor .cxx_destruct] (in test.dwarf) (KSCrashMonitor_Deadlock.m:71)

0x0000000100050f44: kscm_deadlock_getAPI (in test.dwarf) (KSCrashMonitor_Deadlock.m:217)

0x0000000100050f50: setEnabled (in test.dwarf) (KSCrashMonitor_Deadlock.m:186)

0x0000000100050ff8: kscm_setDeadlockHandlerWatchdogInterval (in test.dwarf) (KSCrashMonitor_Deadlock.m:222)

0x0000000100051004: __initialize_block_invoke (in test.dwarf) (KSCrashMonitor_Deadlock.m:181)

0x0000000100051020: isEnabled (in test.dwarf) (KSCrashMonitor_Deadlock.m:207)

0x000000010005102c: kscm_machexception_getAPI (in test.dwarf) (KSCrashMonitor_MachException.c:608)

0x0000000100051038: setEnabled (in test.dwarf) (KSCrashMonitor_MachException.c:559)

0x0000000100051354: addContextualInfoToEvent (in test.dwarf) (KSCrashMonitor_MachException.c:586)

0x000000010005139c: handleExceptions (in test.dwarf) (KSCrashMonitor_MachException.c:270)

0x00000001000516ec: restoreExceptionPorts (in test.dwarf) (KSCrashMonitor_MachException.c:165)

0x00000001000517bc: uninstallExceptionHandler (in test.dwarf) (KSCrashMonitor_MachException.c:404)

0x0000000100051878: isEnabled (in test.dwarf) (KSCrashMonitor_MachException.c:581)

0x0000000100051884: kscm_nsexception_getAPI (in test.dwarf) (KSCrashMonitor_NSException.m:161)

0x0000000100051890: setEnabled (in test.dwarf) (KSCrashMonitor_NSException.m:127)

0x0000000100051958: handleUncaughtException (in test.dwarf) (KSCrashMonitor_NSException.m:119)

0x0000000100051960: handleCurrentSnapshotUserReportedException (in test.dwarf) (KSCrashMonitor_NSException.m:115)

0x0000000100051968: handleException (in test.dwarf) (KSCrashMonitor_NSException.m:61)

0x0000000100051c48: isEnabled (in test.dwarf) (KSCrashMonitor_NSException.m:151)

0x0000000100051c54: kscm_signal_getAPI (in test.dwarf) (KSCrashMonitor_Signal.c:255)

0x0000000100051c60: setEnabled (in test.dwarf) (KSCrashMonitor_Signal.c:211)

0x0000000100051ed8: addContextualInfoToEvent (in test.dwarf) (KSCrashMonitor_Signal.c:237)

0x0000000100051ef4: handleSignal (in test.dwarf) (KSCrashMonitor_Signal.c:83)

0x0000000100052090: isEnabled (in test.dwarf) (KSCrashMonitor_Signal.c:232)

0x000000010005209c: kscm_system_getAPI (in test.dwarf) (KSCrashMonitor_System.m:643)

0x00000001000520a8: setEnabled (in test.dwarf) (KSCrashMonitor_System.m:580)

0x0000000100052994: addContextualInfoToEvent (in test.dwarf) (KSCrashMonitor_System.m:597)

0x0000000100052b3c: cString (in test.dwarf) (KSCrashMonitor_System.m:93)

0x0000000100052b5c: stringSysctl (in test.dwarf) (KSCrashMonitor_System.m:123)

0x0000000100052bcc: getExecutablePath (in test.dwarf) (KSCrashMonitor_System.m:237)

0x0000000100052c88: getCurrentCPUArch (in test.dwarf) (KSCrashMonitor_System.m:322)

0x0000000100052d60: nsstringSysctl (in test.dwarf) (KSCrashMonitor_System.m:97)

0x0000000100052e5c: getReceiptUrlPath (in test.dwarf) (KSCrashMonitor_System.m:373)

0x0000000100052ec8: isEnabled (in test.dwarf) (KSCrashMonitor_System.m:593)

0x0000000100052ed4: VMStats (in test.dwarf) (KSCrashMonitor_System.m:168)

0x0000000100052fb4: kscm_reportUserException (in test.dwarf) (KSCrashMonitor_User.c:50)

0x0000000100053174: kscm_user_getAPI (in test.dwarf) (KSCrashMonitor_User.c:120)

0x0000000100053180: setEnabled (in test.dwarf) (KSCrashMonitor_User.c:105)

0x000000010005318c: isEnabled (in test.dwarf) (KSCrashMonitor_User.c:110)

0x0000000100053198: kszombie_className (in test.dwarf) (KSCrashMonitor_Zombie.c:194)

0x00000001000531ec: kscm_zombie_getAPI (in test.dwarf) (KSCrashMonitor_Zombie.c:250)

0x00000001000531f8: setEnabled (in test.dwarf) (KSCrashMonitor_Zombie.c:210)

0x000000010005334c: addContextualInfoToEvent (in test.dwarf) (KSCrashMonitor_Zombie.c:234)

0x0000000100053374: handleDealloc_NSObject (in test.dwarf) (KSCrashMonitor_Zombie.c:154)

0x0000000100053470: copyStringIvar (in test.dwarf) (KSCrashMonitor_Zombie.c:71)

0x00000001000534f8: handleDealloc_NSProxy (in test.dwarf) (KSCrashMonitor_Zombie.c:155)

0x00000001000535f4: isEnabled (in test.dwarf) (KSCrashMonitor_Zombie.c:229)

0x0000000100053600: CPPExceptionTerminate() [clone .cold.1] (in test.dwarf) (KSCrashMonitor_CPPException.cpp:0)

0x0000000100053640: kscpu_currentArch (in test.dwarf) (KSCPU.c:40)

0x000000010005365c: kscpu_i_fillState (in test.dwarf) (KSCPU.c:50)

0x00000001000536dc: kscpu_framePointer (in test.dwarf) (KSCPU_arm64.c:63)

0x00000001000536e4: kscpu_stackPointer (in test.dwarf) (KSCPU_arm64.c:68)

0x00000001000536ec: kscpu_instructionAddress (in test.dwarf) (KSCPU_arm64.c:73)

0x00000001000536f4: kscpu_linkRegister (in test.dwarf) (KSCPU_arm64.c:78)

0x00000001000536fc: kscpu_getState (in test.dwarf) (KSCPU_arm64.c:82)

0x0000000100053740: kscpu_numRegisters (in test.dwarf) (KSCPU_arm64.c:92)

0x0000000100053748: kscpu_registerName (in test.dwarf) (KSCPU_arm64.c:97)

0x0000000100053768: kscpu_registerValue (in test.dwarf) (KSCPU_arm64.c:105)

0x0000000100053814: kscpu_numExceptionRegisters (in test.dwarf) (KSCPU_arm64.c:126)

0x000000010005381c: kscpu_exceptionRegisterName (in test.dwarf) (KSCPU_arm64.c:130)

0x0000000100053880: kscpu_exceptionRegisterValue (in test.dwarf) (KSCPU_arm64.c:140)

0x00000001000538f8: kscpu_faultAddress (in test.dwarf) (KSCPU_arm64.c:157)

0x0000000100053900: kscpu_stackGrowDirection (in test.dwarf) (KSCPU_arm64.c:162)

0x0000000100053908: kscpu_normaliseInstructionPointer (in test.dwarf) (KSCPU_arm64.c:167)

0x0000000100053910: ksct_swap (in test.dwarf) (KSCxaThrowSwapper.c:354)

0x00000001000539c0: rebind_symbols_for_image (in test.dwarf) (KSCxaThrowSwapper.c:305)

0x0000000100053b60: get_sections (in test.dwarf) (KSCxaThrowSwapper.c:202)

0x0000000100053c2c: perform_rebinding_with_section (in test.dwarf) (KSCxaThrowSwapper.c:251)

0x0000000100053e38: __cxa_throw_decorator (in test.dwarf) (KSCxaThrowSwapper.c:106)

0x0000000100053f18: ksdate_utcStringFromTimestamp (in test.dwarf) (KSDate.c:30)

0x0000000100053f90: ksdate_utcStringFromMicroseconds (in test.dwarf) (KSDate.c:43)

0x0000000100054034: ksdebug_isBeingTraced (in test.dwarf) (KSDebug.c:44)

0x0000000100054110: ksdm_demangleCPP (in test.dwarf) (KSDemangle_CPP.cpp:33)

0x0000000100054148: ksdm_demangleSwift (in test.dwarf) (KSDemangle_Swift.cpp:32)

0x0000000100054220: char const* std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string[abi:v15006]<std::nullptr_t>() (in test.dwarf) (string:841)

0x00000001000542c0: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__throw_length_error[abi:v15006]() const (in test.dwarf) (string:1804)

0x00000001000542d4: std::__1::__throw_length_error[abi:v15006](char const*) (in test.dwarf) (stdexcept:255)

0x0000000100054324: std::length_error::length_error[abi:v15006](char const*) (in test.dwarf) (stdexcept:154)

0x0000000100054348: ksdl_imageNamed (in test.dwarf) (KSDynamicLinker.c:176)

0x00000001000543bc: ksdl_imageUUID (in test.dwarf) (KSDynamicLinker.c:204)

0x0000000100054480: ksdl_dladdr (in test.dwarf) (KSDynamicLinker.c:234)

0x0000000100054830: ksdl_imageCount (in test.dwarf) (KSDynamicLinker.c:388)

0x0000000100054834: ksdl_getBinaryImage (in test.dwarf) (KSDynamicLinker.c:392)

0x000000010005488c: ksdl_getBinaryImageForHeader (in test.dwarf) (KSDynamicLinker.c:403)

0x0000000100054a98: isValidCrashInfoMessage (in test.dwarf) (KSDynamicLinker.c:322)

0x0000000100054af4: ksfu_lastPathEntry (in test.dwarf) (KSFileUtils.c:211)

0x0000000100054b24: ksfu_writeBytesToFD (in test.dwarf) (KSFileUtils.c:221)

0x0000000100054bd0: ksfu_readBytesFromFD (in test.dwarf) (KSFileUtils.c:238)

0x0000000100054c7c: ksfu_readEntireFile (in test.dwarf) (KSFileUtils.c:255)

0x0000000100054e7c: ksfu_makePath (in test.dwarf) (KSFileUtils.c:397)

0x0000000100054f78: ksfu_removeFile (in test.dwarf) (KSFileUtils.c:426)

0x000000010005500c: ksfu_deleteContentsOfPath (in test.dwarf) (KSFileUtils.c:439)

0x000000010005504c: canDeletePath (in test.dwarf) (KSFileUtils.c:56)

0x00000001000550a4: deletePathContents (in test.dwarf) (KSFileUtils.c:157)

0x00000001000553b4: ksfu_openBufferedWriter (in test.dwarf) (KSFileUtils.c:453)

0x0000000100055450: ksfu_closeBufferedWriter (in test.dwarf) (KSFileUtils.c:467)

0x000000010005548c: ksfu_flushBufferedWriter (in test.dwarf) (KSFileUtils.c:492)

0x00000001000554d4: ksfu_writeBufferedWriter (in test.dwarf) (KSFileUtils.c:477)

0x0000000100055568: fillReadBuffer (in test.dwarf) (KSFileUtils.c:510)

0x0000000100055648: ksfu_readBufferedReaderUntilChar (in test.dwarf) (KSFileUtils.c:570)

0x0000000100055744: ksfu_openBufferedReader (in test.dwarf) (KSFileUtils.c:614)

0x00000001000557f8: ksfu_closeBufferedReader (in test.dwarf) (KSFileUtils.c:632)

0x000000010005582c: ksid_generate (in test.dwarf) (KSID.c:31)

0x00000001000558f4: ksjson_stringForError (in test.dwarf) (KSJSONCodec.c:80)

0x000000010005591c: ksjson_beginElement (in test.dwarf) (KSJSONCodec.c:253)

0x0000000100055a40: addQuotedEscapedString (in test.dwarf) (KSJSONCodec.c:238)

0x0000000100055ab8: ksjson_addBooleanElement (in test.dwarf) (KSJSONCodec.c:325)

0x0000000100055b10: ksjson_addFloatingPointElement (in test.dwarf) (KSJSONCodec.c:344)

0x0000000100055bac: ksjson_addIntegerElement (in test.dwarf) (KSJSONCodec.c:358)

0x0000000100055c40: ksjson_addUIntegerElement (in test.dwarf) (KSJSONCodec.c:372)

0x0000000100055cd4: ksjson_addNullElement (in test.dwarf) (KSJSONCodec.c:385)

0x0000000100055d14: ksjson_addStringElement (in test.dwarf) (KSJSONCodec.c:398)

0x0000000100055dac: ksjson_beginStringElement (in test.dwarf) (KSJSONCodec.c:417)

0x0000000100055dec: ksjson_appendStringElement (in test.dwarf) (KSJSONCodec.c:430)

0x0000000100055df0: addEscapedString (in test.dwarf) (KSJSONCodec.c:203)

0x0000000100055fd0: ksjson_endStringElement (in test.dwarf) (KSJSONCodec.c:435)

0x0000000100055fe4: ksjson_addDataElement (in test.dwarf) (KSJSONCodec.c:442)

0x0000000100056064: ksjson_beginDataElement (in test.dwarf) (KSJSONCodec.c:458)

0x00000001000560a4: ksjson_appendDataElement (in test.dwarf) (KSJSONCodec.c:465)

0x0000000100056128: ksjson_endStringElement (in test.dwarf) (KSJSONCodec.c:435)
0x0000000100056128: ksjson_endDataElement (in test.dwarf) (KSJSONCodec.c:486)

0x000000010005613c: ksjson_beginArray (in test.dwarf) (KSJSONCodec.c:491)

0x00000001000561a8: ksjson_beginObject (in test.dwarf) (KSJSONCodec.c:510)

0x0000000100056214: ksjson_endContainer (in test.dwarf) (KSJSONCodec.c:528)

0x00000001000562f4: ksjson_beginEncode (in test.dwarf) (KSJSONCodec.c:562)

0x0000000100056328: ksjson_endEncode (in test.dwarf) (KSJSONCodec.c:570)

0x0000000100056364: ksjson_decode (in test.dwarf) (KSJSONCodec.c:1143)

0x00000001000563f8: decodeElement (in test.dwarf) (KSJSONCodec.c:899)

0x0000000100056b18: ksjson_addJSONFromFile (in test.dwarf) (KSJSONCodec.c:1310)

0x0000000100056cfc: addJSONFromFile_onBooleanElement (in test.dwarf) (KSJSONCodec.c:1225)

0x0000000100056d3c: addJSONFromFile_onFloatingPointElement (in test.dwarf) (KSJSONCodec.c:1235)

0x0000000100056d78: addJSONFromFile_onIntegerElement (in test.dwarf) (KSJSONCodec.c:1245)

0x0000000100056db8: addJSONFromFile_onNullElement (in test.dwarf) (KSJSONCodec.c:1254)

0x0000000100056e18: addJSONFromFile_onStringElement (in test.dwarf) (KSJSONCodec.c:1264)

0x0000000100056e78: addJSONFromFile_onBeginObject (in test.dwarf) (KSJSONCodec.c:1273)

0x0000000100056eb4: addJSONFromFile_onBeginArray (in test.dwarf) (KSJSONCodec.c:1282)

0x0000000100056ef0: addJSONFromFile_onEndContainer (in test.dwarf) (KSJSONCodec.c:1290)

0x0000000100056f44: addJSONFromFile_onEndData (in test.dwarf) (KSJSONCodec.c:1303)

0x0000000100056f4c: updateDecoder_readFile (in test.dwarf) (KSJSONCodec.c:1196)

0x0000000100057020: ksjson_addJSONElement (in test.dwarf) (KSJSONCodec.c:1372)

0x000000010005716c: updateDecoder_doNothing (in test.dwarf) (KSJSONCodec.c:1193)

0x0000000100057170: decodeString (in test.dwarf) (KSJSONCodec.c:740)

0x0000000100057490: writeUTF8 (in test.dwarf) (KSJSONCodec.c:702)

0x0000000100057580: +[KSJSONCodec codecWithEncodeOptions:decodeOptions:] (in test.dwarf) (KSJSONCodecObjC.m:118)

0x00000001000575b0: -[KSJSONCodec initWithEncodeOptions:decodeOptions:] (in test.dwarf) (KSJSONCodecObjC.m:124)

0x000000010005772c: onBeginArray (in test.dwarf) (KSJSONCodecObjC.m:268)

0x00000001000577bc: onBeginObject (in test.dwarf) (KSJSONCodecObjC.m:260)

0x000000010005784c: onBooleanElement (in test.dwarf) (KSJSONCodecObjC.m:209)

0x00000001000578e4: onEndContainer (in test.dwarf) (KSJSONCodecObjC.m:276)

0x00000001000579a4: onEndData (in test.dwarf) (KSJSONCodecObjC.m:301)

0x00000001000579ac: onFloatingPointElement (in test.dwarf) (KSJSONCodecObjC.m:217)

0x0000000100057a4c: onIntegerElement (in test.dwarf) (KSJSONCodecObjC.m:227)

0x0000000100057ae4: onNullElement (in test.dwarf) (KSJSONCodecObjC.m:235)

0x0000000100057be0: onStringElement (in test.dwarf) (KSJSONCodecObjC.m:251)

0x0000000100057c78: -[KSJSONCodec dealloc] (in test.dwarf) (KSJSONCodecObjC.m:148)

0x0000000100057cc0: +[KSJSONCodec encode:options:error:] (in test.dwarf) (KSJSONCodecObjC.m:411)

0x0000000100057de0: addJSONData (in test.dwarf) (KSJSONCodecObjC.m:305)

0x0000000100057e08: encodeObject (in test.dwarf) (KSJSONCodecObjC.m:312)

0x00000001000583b4: +[KSJSONCodec decode:options:error:] (in test.dwarf) (KSJSONCodecObjC.m:432)

0x0000000100058580: -[KSJSONCodec topLevelContainer] (in test.dwarf) (KSJSONCodecObjC.m:105)

0x0000000100058588: -[KSJSONCodec setTopLevelContainer:] (in test.dwarf) (KSJSONCodecObjC.m:105)

0x0000000100058594: -[KSJSONCodec currentContainer] (in test.dwarf) (KSJSONCodecObjC.m:106)

0x000000010005859c: -[KSJSONCodec setCurrentContainer:] (in test.dwarf) (KSJSONCodecObjC.m:0)

0x00000001000585a4: -[KSJSONCodec containerStack] (in test.dwarf) (KSJSONCodecObjC.m:107)

0x00000001000585ac: -[KSJSONCodec setContainerStack:] (in test.dwarf) (KSJSONCodecObjC.m:107)

0x00000001000585b8: -[KSJSONCodec callbacks] (in test.dwarf) (KSJSONCodecObjC.m:108)

0x00000001000585c0: -[KSJSONCodec setCallbacks:] (in test.dwarf) (KSJSONCodecObjC.m:0)

0x00000001000585c8: -[KSJSONCodec serializedData] (in test.dwarf) (KSJSONCodecObjC.m:109)

0x00000001000585d0: -[KSJSONCodec setSerializedData:] (in test.dwarf) (KSJSONCodecObjC.m:109)

0x00000001000585dc: -[KSJSONCodec error] (in test.dwarf) (KSJSONCodecObjC.m:110)

0x00000001000585e4: -[KSJSONCodec setError:] (in test.dwarf) (KSJSONCodecObjC.m:110)

0x00000001000585f0: -[KSJSONCodec prettyPrint] (in test.dwarf) (KSJSONCodecObjC.m:111)

0x00000001000585f8: -[KSJSONCodec setPrettyPrint:] (in test.dwarf) (KSJSONCodecObjC.m:0)

0x0000000100058600: -[KSJSONCodec sorted] (in test.dwarf) (KSJSONCodecObjC.m:112)

0x0000000100058608: -[KSJSONCodec setSorted:] (in test.dwarf) (KSJSONCodecObjC.m:0)

0x0000000100058610: -[KSJSONCodec ignoreNullsInArrays] (in test.dwarf) (KSJSONCodecObjC.m:113)

0x0000000100058618: -[KSJSONCodec setIgnoreNullsInArrays:] (in test.dwarf) (KSJSONCodecObjC.m:0)

0x0000000100058620: -[KSJSONCodec ignoreNullsInObjects] (in test.dwarf) (KSJSONCodecObjC.m:114)

0x0000000100058628: -[KSJSONCodec setIgnoreNullsInObjects:] (in test.dwarf) (KSJSONCodecObjC.m:0)

0x0000000100058630: -[KSJSONCodec .cxx_destruct] (in test.dwarf) (KSJSONCodecObjC.m:101)

0x0000000100058678: onElement (in test.dwarf) (KSJSONCodecObjC.m:167)

0x0000000100058780: onBeginContainer (in test.dwarf) (KSJSONCodecObjC.m:190)

0x0000000100058828: kslog_setLogFilename (in test.dwarf) (KSLogger.c:152)

0x00000001000588ec: writeFmtToLog (in test.dwarf) (KSLogger.c:90)

0x000000010005896c: kslog_clearLogFile (in test.dwarf) (KSLogger.c:252)

0x000000010005897c: writeToLog (in test.dwarf) (KSLogger.c:104)

0x00000001000589f8: i_kslog_logC (in test.dwarf) (KSLogger.c:275)

0x0000000100058ad0: i_kslog_logObjCBasic (in test.dwarf) (KSLogger.c:295)

0x0000000100058b88: i_kslog_logObjC (in test.dwarf) (KSLogger.c:327)

0x0000000100058c84: ksmach_exceptionName (in test.dwarf) (KSMach.c:34)

0x0000000100058ca8: ksmach_kernelReturnCodeName (in test.dwarf) (KSMach.c:52)

0x0000000100058cc8: ksmc_contextSize (in test.dwarf) (KSMachineContext.c:101)

0x0000000100058cd0: ksmc_getThreadFromContext (in test.dwarf) (KSMachineContext.c:106)

0x0000000100058cd8: ksmc_getContextForThread (in test.dwarf) (KSMachineContext.c:110)

0x0000000100058d7c: isContextForCurrentThread (in test.dwarf) (KSMachineContext.c:269)
0x0000000100058d7c: ksmc_canHaveCPUState (in test.dwarf) (KSMachineContext.c:279)

0x0000000100058d9c: ksmc_isCrashedContext (in test.dwarf) (KSMachineContext.c:264)

0x0000000100058da4: getThreadList (in test.dwarf) (KSMachineContext.c:64)

0x0000000100058edc: ksmc_getContextForSignal (in test.dwarf) (KSMachineContext.c:131)

0x0000000100058f58: ksmc_addReservedThread (in test.dwarf) (KSMachineContext.c:145)

0x0000000100058fcc: ksmc_suspendEnvironment (in test.dwarf) (KSMachineContext.c:170)

0x0000000100059134: ksmc_resumeEnvironment (in test.dwarf) (KSMachineContext.c:201)

0x00000001000592b4: ksmc_getThreadCount (in test.dwarf) (KSMachineContext.c:239)

0x00000001000592bc: ksmc_getThreadAtIndex (in test.dwarf) (KSMachineContext.c:244)

0x00000001000592c8: ksmc_indexOfThread (in test.dwarf) (KSMachineContext.c:249)

0x0000000100059300: isContextForCurrentThread (in test.dwarf) (KSMachineContext.c:269)
0x0000000100059300: ksmc_canHaveCPUState (in test.dwarf) (KSMachineContext.c:279)
0x0000000100059300: ksmc_hasValidExceptionRegisters (in test.dwarf) (KSMachineContext.c:284)

0x0000000100059328: ksmem_maxReadableBytes (in test.dwarf) (KSMemory.c:117)

0x00000001000594cc: ksmem_isMemoryReadable (in test.dwarf) (KSMemory.c:136)

0x0000000100059564: ksmem_copyMaxPossible (in test.dwarf) (KSMemory.c:141)

0x000000010005967c: ksmem_copySafely (in test.dwarf) (KSMemory.c:146)

0x00000001000596c8: getIsaPointer (in test.dwarf) (KSObjC.c:224)
0x00000001000596c8: ksobjc_isaPointer (in test.dwarf) (KSObjC.c:692)

0x0000000100059700: getClassRW (in test.dwarf) (KSObjC.c:229)
0x0000000100059700: getClassRO (in test.dwarf) (KSObjC.c:235)
0x0000000100059700: getClassName (in test.dwarf) (KSObjC.c:268)
0x0000000100059700: ksobjc_className (in test.dwarf) (KSObjC.c:712)

0x0000000100059720: ksobjc_objectClassName (in test.dwarf) (KSObjC.c:717)

0x00000001000597a8: containsValidROData (in test.dwarf) (KSObjC.c:562)

0x000000010005982c: ksobjc_baseClass (in test.dwarf) (KSObjC.c:770)

0x000000010005989c: ksobjc_ivarList (in test.dwarf) (KSObjC.c:803)

0x0000000100059938: ksobjc_ivarNamed (in test.dwarf) (KSObjC.c:834)

0x00000001000599e8: ksobjc_ivarValue (in test.dwarf) (KSObjC.c:859)

0x0000000100059aac: getTaggedPayload (in test.dwarf) (KSObjC.c:162)
0x0000000100059aac: ksobjc_taggedPointerPayload (in test.dwarf) (KSObjC.c:897)

0x0000000100059ab4: ksobjc_objectType (in test.dwarf) (KSObjC.c:916)

0x0000000100059c18: isValidClass (in test.dwarf) (KSObjC.c:641)

0x0000000100059dd4: ksobjc_stringLength (in test.dwarf) (KSObjC.c:1060)

0x0000000100059e30: ksobjc_copyStringContents (in test.dwarf) (KSObjC.c:1212)

0x000000010005a070: extractTaggedNSString (in test.dwarf) (KSObjC.c:327)

0x000000010005a14c: isValidTaggedPointer (in test.dwarf) (KSObjC.c:182)
0x000000010005a14c: ksobjc_dateContents (in test.dwarf) (KSObjC.c:1299)

0x000000010005a174: ksobjc_numberAsFloat (in test.dwarf) (KSObjC.c:1378)

0x000000010005a220: ksobjc_numberAsInteger (in test.dwarf) (KSObjC.c:1384)

0x000000010005a2c0: isCFArray (in test.dwarf) (KSObjC.c:1550)

0x000000010005a39c: ksobjc_arrayContents (in test.dwarf) (KSObjC.c:1567)

0x000000010005a528: ksobjc_getDescription (in test.dwarf) (KSObjC.c:1682)

0x000000010005a61c: ksobjc_isTaggedPointer (in test.dwarf) (KSObjC.c:1689)

0x000000010005a624: getTaggedSlot (in test.dwarf) (KSObjC.c:161)
0x000000010005a624: getClassDataFromTaggedPointer (in test.dwarf) (KSObjC.c:176)
0x000000010005a624: isValidTaggedPointer (in test.dwarf) (KSObjC.c:186)
0x000000010005a624: ksobjc_isValidTaggedPointer (in test.dwarf) (KSObjC.c:1694)

0x000000010005a640: ksobjc_isValidObject (in test.dwarf) (KSObjC.c:1698)

0x000000010005a7c8: ksobjc_objectClassType (in test.dwarf) (KSObjC.c:1708)

0x000000010005a89c: getTaggedSlot (in test.dwarf) (KSObjC.c:161)
0x000000010005a89c: getClassDataFromTaggedPointer (in test.dwarf) (KSObjC.c:176)
0x000000010005a89c: isValidTaggedPointer (in test.dwarf) (KSObjC.c:186)
0x000000010005a89c: taggedObjectIsValid (in test.dwarf) (KSObjC.c:965)

0x000000010005a8b8: taggedObjectDescription (in test.dwarf) (KSObjC.c:978)

0x000000010005a904: getTaggedSlot (in test.dwarf) (KSObjC.c:161)
0x000000010005a904: getClassDataFromTaggedPointer (in test.dwarf) (KSObjC.c:176)
0x000000010005a904: isValidTaggedPointer (in test.dwarf) (KSObjC.c:186)
0x000000010005a904: taggedStringIsValid (in test.dwarf) (KSObjC.c:1244)

0x000000010005a934: taggedStringDescription (in test.dwarf) (KSObjC.c:1249)

0x000000010005a938: getTaggedSlot (in test.dwarf) (KSObjC.c:161)
0x000000010005a938: getClassDataFromTaggedPointer (in test.dwarf) (KSObjC.c:176)
0x000000010005a938: isValidTaggedPointer (in test.dwarf) (KSObjC.c:186)
0x000000010005a938: taggedNumberIsValid (in test.dwarf) (KSObjC.c:1423)

0x000000010005a968: taggedNumberDescription (in test.dwarf) (KSObjC.c:1427)

0x000000010005a9f4: getTaggedSlot (in test.dwarf) (KSObjC.c:161)
0x000000010005a9f4: getClassDataFromTaggedPointer (in test.dwarf) (KSObjC.c:176)
0x000000010005a9f4: isValidTaggedPointer (in test.dwarf) (KSObjC.c:186)
0x000000010005a9f4: taggedDateIsValid (in test.dwarf) (KSObjC.c:1321)

0x000000010005aa24: taggedDateDescription (in test.dwarf) (KSObjC.c:1325)

0x000000010005aab0: stringPrintf (in test.dwarf) (KSObjC.c:431)

0x000000010005ab14: isValidName (in test.dwarf) (KSObjC.c:492)

0x000000010005abe8: stringIsValid (in test.dwarf) (KSObjC.c:997)

0x000000010005ad28: stringDescription (in test.dwarf) (KSObjC.c:1230)

0x000000010005ada4: arrayIsValid (in test.dwarf) (KSObjC.c:1576)

0x000000010005ae20: arrayDescription (in test.dwarf) (KSObjC.c:1585)

0x000000010005aef8: dateIsValid (in test.dwarf) (KSObjC.c:1292)

0x000000010005af1c: dateDescription (in test.dwarf) (KSObjC.c:1308)

0x000000010005afa4: numberIsValid (in test.dwarf) (KSObjC.c:1395)

0x000000010005afc8: numberDescription (in test.dwarf) (KSObjC.c:1401)

0x000000010005b054: urlIsValid (in test.dwarf) (KSObjC.c:1258)

0x000000010005b084: urlDescription (in test.dwarf) (KSObjC.c:1274)

0x000000010005b100: objectIsValid (in test.dwarf) (KSObjC.c:960)

0x000000010005b108: objectDescription (in test.dwarf) (KSObjC.c:969)

0x000000010005b18c: kssignal_signalName (in test.dwarf) (KSSignalInfo.c:137)

0x000000010005b1c4: kssignal_signalCodeName (in test.dwarf) (KSSignalInfo.c:149)

0x000000010005b238: kssignal_fatalSignals (in test.dwarf) (KSSignalInfo.c:168)

0x000000010005b244: kssignal_numFatalSignals (in test.dwarf) (KSSignalInfo.c:173)

0x000000010005b24c: kssc_resetCursor (in test.dwarf) (KSStackCursor.c:43)

0x000000010005b25c: kssc_initCursor (in test.dwarf) (KSStackCursor.c:54)

0x000000010005b290: g_advanceCursor (in test.dwarf) (KSStackCursor.c:36)

0x000000010005b298: kssc_initWithBacktrace (in test.dwarf) (KSStackCursor_Backtrace.c:52)

0x000000010005b2e4: advanceCursor (in test.dwarf) (KSStackCursor_Backtrace.c:33)

0x000000010005b348: kssc_initWithMachineContext (in test.dwarf) (KSStackCursor_MachineContext.c:169)

0x000000010005b398: resetCursor (in test.dwarf) (KSStackCursor_MachineContext.c:158)

0x000000010005b3c8: advanceCursor (in test.dwarf) (KSStackCursor_MachineContext.c:102)

0x000000010005b4b0: kssc_initSelfThread (in test.dwarf) (KSStackCursor_SelfThread.c:42)

0x000000010005b4f8: ksstring_isNullTerminatedUTF8String (in test.dwarf) (KSString.c:69)

0x000000010005b5a8: ksstring_extractHexValue (in test.dwarf) (KSString.c:132)

0x000000010005b684: kssymbolicator_symbolicate (in test.dwarf) (KSSymbolicator.c:61)

0x000000010005b6e4: kssysctl_int32ForName (in test.dwarf) (KSSysCtl.c:73)

0x000000010005b780: kssysctl_uint64ForName (in test.dwarf) (KSSysCtl.c:151)

0x000000010005b81c: kssysctl_stringForName (in test.dwarf) (KSSysCtl.c:181)

0x000000010005b8b8: kssysctl_timevalForName (in test.dwarf) (KSSysCtl.c:205)

0x000000010005b940: kssysctl_getMacAddress (in test.dwarf) (KSSysCtl.c:235)

0x000000010005bb20: ksthread_self (in test.dwarf) (KSThread.c:43)

0x000000010005bb58: ksthread_getQueueName (in test.dwarf) (KSThread.c:58)

0x000000010005bc68: ksgs_getsegbynamefromheader (in test.dwarf) (KSgetsect.c:52)

0x000000010005bcd0: +[NSError(SimpleConstructor) errorWithDomain:code:description:] (in test.dwarf) (NSError+SimpleConstructor.m:32)

0x000000010005bdbc: +[NSError(SimpleConstructor) fillError:withDomain:code:description:] (in test.dwarf) (NSError+SimpleConstructor.m:51)

0x000000010005bebc: +[NSError(SimpleConstructor) clearError:] (in test.dwarf) (NSError+SimpleConstructor.m:69)

0x000000010005becc: +[KSCrashAlertViewProcess process] (in test.dwarf) (KSCrashReportFilterAlert.m:76)

0x000000010005bee4: -[KSCrashAlertViewProcess startWithTitle:message:yesAnswer:noAnswer:reports:onCompletion:] (in test.dwarf) (KSCrashReportFilterAlert.m:81)

0x000000010005c0b4: -[KSCrashAlertViewProcess alertView:clickedButtonAtIndex:] (in test.dwarf) (KSCrashReportFilterAlert.m:143)

0x000000010005c138: -[KSCrashAlertViewProcess reports] (in test.dwarf) (KSCrashReportFilterAlert.m:69)

0x000000010005c140: -[KSCrashAlertViewProcess setReports:] (in test.dwarf) (KSCrashReportFilterAlert.m:69)

0x000000010005c14c: -[KSCrashAlertViewProcess onCompletion] (in test.dwarf) (KSCrashReportFilterAlert.m:70)

0x000000010005c154: -[KSCrashAlertViewProcess setOnCompletion:] (in test.dwarf) (KSCrashReportFilterAlert.m:70)

0x000000010005c15c: -[KSCrashAlertViewProcess alertView] (in test.dwarf) (KSCrashReportFilterAlert.m:72)

0x000000010005c164: -[KSCrashAlertViewProcess setAlertView:] (in test.dwarf) (KSCrashReportFilterAlert.m:72)

0x000000010005c170: -[KSCrashAlertViewProcess expectedButtonIndex] (in test.dwarf) (KSCrashReportFilterAlert.m:74)

0x000000010005c178: -[KSCrashAlertViewProcess setExpectedButtonIndex:] (in test.dwarf) (KSCrashReportFilterAlert.m:0)

0x000000010005c180: -[KSCrashAlertViewProcess .cxx_destruct] (in test.dwarf) (KSCrashReportFilterAlert.m:67)

0x000000010005c1bc: +[KSCrashReportFilterAlert filterWithTitle:message:yesAnswer:noAnswer:] (in test.dwarf) (KSCrashReportFilterAlert.m:168)

0x000000010005c268: -[KSCrashReportFilterAlert initWithTitle:message:yesAnswer:noAnswer:] (in test.dwarf) (KSCrashReportFilterAlert.m:179)

0x000000010005c350: -[KSCrashReportFilterAlert filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterAlert.m:194)

0x000000010005c420: __55-[KSCrashReportFilterAlert filterReports:onCompletion:]_block_invoke (in test.dwarf) (KSCrashReportFilterAlert.m:198)

0x000000010005c5a0: __Block_byref_object_copy_ (in test.dwarf) (KSCrashReportFilterAlert.m:0)

0x000000010005c5b0: __Block_byref_object_dispose_ (in test.dwarf) (KSCrashReportFilterAlert.m:0)

0x000000010005c5b8: __55-[KSCrashReportFilterAlert filterReports:onCompletion:]_block_invoke.89 (in test.dwarf) (KSCrashReportFilterAlert.m:209)

0x000000010005c63c: __55-[KSCrashReportFilterAlert filterReports:onCompletion:]_block_invoke_2 (in test.dwarf) (KSCrashReportFilterAlert.m:214)

0x000000010005c650: __copy_helper_block_e8_32r (in test.dwarf) (KSCrashReportFilterAlert.m:0)

0x000000010005c660: __destroy_helper_block_e8_32r (in test.dwarf) (KSCrashReportFilterAlert.m:0)

0x000000010005c66c: __copy_helper_block_e8_32b40r (in test.dwarf) (KSCrashReportFilterAlert.m:0)

0x000000010005c6a8: __destroy_helper_block_e8_32s40r (in test.dwarf) (KSCrashReportFilterAlert.m:0)

0x000000010005c6d4: __copy_helper_block_e8_32s40s48b (in test.dwarf) (KSCrashReportFilterAlert.m:0)

0x000000010005c710: __destroy_helper_block_e8_32s40s48s (in test.dwarf) (KSCrashReportFilterAlert.m:0)

0x000000010005c740: -[KSCrashReportFilterAlert title] (in test.dwarf) (KSCrashReportFilterAlert.m:163)

0x000000010005c748: -[KSCrashReportFilterAlert setTitle:] (in test.dwarf) (KSCrashReportFilterAlert.m:163)

0x000000010005c754: -[KSCrashReportFilterAlert message] (in test.dwarf) (KSCrashReportFilterAlert.m:164)

0x000000010005c75c: -[KSCrashReportFilterAlert setMessage:] (in test.dwarf) (KSCrashReportFilterAlert.m:164)

0x000000010005c768: -[KSCrashReportFilterAlert yesAnswer] (in test.dwarf) (KSCrashReportFilterAlert.m:165)

0x000000010005c770: -[KSCrashReportFilterAlert setYesAnswer:] (in test.dwarf) (KSCrashReportFilterAlert.m:165)

0x000000010005c77c: -[KSCrashReportFilterAlert noAnswer] (in test.dwarf) (KSCrashReportFilterAlert.m:166)

0x000000010005c784: -[KSCrashReportFilterAlert setNoAnswer:] (in test.dwarf) (KSCrashReportFilterAlert.m:166)

0x000000010005c790: -[KSCrashReportFilterAlert .cxx_destruct] (in test.dwarf) (KSCrashReportFilterAlert.m:161)

0x000000010005c7d8: +[KSCrashReportFilterAppleFmt initialize] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:115)

0x000000010005cc04: +[KSCrashReportFilterAppleFmt filterWithReportStyle:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:165)

0x000000010005cc2c: -[KSCrashReportFilterAppleFmt initWithReportStyle:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:170)

0x000000010005cc84: -[KSCrashReportFilterAppleFmt majorVersion:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:179)

0x000000010005cd4c: -[KSCrashReportFilterAppleFmt filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:196)

0x000000010005cf04: -[KSCrashReportFilterAppleFmt CPUType:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:215)

0x000000010005cfb8: -[KSCrashReportFilterAppleFmt CPUArchForMajor:minor:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:236)

0x000000010005d08c: -[KSCrashReportFilterAppleFmt backtraceString:reportStyle:mainExecutableName:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:290)

0x000000010005d45c: -[KSCrashReportFilterAppleFmt toCompactUUID:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:352)

0x000000010005d4b4: -[KSCrashReportFilterAppleFmt stringFromDate:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:357)

0x000000010005d524: -[KSCrashReportFilterAppleFmt recrashReport:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:366)

0x000000010005d534: -[KSCrashReportFilterAppleFmt systemReport:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:371)

0x000000010005d544: -[KSCrashReportFilterAppleFmt infoReport:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:376)

0x000000010005d554: -[KSCrashReportFilterAppleFmt processReport:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:381)

0x000000010005d564: -[KSCrashReportFilterAppleFmt crashReport:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:386)

0x000000010005d574: -[KSCrashReportFilterAppleFmt binaryImagesReport:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:391)

0x000000010005d584: -[KSCrashReportFilterAppleFmt crashedThread:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:396)

0x000000010005d718: -[KSCrashReportFilterAppleFmt mainExecutableNameForReport:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:412)

0x000000010005d764: -[KSCrashReportFilterAppleFmt cpuArchForReport:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:418)

0x000000010005d81c: -[KSCrashReportFilterAppleFmt headerStringForReport:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:426)

0x000000010005d930: -[KSCrashReportFilterAppleFmt headerStringForSystemInfo:reportID:crashTime:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:436)

0x000000010005dcec: -[KSCrashReportFilterAppleFmt binaryImagesStringForReport:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:468)

0x000000010005e0a4: __59-[KSCrashReportFilterAppleFmt binaryImagesStringForReport:]_block_invoke (in test.dwarf) (KSCrashReportFilterAppleFmt.m:481)

0x000000010005e144: -[KSCrashReportFilterAppleFmt crashedThreadCPUStateStringForReport:cpuArch:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:515)

0x000000010005e3c4: -[KSCrashReportFilterAppleFmt extraInfoStringForReport:mainExecutableName:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:561)

0x000000010005e8f8: -[KSCrashReportFilterAppleFmt JSONForObject:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:632)

0x000000010005e9a0: -[KSCrashReportFilterAppleFmt isZombieNSException:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:649)

0x000000010005eca8: -[KSCrashReportFilterAppleFmt errorInfoStringForReport:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:684)

0x000000010005f300: -[KSCrashReportFilterAppleFmt stringWithUncaughtExceptionName:reason:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:761)

0x000000010005f330: -[KSCrashReportFilterAppleFmt userExceptionTrace:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:769)

0x000000010005f4f8: -[KSCrashReportFilterAppleFmt threadStringForThread:mainExecutableName:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:790)

0x000000010005f6e4: -[KSCrashReportFilterAppleFmt threadListStringForReport:mainExecutableName:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:827)

0x000000010005f880: -[KSCrashReportFilterAppleFmt crashReportString:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:843)

0x000000010005fa34: -[KSCrashReportFilterAppleFmt recrashReportString:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:858)

0x000000010005fc5c: -[KSCrashReportFilterAppleFmt toAppleFormat:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:884)

0x000000010005fd50: -[KSCrashReportFilterAppleFmt reportStyle] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:104)

0x000000010005fd58: -[KSCrashReportFilterAppleFmt setReportStyle:] (in test.dwarf) (KSCrashReportFilterAppleFmt.m:0)

0x000000010005fd60: +[KSCrashReportFilterPassthrough filter] (in test.dwarf) (KSCrashReportFilterBasic.m:39)

0x000000010005fd78: kscrash_callCompletion (in test.dwarf) (KSCrashReportFilter.h:70)
0x000000010005fd78: -[KSCrashReportFilterPassthrough filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterBasic.m:47)

0x000000010005fd98: -[KSCrashReportFilterCombine initWithFilters:keys:] (in test.dwarf) (KSCrashReportFilterBasic.m:68)

0x000000010005fe30: +[KSCrashReportFilterCombine argBlockWithFilters:andKeys:] (in test.dwarf) (KSCrashReportFilterBasic.m:78)

0x000000010005ff38: __58+[KSCrashReportFilterCombine argBlockWithFilters:andKeys:]_block_invoke (in test.dwarf) (KSCrashReportFilterBasic.m:82)

0x0000000100060068: __copy_helper_block_e8_32s40s48r (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x00000001000600a4: __destroy_helper_block_e8_32s40s48r (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x00000001000600d8: +[KSCrashReportFilterCombine filterWithFiltersAndKeys:] (in test.dwarf) (KSCrashReportFilterBasic.m:116)

0x00000001000601f8: -[KSCrashReportFilterCombine initWithFiltersAndKeys:] (in test.dwarf) (KSCrashReportFilterBasic.m:124)

0x0000000100060318: -[KSCrashReportFilterCombine filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterBasic.m:132)

0x00000001000606f0: __Block_byref_object_copy_ (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x0000000100060718: __Block_byref_object_dispose_ (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x0000000100060720: __Block_byref_object_copy_.56 (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x000000010006072c: __Block_byref_object_dispose_.57 (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x0000000100060734: __57-[KSCrashReportFilterCombine filterReports:onCompletion:]_block_invoke (in test.dwarf) (KSCrashReportFilterBasic.m:161)

0x00000001000607a8: __57-[KSCrashReportFilterCombine filterReports:onCompletion:]_block_invoke_2 (in test.dwarf) (KSCrashReportFilterBasic.m:165)

0x00000001000607bc: __57-[KSCrashReportFilterCombine filterReports:onCompletion:]_block_invoke.59 (in test.dwarf) (KSCrashReportFilterBasic.m:171)

0x0000000100060ac8: __copy_helper_block_e8_32s40s48s56s64s72b80b88r96r (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x0000000100060b4c: __destroy_helper_block_e8_32s40s48s56s64s72s80s88r96r (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x0000000100060bb4: -[KSCrashReportFilterCombine filters] (in test.dwarf) (KSCrashReportFilterBasic.m:65)

0x0000000100060bbc: -[KSCrashReportFilterCombine setFilters:] (in test.dwarf) (KSCrashReportFilterBasic.m:65)

0x0000000100060bc8: -[KSCrashReportFilterCombine keys] (in test.dwarf) (KSCrashReportFilterBasic.m:66)

0x0000000100060bd0: -[KSCrashReportFilterCombine setKeys:] (in test.dwarf) (KSCrashReportFilterBasic.m:66)

0x0000000100060bdc: -[KSCrashReportFilterCombine .cxx_destruct] (in test.dwarf) (KSCrashReportFilterBasic.m:63)

0x0000000100060c0c: +[KSCrashReportFilterPipeline filterWithFilters:] (in test.dwarf) (KSCrashReportFilterBasic.m:245)

0x0000000100060d30: __49+[KSCrashReportFilterPipeline filterWithFilters:]_block_invoke (in test.dwarf) (KSCrashReportFilterBasic.m:247)

0x0000000100060d3c: __copy_helper_block_e8_32s (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x0000000100060d44: __destroy_helper_block_e8_32s (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x0000000100060d4c: -[KSCrashReportFilterPipeline initWithFilters:] (in test.dwarf) (KSCrashReportFilterBasic.m:251)

0x0000000100060e6c: __47-[KSCrashReportFilterPipeline initWithFilters:]_block_invoke (in test.dwarf) (KSCrashReportFilterBasic.m:253)

0x0000000100060e78: -[KSCrashReportFilterPipeline initWithFiltersArray:] (in test.dwarf) (KSCrashReportFilterBasic.m:257)

0x0000000100061014: -[KSCrashReportFilterPipeline addFilter:] (in test.dwarf) (KSCrashReportFilterBasic.m:278)

0x0000000100061068: -[KSCrashReportFilterPipeline filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterBasic.m:284)

0x0000000100061320: __58-[KSCrashReportFilterPipeline filterReports:onCompletion:]_block_invoke (in test.dwarf) (KSCrashReportFilterBasic.m:300)

0x0000000100061394: __58-[KSCrashReportFilterPipeline filterReports:onCompletion:]_block_invoke_2 (in test.dwarf) (KSCrashReportFilterBasic.m:304)

0x00000001000613a8: __58-[KSCrashReportFilterPipeline filterReports:onCompletion:]_block_invoke_3 (in test.dwarf) (KSCrashReportFilterBasic.m:310)

0x0000000100061540: __copy_helper_block_e8_32s40s48b56b64r72r (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x00000001000615ac: __destroy_helper_block_e8_32s40s48s56s64r72r (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x00000001000615fc: -[KSCrashReportFilterPipeline filters] (in test.dwarf) (KSCrashReportFilterBasic.m:243)

0x0000000100061604: -[KSCrashReportFilterPipeline setFilters:] (in test.dwarf) (KSCrashReportFilterBasic.m:243)

0x0000000100061610: -[KSCrashReportFilterPipeline .cxx_destruct] (in test.dwarf) (KSCrashReportFilterBasic.m:241)

0x000000010006161c: +[KSCrashReportFilterObjectForKey filterWithKey:allowNotFound:] (in test.dwarf) (KSCrashReportFilterBasic.m:366)

0x0000000100061674: -[KSCrashReportFilterObjectForKey initWithKey:allowNotFound:] (in test.dwarf) (KSCrashReportFilterBasic.m:372)

0x00000001000616f8: -[KSCrashReportFilterObjectForKey filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterBasic.m:383)

0x00000001000619e4: -[KSCrashReportFilterObjectForKey key] (in test.dwarf) (KSCrashReportFilterBasic.m:363)

0x00000001000619ec: -[KSCrashReportFilterObjectForKey setKey:] (in test.dwarf) (KSCrashReportFilterBasic.m:363)

0x00000001000619f8: -[KSCrashReportFilterObjectForKey allowNotFound] (in test.dwarf) (KSCrashReportFilterBasic.m:364)

0x0000000100061a00: -[KSCrashReportFilterObjectForKey setAllowNotFound:] (in test.dwarf) (KSCrashReportFilterBasic.m:0)

0x0000000100061a08: -[KSCrashReportFilterObjectForKey .cxx_destruct] (in test.dwarf) (KSCrashReportFilterBasic.m:361)

0x0000000100061a14: +[KSCrashReportFilterConcatenate filterWithSeparatorFmt:keys:] (in test.dwarf) (KSCrashReportFilterBasic.m:433)

0x0000000100061b5c: __62+[KSCrashReportFilterConcatenate filterWithSeparatorFmt:keys:]_block_invoke (in test.dwarf) (KSCrashReportFilterBasic.m:435)

0x0000000100061b68: -[KSCrashReportFilterConcatenate initWithSeparatorFmt:keys:] (in test.dwarf) (KSCrashReportFilterBasic.m:439)

0x0000000100061cac: __60-[KSCrashReportFilterConcatenate initWithSeparatorFmt:keys:]_block_invoke (in test.dwarf) (KSCrashReportFilterBasic.m:441)

0x0000000100061cb8: -[KSCrashReportFilterConcatenate initWithSeparatorFmt:keysArray:] (in test.dwarf) (KSCrashReportFilterBasic.m:445)

0x0000000100061e78: -[KSCrashReportFilterConcatenate filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterBasic.m:468)

0x0000000100062138: -[KSCrashReportFilterConcatenate separatorFmt] (in test.dwarf) (KSCrashReportFilterBasic.m:430)

0x0000000100062140: -[KSCrashReportFilterConcatenate setSeparatorFmt:] (in test.dwarf) (KSCrashReportFilterBasic.m:430)

0x000000010006214c: -[KSCrashReportFilterConcatenate keys] (in test.dwarf) (KSCrashReportFilterBasic.m:431)

0x0000000100062154: -[KSCrashReportFilterConcatenate setKeys:] (in test.dwarf) (KSCrashReportFilterBasic.m:431)

0x0000000100062160: -[KSCrashReportFilterConcatenate .cxx_destruct] (in test.dwarf) (KSCrashReportFilterBasic.m:428)

0x0000000100062190: +[KSCrashReportFilterSubset filterWithKeys:] (in test.dwarf) (KSCrashReportFilterBasic.m:507)

0x00000001000622b4: __44+[KSCrashReportFilterSubset filterWithKeys:]_block_invoke (in test.dwarf) (KSCrashReportFilterBasic.m:509)

0x00000001000622c0: -[KSCrashReportFilterSubset initWithKeys:] (in test.dwarf) (KSCrashReportFilterBasic.m:513)

0x00000001000623e0: __42-[KSCrashReportFilterSubset initWithKeys:]_block_invoke (in test.dwarf) (KSCrashReportFilterBasic.m:515)

0x00000001000623ec: -[KSCrashReportFilterSubset initWithKeysArray:] (in test.dwarf) (KSCrashReportFilterBasic.m:519)

0x0000000100062588: -[KSCrashReportFilterSubset filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterBasic.m:541)

0x00000001000628c0: -[KSCrashReportFilterSubset keyPaths] (in test.dwarf) (KSCrashReportFilterBasic.m:505)

0x00000001000628c8: -[KSCrashReportFilterSubset setKeyPaths:] (in test.dwarf) (KSCrashReportFilterBasic.m:505)

0x00000001000628d4: -[KSCrashReportFilterSubset .cxx_destruct] (in test.dwarf) (KSCrashReportFilterBasic.m:503)

0x00000001000628e0: +[KSCrashReportFilterDataToString filter] (in test.dwarf) (KSCrashReportFilterBasic.m:571)

0x00000001000628f8: -[KSCrashReportFilterDataToString filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterBasic.m:576)

0x0000000100062a98: +[KSCrashReportFilterStringToData filter] (in test.dwarf) (KSCrashReportFilterBasic.m:594)

0x0000000100062ab0: -[KSCrashReportFilterStringToData filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterBasic.m:599)

0x0000000100062ccc: +[KSCrashReportFilterGZipCompress filterWithCompressionLevel:] (in test.dwarf) (KSCrashReportFilterGZip.m:42)

0x0000000100062cf4: -[KSCrashReportFilterGZipCompress initWithCompressionLevel:] (in test.dwarf) (KSCrashReportFilterGZip.m:47)

0x0000000100062d4c: -[KSCrashReportFilterGZipCompress filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterGZip.m:56)

0x0000000100062f44: -[KSCrashReportFilterGZipCompress compressionLevel] (in test.dwarf) (KSCrashReportFilterGZip.m:40)

0x0000000100062f4c: -[KSCrashReportFilterGZipCompress setCompressionLevel:] (in test.dwarf) (KSCrashReportFilterGZip.m:0)

0x0000000100062f54: +[KSCrashReportFilterGZipDecompress filter] (in test.dwarf) (KSCrashReportFilterGZip.m:84)

0x0000000100062f6c: -[KSCrashReportFilterGZipDecompress filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterGZip.m:89)

0x0000000100063150: +[KSCrashReportFilterJSONEncode filterWithOptions:] (in test.dwarf) (KSCrashReportFilterJSON.m:45)

0x0000000100063178: -[KSCrashReportFilterJSONEncode initWithOptions:] (in test.dwarf) (KSCrashReportFilterJSON.m:50)

0x00000001000631d0: -[KSCrashReportFilterJSONEncode filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterJSON.m:59)

0x00000001000633d4: -[KSCrashReportFilterJSONEncode encodeOptions] (in test.dwarf) (KSCrashReportFilterJSON.m:43)

0x00000001000633dc: -[KSCrashReportFilterJSONEncode setEncodeOptions:] (in test.dwarf) (KSCrashReportFilterJSON.m:0)

0x00000001000633e4: +[KSCrashReportFilterJSONDecode filterWithOptions:] (in test.dwarf) (KSCrashReportFilterJSON.m:97)

0x000000010006340c: -[KSCrashReportFilterJSONDecode initWithOptions:] (in test.dwarf) (KSCrashReportFilterJSON.m:102)

0x0000000100063464: -[KSCrashReportFilterJSONDecode filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterJSON.m:111)

0x0000000100063668: -[KSCrashReportFilterJSONDecode decodeOptions] (in test.dwarf) (KSCrashReportFilterJSON.m:95)

0x0000000100063670: -[KSCrashReportFilterJSONDecode setDecodeOptions:] (in test.dwarf) (KSCrashReportFilterJSON.m:0)

0x0000000100063678: +[KSCrashFilterSets appleFmtWithUserAndSystemData:compressed:] (in test.dwarf) (KSCrashReportFilterSets.m:36)

0x0000000100063894: +[KSCrashReportFilterStringify filter] (in test.dwarf) (KSCrashReportFilterStringify.m:30)

0x00000001000638ac: -[KSCrashReportFilterStringify stringifyObject:] (in test.dwarf) (KSCrashReportFilterStringify.m:35)

0x0000000100063960: -[KSCrashReportFilterStringify filterReports:onCompletion:] (in test.dwarf) (KSCrashReportFilterStringify.m:48)

0x0000000100063afc: -[NSDictionary(DeepSearch) objectForDeepKey:] (in test.dwarf) (Container+DeepSearch.m:198)

0x0000000100063b04: objectForDeepKey (in test.dwarf) (Container+DeepSearch.m:44)

0x0000000100063d70: -[NSDictionary(DeepSearch) objectForKeyPath:] (in test.dwarf) (Container+DeepSearch.m:203)

0x0000000100063d78: objectForKeyPath (in test.dwarf) (Container+DeepSearch.m:77)

0x0000000100063e64: -[NSDictionary(DeepSearch) setObject:forDeepKey:] (in test.dwarf) (Container+DeepSearch.m:208)

0x0000000100063e70: setObjectForDeepKey (in test.dwarf) (Container+DeepSearch.m:108)

0x000000010006408c: -[NSDictionary(DeepSearch) setObject:forKeyPath:] (in test.dwarf) (Container+DeepSearch.m:213)

0x0000000100064098: setObjectForKeyPath (in test.dwarf) (Container+DeepSearch.m:149)

0x0000000100064118: -[NSDictionary(DeepSearch) removeObjectForDeepKey:] (in test.dwarf) (Container+DeepSearch.m:218)

0x0000000100064120: removeObjectForDeepKey (in test.dwarf) (Container+DeepSearch.m:154)

0x000000010006429c: -[NSDictionary(DeepSearch) removeObjectForKeyPath:] (in test.dwarf) (Container+DeepSearch.m:223)

0x00000001000642a4: removeObjectForKeyPath (in test.dwarf) (Container+DeepSearch.m:189)

0x00000001000642fc: -[NSArray(DeepSearch) objectForDeepKey:] (in test.dwarf) (Container+DeepSearch.m:235)

0x0000000100064304: -[NSArray(DeepSearch) objectForKeyPath:] (in test.dwarf) (Container+DeepSearch.m:240)

0x000000010006430c: -[NSArray(DeepSearch) setObject:forDeepKey:] (in test.dwarf) (Container+DeepSearch.m:245)

0x0000000100064318: -[NSArray(DeepSearch) setObject:forKeyPath:] (in test.dwarf) (Container+DeepSearch.m:250)

0x0000000100064324: -[NSArray(DeepSearch) removeObjectForDeepKey:] (in test.dwarf) (Container+DeepSearch.m:255)

0x000000010006432c: -[NSArray(DeepSearch) removeObjectForKeyPath:] (in test.dwarf) (Container+DeepSearch.m:260)

0x0000000100064334: parentOfDeepKey (in test.dwarf) (Container+DeepSearch.m:86)

0x0000000100064430: -[NSData(KSGZip) gzippedWithCompressionLevel:error:] (in test.dwarf) (NSData+KSGZip.m:65)

0x00000001000646a4: zlibError (in test.dwarf) (NSData+KSGZip.m:38)

0x0000000100064790: -[NSData(KSGZip) gunzippedWithError:] (in test.dwarf) (NSData+KSGZip.m:124)

0x00000001000649ec: +[KSCString stringWithString:] (in test.dwarf) (KSCString.m:34)

0x0000000100064a34: +[KSCString stringWithCString:] (in test.dwarf) (KSCString.m:39)

0x0000000100064a5c: +[KSCString stringWithData:] (in test.dwarf) (KSCString.m:44)

0x0000000100064aa4: +[KSCString stringWithData:length:] (in test.dwarf) (KSCString.m:49)

0x0000000100064ad4: -[KSCString initWithString:] (in test.dwarf) (KSCString.m:54)

0x0000000100064b08: -[KSCString initWithCString:] (in test.dwarf) (KSCString.m:59)

0x0000000100064b68: -[KSCString initWithData:] (in test.dwarf) (KSCString.m:69)

0x0000000100064bc4: -[KSCString initWithData:length:] (in test.dwarf) (KSCString.m:74)

0x0000000100064c44: -[KSCString dealloc] (in test.dwarf) (KSCString.m:87)

0x0000000100064c90: -[KSCString length] (in test.dwarf) (KSCString.m:31)

0x0000000100064c98: -[KSCString bytes] (in test.dwarf) (KSCString.m:32)

0x0000000100064ca0: +[KSHTTPPostField data:name:contentType:filename:] (in test.dwarf) (KSHTTPMultipartPostBody.m:71)

0x0000000100064d4c: -[KSHTTPPostField initWithData:name:contentType:filename:] (in test.dwarf) (KSHTTPMultipartPostBody.m:82)

0x0000000100064eec: -[KSHTTPPostField data] (in test.dwarf) (KSHTTPMultipartPostBody.m:66)

0x0000000100064ef4: -[KSHTTPPostField name] (in test.dwarf) (KSHTTPMultipartPostBody.m:67)

0x0000000100064efc: -[KSHTTPPostField contentType] (in test.dwarf) (KSHTTPMultipartPostBody.m:68)

0x0000000100064f04: -[KSHTTPPostField filename] (in test.dwarf) (KSHTTPMultipartPostBody.m:69)

0x0000000100064f0c: -[KSHTTPPostField .cxx_destruct] (in test.dwarf) (KSHTTPMultipartPostBody.m:64)

0x0000000100064f54: +[KSHTTPMultipartPostBody body] (in test.dwarf) (KSHTTPMultipartPostBody.m:117)

0x0000000100064f6c: -[KSHTTPMultipartPostBody init] (in test.dwarf) (KSHTTPMultipartPostBody.m:122)

0x000000010006508c: -[KSHTTPMultipartPostBody appendData:name:contentType:filename:] (in test.dwarf) (KSHTTPMultipartPostBody.m:134)

0x00000001000650d0: -[KSHTTPMultipartPostBody appendUTF8String:name:contentType:filename:] (in test.dwarf) (KSHTTPMultipartPostBody.m:145)

0x00000001000651a4: -[KSHTTPMultipartPostBody toStringWithQuotesEscaped:] (in test.dwarf) (KSHTTPMultipartPostBody.m:157)

0x00000001000651bc: -[KSHTTPMultipartPostBody data] (in test.dwarf) (KSHTTPMultipartPostBody.m:162)

0x0000000100065530: -[KSHTTPMultipartPostBody contentType] (in test.dwarf) (KSHTTPMultipartPostBody.m:113)

0x0000000100065538: -[KSHTTPMultipartPostBody fields] (in test.dwarf) (KSHTTPMultipartPostBody.m:114)

0x0000000100065540: -[KSHTTPMultipartPostBody setFields:] (in test.dwarf) (KSHTTPMultipartPostBody.m:114)

0x000000010006554c: -[KSHTTPMultipartPostBody boundary] (in test.dwarf) (KSHTTPMultipartPostBody.m:115)

0x0000000100065554: -[KSHTTPMultipartPostBody setBoundary:] (in test.dwarf) (KSHTTPMultipartPostBody.m:115)

0x0000000100065560: -[KSHTTPMultipartPostBody .cxx_destruct] (in test.dwarf) (KSHTTPMultipartPostBody.m:111)

0x000000010006559c: +[KSHTTPRequestSender sender] (in test.dwarf) (KSHTTPRequestSender.m:34)

0x00000001000655b4: -[KSHTTPRequestSender handleResponse:data:error:onSuccess:onFailure:onError:] (in test.dwarf) (KSHTTPRequestSender.m:39)

0x00000001000658d0: __77-[KSHTTPRequestSender handleResponse:data:error:onSuccess:onFailure:onError:]_block_invoke (in test.dwarf) (KSHTTPRequestSender.m:73)

0x00000001000658e4: __copy_helper_block_e8_32s40s48b (in test.dwarf) (KSHTTPRequestSender.m:0)

0x0000000100065920: __destroy_helper_block_e8_32s40s48s (in test.dwarf) (KSHTTPRequestSender.m:0)

0x0000000100065950: __77-[KSHTTPRequestSender handleResponse:data:error:onSuccess:onFailure:onError:]_block_invoke.5 (in test.dwarf) (KSHTTPRequestSender.m:81)

0x0000000100065964: __77-[KSHTTPRequestSender handleResponse:data:error:onSuccess:onFailure:onError:]_block_invoke_2 (in test.dwarf) (KSHTTPRequestSender.m:91)

0x0000000100065974: __copy_helper_block_e8_32s40b (in test.dwarf) (KSHTTPRequestSender.m:0)

0x00000001000659a8: __destroy_helper_block_e8_32s40s (in test.dwarf) (KSHTTPRequestSender.m:0)

0x00000001000659d0: -[KSHTTPRequestSender sendRequest:onSuccess:onFailure:onError:] (in test.dwarf) (KSHTTPRequestSender.m:97)

0x0000000100065b20: __63-[KSHTTPRequestSender sendRequest:onSuccess:onFailure:onError:]_block_invoke (in test.dwarf) (KSHTTPRequestSender.m:116)

0x0000000100065b38: __copy_helper_block_e8_32s40b48b56b (in test.dwarf) (KSHTTPRequestSender.m:0)

0x0000000100065b8c: __destroy_helper_block_e8_32s40s48s56s (in test.dwarf) (KSHTTPRequestSender.m:0)

0x0000000100065bc4: +[KSReachabilityKSCrash reachabilityToHost:] (in test.dwarf) (KSReachabilityKSCrash.m:73)

0x0000000100065c0c: +[KSReachabilityKSCrash reachabilityToLocalNetwork] (in test.dwarf) (KSReachabilityKSCrash.m:79)

0x0000000100065c70: -[KSReachabilityKSCrash initWithHost:] (in test.dwarf) (KSReachabilityKSCrash.m:90)

0x0000000100065d34: -[KSReachabilityKSCrash initWithAddress:] (in test.dwarf) (KSReachabilityKSCrash.m:107)

0x0000000100065d6c: -[KSReachabilityKSCrash initWithReachabilityRef:] (in test.dwarf) (KSReachabilityKSCrash.m:113)

0x0000000100065ebc: onReachabilityChanged (in test.dwarf) (KSReachabilityKSCrash.m:280)

0x0000000100065f60: __49-[KSReachabilityKSCrash initWithReachabilityRef:]_block_invoke (in test.dwarf) (KSReachabilityKSCrash.m:146)

0x0000000100066014: __49-[KSReachabilityKSCrash initWithReachabilityRef:]_block_invoke_2 (in test.dwarf) (KSReachabilityKSCrash.m:153)

0x0000000100066048: __copy_helper_block_e8_32s (in test.dwarf) (KSReachabilityKSCrash.m:0)

0x0000000100066050: __destroy_helper_block_e8_32s (in test.dwarf) (KSReachabilityKSCrash.m:0)

0x0000000100066058: -[KSReachabilityKSCrash dealloc] (in test.dwarf) (KSReachabilityKSCrash.m:176)

0x00000001000660c4: -[KSReachabilityKSCrash extractHostName:] (in test.dwarf) (KSReachabilityKSCrash.m:187)

0x000000010006614c: -[KSReachabilityKSCrash isReachableWithFlags:] (in test.dwarf) (KSReachabilityKSCrash.m:202)

0x000000010006617c: -[KSReachabilityKSCrash onReachabilityFlagsChanged:] (in test.dwarf) (KSReachabilityKSCrash.m:227)

0x0000000100066314: -[KSReachabilityKSCrash updateFlags] (in test.dwarf) (KSReachabilityKSCrash.m:266)

0x0000000100066360: -[KSReachabilityKSCrash onReachabilityChanged] (in test.dwarf) (KSReachabilityKSCrash.m:65)

0x0000000100066368: -[KSReachabilityKSCrash setOnReachabilityChanged:] (in test.dwarf) (KSReachabilityKSCrash.m:65)

0x0000000100066370: -[KSReachabilityKSCrash flags] (in test.dwarf) (KSReachabilityKSCrash.m:66)

0x0000000100066378: -[KSReachabilityKSCrash setFlags:] (in test.dwarf) (KSReachabilityKSCrash.m:0)

0x0000000100066380: -[KSReachabilityKSCrash reachable] (in test.dwarf) (KSReachabilityKSCrash.m:67)

0x0000000100066388: -[KSReachabilityKSCrash setReachable:] (in test.dwarf) (KSReachabilityKSCrash.m:0)

0x0000000100066390: -[KSReachabilityKSCrash WWANOnly] (in test.dwarf) (KSReachabilityKSCrash.m:68)

0x0000000100066398: -[KSReachabilityKSCrash setWWANOnly:] (in test.dwarf) (KSReachabilityKSCrash.m:0)

0x00000001000663a0: -[KSReachabilityKSCrash reachabilityRef] (in test.dwarf) (KSReachabilityKSCrash.m:69)

0x00000001000663a8: -[KSReachabilityKSCrash setReachabilityRef:] (in test.dwarf) (KSReachabilityKSCrash.m:0)

0x00000001000663b0: -[KSReachabilityKSCrash hostname] (in test.dwarf) (KSReachabilityKSCrash.m:70)

0x00000001000663b8: -[KSReachabilityKSCrash setHostname:] (in test.dwarf) (KSReachabilityKSCrash.m:70)

0x00000001000663c4: -[KSReachabilityKSCrash notificationName] (in test.dwarf) (KSReachabilityKSCrash.m:71)

0x00000001000663cc: -[KSReachabilityKSCrash setNotificationName:] (in test.dwarf) (KSReachabilityKSCrash.m:71)

0x00000001000663d8: -[KSReachabilityKSCrash .cxx_destruct] (in test.dwarf) (KSReachabilityKSCrash.m:63)

0x0000000100066414: +[KSReachableOperationKSCrash operationWithHost:allowWWAN:block:] (in test.dwarf) (KSReachabilityKSCrash.m:305)

0x0000000100066488: -[KSReachableOperationKSCrash initWithHost:allowWWAN:block:] (in test.dwarf) (KSReachabilityKSCrash.m:312)

0x00000001000665ac: __60-[KSReachableOperationKSCrash initWithHost:allowWWAN:block:]_block_invoke (in test.dwarf) (KSReachabilityKSCrash.m:322)

0x000000010006660c: __copy_helper_block_e8_32b (in test.dwarf) (KSReachabilityKSCrash.m:0)

0x000000010006661c: -[KSReachableOperationKSCrash reachability] (in test.dwarf) (KSReachabilityKSCrash.m:303)

0x0000000100066624: -[KSReachableOperationKSCrash setReachability:] (in test.dwarf) (KSReachabilityKSCrash.m:303)

0x0000000100066630: -[KSReachableOperationKSCrash .cxx_destruct] (in test.dwarf) (KSReachabilityKSCrash.m:301)

0x000000010006663c: __onReachabilityChanged_block_invoke (in test.dwarf) (KSReachabilityKSCrash.m:284)

0x0000000100066670: -[NSMutableData(AppendUTF8) appendUTF8String:] (in test.dwarf) (NSMutableData+AppendUTF8.m:33)

0x00000001000666ac: -[NSMutableData(AppendUTF8) appendUTF8Format:] (in test.dwarf) (NSMutableData+AppendUTF8.m:39)

0x0000000100066744: -[NSString(URLEncode) URLEncoded] (in test.dwarf) (NSString+URLEncode.m:31)

0x000000010006679c: +[KSCrashReportSinkConsole filter] (in test.dwarf) (KSCrashReportSinkConsole.m:35)

0x00000001000667b4: -[KSCrashReportSinkConsole defaultCrashReportFilterSet] (in test.dwarf) (KSCrashReportSinkConsole.m:40)

0x000000010006682c: -[KSCrashReportSinkConsole filterReports:onCompletion:] (in test.dwarf) (KSCrashReportSinkConsole.m:48)

0x000000010006698c: +[KSCrashMailProcess process] (in test.dwarf) (KSCrashReportSinkEMail.m:69)

0x00000001000669a4: -[KSCrashMailProcess startWithController:reports:filenameFmt:onCompletion:] (in test.dwarf) (KSCrashReportSinkEMail.m:74)

0x0000000100066bd4: -[KSCrashMailProcess mailComposeController:didFinishWithResult:error:] (in test.dwarf) (KSCrashReportSinkEMail.m:102)

0x0000000100066dd4: -[KSCrashMailProcess presentModalVC:] (in test.dwarf) (KSCrashReportSinkEMail.m:135)

0x0000000100066f78: -[KSCrashMailProcess dismissModalVC] (in test.dwarf) (KSCrashReportSinkEMail.m:156)

0x0000000100067094: __36-[KSCrashMailProcess dismissModalVC]_block_invoke (in test.dwarf) (KSCrashReportSinkEMail.m:161)

0x00000001000670f8: __copy_helper_block_e8_32s (in test.dwarf) (KSCrashReportSinkEMail.m:0)

0x0000000100067100: __destroy_helper_block_e8_32s (in test.dwarf) (KSCrashReportSinkEMail.m:0)

0x0000000100067108: -[KSCrashMailProcess reports] (in test.dwarf) (KSCrashReportSinkEMail.m:65)

0x0000000100067110: -[KSCrashMailProcess setReports:] (in test.dwarf) (KSCrashReportSinkEMail.m:65)

0x000000010006711c: -[KSCrashMailProcess onCompletion] (in test.dwarf) (KSCrashReportSinkEMail.m:66)

0x0000000100067124: -[KSCrashMailProcess setOnCompletion:] (in test.dwarf) (KSCrashReportSinkEMail.m:66)

0x000000010006712c: -[KSCrashMailProcess dummyVC] (in test.dwarf) (KSCrashReportSinkEMail.m:67)

0x0000000100067134: -[KSCrashMailProcess setDummyVC:] (in test.dwarf) (KSCrashReportSinkEMail.m:67)

0x0000000100067140: -[KSCrashMailProcess .cxx_destruct] (in test.dwarf) (KSCrashReportSinkEMail.m:63)

0x000000010006717c: +[KSCrashReportSinkEMail sinkWithRecipients:subject:message:filenameFmt:] (in test.dwarf) (KSCrashReportSinkEMail.m:200)

0x0000000100067228: -[KSCrashReportSinkEMail initWithRecipients:subject:message:filenameFmt:] (in test.dwarf) (KSCrashReportSinkEMail.m:211)

0x0000000100067310: -[KSCrashReportSinkEMail defaultCrashReportFilterSet] (in test.dwarf) (KSCrashReportSinkEMail.m:226)

0x00000001000673b0: -[KSCrashReportSinkEMail defaultCrashReportFilterSetAppleFmt] (in test.dwarf) (KSCrashReportSinkEMail.m:235)

0x0000000100067478: -[KSCrashReportSinkEMail filterReports:onCompletion:] (in test.dwarf) (KSCrashReportSinkEMail.m:245)

0x0000000100067794: __53-[KSCrashReportSinkEMail filterReports:onCompletion:]_block_invoke (in test.dwarf) (KSCrashReportSinkEMail.m:277)

0x0000000100067894: __Block_byref_object_copy_ (in test.dwarf) (KSCrashReportSinkEMail.m:0)

0x00000001000678a4: __Block_byref_object_dispose_ (in test.dwarf) (KSCrashReportSinkEMail.m:0)

0x00000001000678ac: __53-[KSCrashReportSinkEMail filterReports:onCompletion:]_block_invoke.109 (in test.dwarf) (KSCrashReportSinkEMail.m:285)

0x0000000100067930: __53-[KSCrashReportSinkEMail filterReports:onCompletion:]_block_invoke_2 (in test.dwarf) (KSCrashReportSinkEMail.m:289)

0x0000000100067944: __copy_helper_block_e8_32r (in test.dwarf) (KSCrashReportSinkEMail.m:0)

0x0000000100067954: __destroy_helper_block_e8_32r (in test.dwarf) (KSCrashReportSinkEMail.m:0)

0x0000000100067960: __copy_helper_block_e8_32b40r (in test.dwarf) (KSCrashReportSinkEMail.m:0)

0x000000010006799c: __destroy_helper_block_e8_32s40r (in test.dwarf) (KSCrashReportSinkEMail.m:0)

0x00000001000679c8: __copy_helper_block_e8_32s40s48s56b (in test.dwarf) (KSCrashReportSinkEMail.m:0)

0x0000000100067a0c: __destroy_helper_block_e8_32s40s48s56s (in test.dwarf) (KSCrashReportSinkEMail.m:0)

0x0000000100067a44: -[KSCrashReportSinkEMail recipients] (in test.dwarf) (KSCrashReportSinkEMail.m:195)

0x0000000100067a4c: -[KSCrashReportSinkEMail setRecipients:] (in test.dwarf) (KSCrashReportSinkEMail.m:195)

0x0000000100067a58: -[KSCrashReportSinkEMail subject] (in test.dwarf) (KSCrashReportSinkEMail.m:196)

0x0000000100067a60: -[KSCrashReportSinkEMail setSubject:] (in test.dwarf) (KSCrashReportSinkEMail.m:196)

0x0000000100067a6c: -[KSCrashReportSinkEMail message] (in test.dwarf) (KSCrashReportSinkEMail.m:197)

0x0000000100067a74: -[KSCrashReportSinkEMail setMessage:] (in test.dwarf) (KSCrashReportSinkEMail.m:197)

0x0000000100067a80: -[KSCrashReportSinkEMail filenameFmt] (in test.dwarf) (KSCrashReportSinkEMail.m:198)

0x0000000100067a88: -[KSCrashReportSinkEMail setFilenameFmt:] (in test.dwarf) (KSCrashReportSinkEMail.m:198)

0x0000000100067a94: -[KSCrashReportSinkEMail .cxx_destruct] (in test.dwarf) (KSCrashReportSinkEMail.m:193)

0x0000000100067adc: +[KSCrashReportSinkQuincy sinkWithURL:userIDKey:userNameKey:contactEmailKey:crashDescriptionKeys:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:75)

0x0000000100067ba4: -[KSCrashReportSinkQuincy initWithURL:userIDKey:userNameKey:contactEmailKey:crashDescriptionKeys:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:88)

0x0000000100067cc4: -[KSCrashReportSinkQuincy defaultCrashReportFilterSet] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:106)

0x0000000100067da4: -[KSCrashReportSinkQuincy cdataEscaped:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:119)

0x0000000100067e08: -[KSCrashReportSinkQuincy blankForNil:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:129)

0x0000000100067e1c: -[KSCrashReportSinkQuincy descriptionForReport:keys:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:132)

0x00000001000680cc: -[KSCrashReportSinkQuincy quincyInstallUUID] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:177)

0x000000010006810c: __44-[KSCrashReportSinkQuincy quincyInstallUUID]_block_invoke (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:183)

0x0000000100068208: -[KSCrashReportSinkQuincy quincyArchFromCpuType:cpuSubType:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:202)

0x00000001000682b4: -[KSCrashReportSinkQuincy uuidsFromReport:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:266)

0x0000000100068630: -[KSCrashReportSinkQuincy toQuincyFormat:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:316)

0x0000000100068b20: -[KSCrashReportSinkQuincy toQuincyBody:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:364)

0x0000000100068ca4: -[KSCrashReportSinkQuincy filterReports:bodyName:bodyContentType:bodyFilename:onCompletion:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:378)

0x0000000100069070: __92-[KSCrashReportSinkQuincy filterReports:bodyName:bodyContentType:bodyFilename:onCompletion:]_block_invoke (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:415)

0x00000001000691c0: __92-[KSCrashReportSinkQuincy filterReports:bodyName:bodyContentType:bodyFilename:onCompletion:]_block_invoke_2 (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:420)

0x00000001000691e4: __copy_helper_block_e8_32s40b (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:0)

0x0000000100069218: __destroy_helper_block_e8_32s40s (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:0)

0x0000000100069240: __92-[KSCrashReportSinkQuincy filterReports:bodyName:bodyContentType:bodyFilename:onCompletion:]_block_invoke.113 (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:424)

0x0000000100069340: __copy_helper_block_e8_32s40s48b (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:0)

0x000000010006937c: __destroy_helper_block_e8_32s40s48s (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:0)

0x00000001000693ac: __92-[KSCrashReportSinkQuincy filterReports:bodyName:bodyContentType:bodyFilename:onCompletion:]_block_invoke.114 (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:433)

0x00000001000693d0: -[KSCrashReportSinkQuincy filterReports:onCompletion:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:452)

0x00000001000693e8: -[KSCrashReportSinkQuincy url] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:67)

0x00000001000693f0: -[KSCrashReportSinkQuincy setUrl:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:67)

0x00000001000693fc: -[KSCrashReportSinkQuincy userIDKey] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:68)

0x0000000100069404: -[KSCrashReportSinkQuincy setUserIDKey:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:68)

0x0000000100069410: -[KSCrashReportSinkQuincy userNameKey] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:69)

0x0000000100069418: -[KSCrashReportSinkQuincy setUserNameKey:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:69)

0x0000000100069424: -[KSCrashReportSinkQuincy contactEmailKey] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:70)

0x000000010006942c: -[KSCrashReportSinkQuincy setContactEmailKey:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:70)

0x0000000100069438: -[KSCrashReportSinkQuincy crashDescriptionKeys] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:71)

0x0000000100069440: -[KSCrashReportSinkQuincy setCrashDescriptionKeys:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:71)

0x000000010006944c: -[KSCrashReportSinkQuincy reachableOperation] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:72)

0x0000000100069454: -[KSCrashReportSinkQuincy setReachableOperation:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:72)

0x0000000100069460: -[KSCrashReportSinkQuincy waitUntilReachable] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:73)

0x0000000100069468: -[KSCrashReportSinkQuincy setWaitUntilReachable:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:0)

0x0000000100069470: -[KSCrashReportSinkQuincy .cxx_destruct] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:65)

0x00000001000694d0: +[KSCrashReportSinkHockey sinkWithAppIdentifier:userIDKey:userNameKey:contactEmailKey:crashDescriptionKeys:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:476)

0x0000000100069598: -[KSCrashReportSinkHockey initWithAppIdentifier:userIDKey:userNameKey:contactEmailKey:crashDescriptionKeys:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:489)

0x00000001000696b0: -[KSCrashReportSinkHockey filterReports:onCompletion:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:506)

0x00000001000697b4: -[KSCrashReportSinkHockey urlWithAppIdentifier:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:527)

0x0000000100069840: -[KSCrashReportSinkHockey appIdentifier] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:474)

0x0000000100069850: -[KSCrashReportSinkHockey setAppIdentifier:] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:474)

0x0000000100069864: -[KSCrashReportSinkHockey .cxx_destruct] (in test.dwarf) (KSCrashReportSinkQuincyHockey.m:472)

0x0000000100069878: +[KSCrashReportSinkStandard sinkWithURL:] (in test.dwarf) (KSCrashReportSinkStandard.m:56)

0x00000001000698c0: -[KSCrashReportSinkStandard initWithURL:] (in test.dwarf) (KSCrashReportSinkStandard.m:61)

0x000000010006992c: -[KSCrashReportSinkStandard defaultCrashReportFilterSet] (in test.dwarf) (KSCrashReportSinkStandard.m:72)

0x0000000100069930: -[KSCrashReportSinkStandard filterReports:onCompletion:] (in test.dwarf) (KSCrashReportSinkStandard.m:75)

0x0000000100069bf0: __56-[KSCrashReportSinkStandard filterReports:onCompletion:]_block_invoke (in test.dwarf) (KSCrashReportSinkStandard.m:114)

0x0000000100069d40: __56-[KSCrashReportSinkStandard filterReports:onCompletion:]_block_invoke_2 (in test.dwarf) (KSCrashReportSinkStandard.m:117)

0x0000000100069d64: __56-[KSCrashReportSinkStandard filterReports:onCompletion:]_block_invoke.18 (in test.dwarf) (KSCrashReportSinkStandard.m:120)

0x0000000100069e94: __56-[KSCrashReportSinkStandard filterReports:onCompletion:]_block_invoke.22 (in test.dwarf) (KSCrashReportSinkStandard.m:129)

0x0000000100069eb8: -[KSCrashReportSinkStandard url] (in test.dwarf) (KSCrashReportSinkStandard.m:53)

0x0000000100069ec0: -[KSCrashReportSinkStandard setUrl:] (in test.dwarf) (KSCrashReportSinkStandard.m:53)

0x0000000100069ecc: -[KSCrashReportSinkStandard reachableOperation] (in test.dwarf) (KSCrashReportSinkStandard.m:54)

0x0000000100069ed4: -[KSCrashReportSinkStandard setReachableOperation:] (in test.dwarf) (KSCrashReportSinkStandard.m:54)

0x0000000100069ee0: -[KSCrashReportSinkStandard .cxx_destruct] (in test.dwarf) (KSCrashReportSinkStandard.m:51)

0x0000000100069f10: +[KSCrashReportSinkVictory sinkWithURL:userName:userEmail:] (in test.dwarf) (KSCrashReportSinkVictory.m:65)

0x0000000100069f98: -[KSCrashReportSinkVictory initWithURL:userName:userEmail:] (in test.dwarf) (KSCrashReportSinkVictory.m:72)

0x000000010006a0b4: -[KSCrashReportSinkVictory defaultCrashReportFilterSet] (in test.dwarf) (KSCrashReportSinkVictory.m:96)

0x000000010006a0b8: -[KSCrashReportSinkVictory filterReports:onCompletion:] (in test.dwarf) (KSCrashReportSinkVictory.m:99)

0x000000010006a5a4: __55-[KSCrashReportSinkVictory filterReports:onCompletion:]_block_invoke (in test.dwarf) (KSCrashReportSinkVictory.m:147)

0x000000010006a6f4: __55-[KSCrashReportSinkVictory filterReports:onCompletion:]_block_invoke_2 (in test.dwarf) (KSCrashReportSinkVictory.m:150)

0x000000010006a718: __55-[KSCrashReportSinkVictory filterReports:onCompletion:]_block_invoke.30 (in test.dwarf) (KSCrashReportSinkVictory.m:153)

0x000000010006a818: __55-[KSCrashReportSinkVictory filterReports:onCompletion:]_block_invoke.33 (in test.dwarf) (KSCrashReportSinkVictory.m:160)

0x000000010006a83c: -[KSCrashReportSinkVictory url] (in test.dwarf) (KSCrashReportSinkVictory.m:60)

0x000000010006a844: -[KSCrashReportSinkVictory setUrl:] (in test.dwarf) (KSCrashReportSinkVictory.m:60)

0x000000010006a850: -[KSCrashReportSinkVictory userName] (in test.dwarf) (KSCrashReportSinkVictory.m:61)

0x000000010006a858: -[KSCrashReportSinkVictory setUserName:] (in test.dwarf) (KSCrashReportSinkVictory.m:61)

0x000000010006a864: -[KSCrashReportSinkVictory userEmail] (in test.dwarf) (KSCrashReportSinkVictory.m:62)

0x000000010006a86c: -[KSCrashReportSinkVictory setUserEmail:] (in test.dwarf) (KSCrashReportSinkVictory.m:62)

0x000000010006a878: -[KSCrashReportSinkVictory reachableOperation] (in test.dwarf) (KSCrashReportSinkVictory.m:63)

0x000000010006a880: -[KSCrashReportSinkVictory setReachableOperation:] (in test.dwarf) (KSCrashReportSinkVictory.m:63)

0x000000010006a88c: -[KSCrashReportSinkVictory .cxx_destruct] (in test.dwarf) (KSCrashReportSinkVictory.m:58)

0x000000010006a8d4: swift::Demangle::Context::demangleSymbolAsNode(llvm::StringRef) (in test.dwarf) (Context.cpp:38)

0x000000010006a938: swift::Demangle::Context::demangleSymbolAsString(llvm::StringRef, swift::Demangle::DemangleOptions const&) (in test.dwarf) (Context.cpp:50)

0x000000010006a9ec: llvm::StringRef::str() const (in test.dwarf) (StringRef.h:197)

0x000000010006aa84: swift::Demangle::demangleSymbolAsString(char const*, unsigned long, swift::Demangle::DemangleOptions const&) (in test.dwarf) (Context.cpp:180)

0x000000010006abc8: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__throw_length_error[abi:v15006]() const (in test.dwarf) (string:1804)

0x000000010006abdc: std::__1::__throw_length_error[abi:v15006](char const*) (in test.dwarf) (stdexcept:255)

0x000000010006ac2c: std::length_error::length_error[abi:v15006](char const*) (in test.dwarf) (stdexcept:154)

0x000000010006ac50: char const* std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string[abi:v15006]<std::nullptr_t>() (in test.dwarf) (string:841)

0x000000010006acf0: llvm::StringRef::StringRef(char const*) (in test.dwarf) (StringRef.h:72)

0x000000010006ad28: swift::Demangle::getManglingPrefixLength(llvm::StringRef) (in test.dwarf) (Demangler.cpp:146)

0x000000010006ae14: swift::Demangle::Demangler::~Demangler() (in test.dwarf) (Demangler.h:298)

0x000000010006ae90: isProtocolNode(swift::Demangle::Node*) (in test.dwarf) (Demangler.cpp:245)

0x000000010006aed4: swift::Demangle::Node::addChild(swift::Demangle::Node*, swift::Demangle::NodeFactory&) (in test.dwarf) (Demangler.cpp:288)

0x000000010006af44: void swift::Demangle::NodeFactory::Reallocate<swift::Demangle::Node*>(swift::Demangle::Node**&, unsigned long&, unsigned long) (in test.dwarf) (Demangler.h:136)

0x000000010006afec: swift::Demangle::Node::removeChildAt(unsigned int, swift::Demangle::NodeFactory&) (in test.dwarf) (Demangler.cpp:296)

0x000000010006b074: swift::Demangle::Node** swift::Demangle::NodeFactory::Allocate<swift::Demangle::Node*>(unsigned long) (in test.dwarf) (Demangler.h:91)

0x000000010006b10c: swift::Demangle::Node::reverseChildren(unsigned long) (in test.dwarf) (Demangler.cpp:313)

0x000000010006b16c: swift::Demangle::NodeFactory::clear() (in test.dwarf) (Demangler.cpp:333)

0x000000010006b1cc: swift::Demangle::NodeFactory::createNode(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.cpp:349)

0x000000010006b200: swift::Demangle::Node* swift::Demangle::NodeFactory::Allocate<swift::Demangle::Node>(unsigned long) (in test.dwarf) (Demangler.h:91)

0x000000010006b29c: swift::Demangle::NodeFactory::createNode(swift::Demangle::Node::Kind, unsigned long long) (in test.dwarf) (Demangler.cpp:352)

0x000000010006b2dc: swift::Demangle::NodeFactory::createNodeWithAllocatedText(swift::Demangle::Node::Kind, llvm::StringRef) (in test.dwarf) (Demangler.cpp:356)

0x000000010006b328: swift::Demangle::NodeFactory::createNode(swift::Demangle::Node::Kind, swift::Demangle::CharVector const&) (in test.dwarf) (Demangler.cpp:359)

0x000000010006b38c: swift::Demangle::CharVector::str() const (in test.dwarf) (Demangler.h:278)

0x000000010006b3b8: swift::Demangle::NodeFactory::createNode(swift::Demangle::Node::Kind, char const*) (in test.dwarf) (Demangler.cpp:362)

0x000000010006b420: swift::Demangle::CharVector::append(llvm::StringRef, swift::Demangle::NodeFactory&) (in test.dwarf) (Demangler.cpp:370)

0x000000010006b4a4: void swift::Demangle::NodeFactory::Reallocate<char>(char*&, unsigned long&, unsigned long) (in test.dwarf) (Demangler.h:136)

0x000000010006b548: swift::Demangle::CharVector::append(int, swift::Demangle::NodeFactory&) (in test.dwarf) (Demangler.cpp:378)

0x000000010006b5d8: swift::Demangle::Vector<swift::Demangle::Node*>::free() (in test.dwarf) (Demangler.h:228)
0x000000010006b5d8: swift::Demangle::Demangler::clear() (in test.dwarf) (Demangler.cpp:392)

0x000000010006b5e8: swift::Demangle::Demangler::init(llvm::StringRef) (in test.dwarf) (Demangler.cpp:397)

0x000000010006b65c: swift::Demangle::Demangler::demangleSymbol(llvm::StringRef) (in test.dwarf) (Demangler.cpp:405)

0x000000010006b850: swift::Demangle::Demangler::nextIf(llvm::StringRef) (in test.dwarf) (Demangler.h:317)

0x000000010006b8cc: swift::Demangle::Demangler::demangleObjCTypeName() (in test.dwarf) (Demangler.cpp:3014)

0x000000010006bbb0: swift::Demangle::Demangler::parseAndPushNodes() (in test.dwarf) (Demangler.cpp:461)

0x000000010006bc2c: swift::Demangle::NodeFactory::createNode(swift::Demangle::Node::Kind, llvm::StringRef) (in test.dwarf) (Demangler.h:181)

0x000000010006bca0: swift::Demangle::Demangler::demangleOperator() (in test.dwarf) (Demangler.cpp:596)

0x000000010006c31c: swift::Demangle::Demangler::createWithChild(swift::Demangle::Node::Kind, swift::Demangle::Node*) (in test.dwarf) (Demangler.cpp:481)

0x000000010006c380: swift::Demangle::Demangler::createWithChildren(swift::Demangle::Node::Kind, swift::Demangle::Node*, swift::Demangle::Node*) (in test.dwarf) (Demangler.cpp:494)

0x000000010006c400: swift::Demangle::Demangler::createWithChildren(swift::Demangle::Node::Kind, swift::Demangle::Node*, swift::Demangle::Node*, swift::Demangle::Node*) (in test.dwarf) (Demangler.cpp:506)

0x000000010006c498: swift::Demangle::Demangler::createWithChildren(swift::Demangle::Node::Kind, swift::Demangle::Node*, swift::Demangle::Node*, swift::Demangle::Node*, swift::Demangle::Node*) (in test.dwarf) (Demangler.cpp:519)

0x000000010006c550: swift::Demangle::Demangler::changeKind(swift::Demangle::Node*, swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.cpp:530)

0x000000010006c660: swift::Demangle::Node::getText() const (in test.dwarf) (Demangle.h:180)

0x000000010006c688: swift::Demangle::Demangler::demangleTypeMangling() (in test.dwarf) (Demangler.cpp:547)

0x000000010006c744: swift::Demangle::Demangler::popFunctionParamLabels(swift::Demangle::Node*) (in test.dwarf) (Demangler.cpp:1123)

0x000000010006ca64: swift::Demangle::Demangler::demangleSymbolicReference(unsigned char, void const*) (in test.dwarf) (Demangler.cpp:558)

0x000000010006caf8: std::__1::function<swift::Demangle::Node* (swift::Demangle::SymbolicReferenceKind, swift::Demangle::Directness, int, void const*)>::operator()(swift::Demangle::SymbolicReferenceKind, swift::Demangle::Directness, int, void const*) const (in test.dwarf) (function.h:1196)

0x000000010006cb44: swift::Demangle::Demangler::demangleMultiSubstitutions() (in test.dwarf) (Demangler.cpp:715)

0x000000010006cc34: swift::Demangle::Demangler::demangleBuiltinType() (in test.dwarf) (Demangler.cpp:977)

0x000000010006cf64: swift::Demangle::Demangler::demangleAnyGenericType(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.cpp:1054)

0x000000010006d00c: swift::Demangle::Demangler::demangleExtensionContext() (in test.dwarf) (Demangler.cpp:1062)

0x000000010006d0a4: swift::Demangle::Demangler::demanglePlainFunction() (in test.dwarf) (Demangler.cpp:1072)

0x000000010006d1b0: swift::Demangle::Demangler::demangleBoundGenericType() (in test.dwarf) (Demangler.cpp:1434)

0x000000010006d394: swift::Demangle::Demangler::demangleDependentProtocolConformanceAssociated() (in test.dwarf) (Demangler.cpp:1397)

0x000000010006d480: swift::Demangle::Demangler::demangleConcreteProtocolConformance() (in test.dwarf) (Demangler.cpp:1318)

0x000000010006d51c: swift::Demangle::Demangler::demangleDependentProtocolConformanceRoot() (in test.dwarf) (Demangler.cpp:1349)

0x000000010006d5f8: swift::Demangle::Demangler::demangleDependentProtocolConformanceInherited() (in test.dwarf) (Demangler.cpp:1369)

0x000000010006d6e4: swift::Demangle::Demangler::popProtocol() (in test.dwarf) (Demangler.cpp:1255)

0x000000010006d7ac: swift::Demangle::Demangler::demangleIdentifier() (in test.dwarf) (Demangler.cpp:815)

0x000000010006db30: swift::Demangle::Demangler::demangleImplFunctionType() (in test.dwarf) (Demangler.cpp:1626)

0x000000010006df14: swift::Demangle::Demangler::demangleLocalIdentifier() (in test.dwarf) (Demangler.cpp:919)

0x000000010006e108: swift::Demangle::Demangler::demangleMetatype() (in test.dwarf) (Demangler.cpp:1693)

0x000000010006e39c: swift::Demangle::Demangler::demangleArchetype() (in test.dwarf) (Demangler.cpp:1804)

0x000000010006e51c: swift::Demangle::Demangler::demangleGenericRequirement() (in test.dwarf) (Demangler.cpp:2880)

0x000000010006e92c: swift::Demangle::Demangler::demangleStandardSubstitution() (in test.dwarf) (Demangler.cpp:775)

0x000000010006eaec: swift::Demangle::Demangler::demangleThunkOrSpecialization() (in test.dwarf) (Demangler.cpp:1950)

0x000000010006f688: swift::Demangle::Demangler::demangleWitness() (in test.dwarf) (Demangler.cpp:2404)

0x000000010006fedc: swift::Demangle::Demangler::demangleSpecialType() (in test.dwarf) (Demangler.cpp:2552)

0x00000001000705cc: swift::Demangle::Demangler::popFunctionType(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.cpp:1091)

0x000000010007069c: swift::Demangle::Demangler::demangleFunctionEntity() (in test.dwarf) (Demangler.cpp:2741)

0x0000000100070960: swift::Demangle::Demangler::demangleRetroactiveConformance() (in test.dwarf) (Demangler.cpp:1419)

0x0000000100070a0c: swift::Demangle::Demangler::demangleSubscript() (in test.dwarf) (Demangler.cpp:2818)

0x0000000100070b3c: swift::Demangle::Demangler::demangleGenericSignature(bool) (in test.dwarf) (Demangler.cpp:2856)

0x0000000100070ccc: swift::Demangle::Demangler::demangleOperatorIdentifier() (in test.dwarf) (Demangler.cpp:890)

0x0000000100070e5c: swift::Demangle::Demangler::demangleProtocolListType() (in test.dwarf) (Demangler.cpp:2851)

0x0000000100070e88: swift::Demangle::Demangler::demangleGenericParamIndex() (in test.dwarf) (Demangler.cpp:1917)

0x0000000100070f20: swift::Demangle::Demangler::popTuple() (in test.dwarf) (Demangler.cpp:1211)

0x0000000100071110: swift::Demangle::Demangler::demangleGenericType() (in test.dwarf) (Demangler.cpp:2992)

0x00000001000711a0: swift::Demangle::Demangler::demangleVariable() (in test.dwarf) (Demangler.cpp:2813)

0x00000001000711cc: swift::Demangle::Demangler::getDependentGenericParamType(int, int) (in test.dwarf) (Demangler.cpp:1898)

0x0000000100071338: swift::Demangle::Demangler::consumeAll() (in test.dwarf) (Demangler.h:347)

0x0000000100071374: swift::Demangle::Demangler::peekChar() (in test.dwarf) (Demangler.h:324)
0x0000000100071374: swift::Demangle::Demangler::demangleNatural() (in test.dwarf) (Demangler.cpp:684)

0x00000001000713e8: swift::Demangle::Demangler::demangleIndex() (in test.dwarf) (Demangler.cpp:699)

0x000000010007146c: swift::Demangle::Demangler::demangleIndexAsNode() (in test.dwarf) (Demangler.cpp:708)

0x00000001000714c4: swift::Demangle::Demangler::pushMultiSubstitutions(int, unsigned long) (in test.dwarf) (Demangler.cpp:757)

0x0000000100071544: swift::Demangle::Demangler::createSwiftType(swift::Demangle::Node::Kind, char const*) (in test.dwarf) (Demangler.cpp:769)

0x00000001000715b4: swift::Demangle::Demangler::createStandardSubstitution(char) (in test.dwarf) (StandardTypesMangling.def:16)

0x0000000100071838: swift::Demangle::Vector<char>::push_back(char const&, swift::Demangle::NodeFactory&) (in test.dwarf) (Demangler.h:250)

0x00000001000718a4: (anonymous namespace)::isDeclName(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.cpp:33)

0x00000001000718f0: swift::Demangle::Vector<swift::Demangle::Node*>::empty() const (in test.dwarf) (Demangler.h:246)
0x00000001000718f0: swift::Demangle::Demangler::popNode(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.h:362)
0x00000001000718f0: swift::Demangle::Demangler::popModule() (in test.dwarf) (Demangler.cpp:943)

0x0000000100071938: swift::Demangle::Demangler::popContext() (in test.dwarf) (Demangler.cpp:948)

0x00000001000719cc: (anonymous namespace)::isContext(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.cpp:50)

0x0000000100071a60: swift::Demangle::Demangler::popTypeAndGetAnyGeneric() (in test.dwarf) (Demangler.cpp:970)

0x0000000100071ac8: (anonymous namespace)::isAnyGeneric(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.cpp:62)

0x0000000100071b10: swift::Demangle::Demangler::popFunctionParams(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.cpp:1100)

0x0000000100071c5c: swift::Demangle::Demangler::popTypeList() (in test.dwarf) (Demangler.cpp:1237)

0x0000000100071d38: swift::Demangle::Demangler::popAnyProtocolConformanceList() (in test.dwarf) (Demangler.cpp:1276)

0x0000000100071e1c: swift::Demangle::Demangler::demangleRetroactiveProtocolConformanceRef() (in test.dwarf) (Demangler.cpp:1309)

0x0000000100071e58: swift::Demangle::Demangler::popDependentAssociatedConformance() (in test.dwarf) (Demangler.cpp:1390)

0x0000000100071eb0: swift::Demangle::Vector<swift::Demangle::Node*>::push_back(swift::Demangle::Node* const&, swift::Demangle::NodeFactory&) (in test.dwarf) (Demangler.h:250)

0x0000000100071f1c: swift::Demangle::Demangler::demangleBoundGenericArgs(swift::Demangle::Node*, swift::Demangle::Vector<swift::Demangle::Node*> const&, unsigned long) (in test.dwarf) (Demangler.cpp:1483)

0x0000000100072234: swift::Demangle::nodeConsumesGenericArgs(swift::Demangle::Node*) (in test.dwarf) (Demangler.cpp:1467)

0x0000000100072290: swift::Demangle::Demangler::demangleImplParamConvention() (in test.dwarf) (Demangler.cpp:1588)

0x000000010007239c: swift::Demangle::Demangler::demangleImplResultConvention(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.cpp:1610)

0x000000010007247c: swift::Demangle::Demangler::popProtocolConformance() (in test.dwarf) (Demangler.cpp:1929)

0x00000001000725c0: swift::Demangle::Vector<swift::Demangle::Node*>::empty() const (in test.dwarf) (Demangler.h:246)
0x00000001000725c0: swift::Demangle::Demangler::popNode(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.h:362)
0x00000001000725c0: swift::Demangle::Demangler::createWithPoppedType(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.h:401)

0x00000001000725f0: swift::Demangle::Demangler::demanglePrivateContextDescriptor() (in test.dwarf) (Demangler.cpp:1756)

0x00000001000727b0: swift::Demangle::Demangler::popAssocTypePath() (in test.dwarf) (Demangler.cpp:1884)

0x0000000100072858: swift::Demangle::Demangler::demangleAssociatedTypeSimple(swift::Demangle::Node*) (in test.dwarf) (Demangler.cpp:1840)

0x00000001000728ac: swift::Demangle::Demangler::demangleAssociatedTypeCompound(swift::Demangle::Node*) (in test.dwarf) (Demangler.cpp:1848)

0x00000001000729e4: swift::Demangle::Demangler::popAssocTypeName() (in test.dwarf) (Demangler.cpp:1869)

0x0000000100072ac0: swift::Demangle::Demangler::demangleGenericSpecialization(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.cpp:2175)

0x0000000100072b40: swift::Demangle::Demangler::demangleSpecAttributes(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.cpp:2387)

0x0000000100072c64: swift::Demangle::Demangler::demangleFunctionSpecialization() (in test.dwarf) (Demangler.cpp:2189)

0x0000000100072ec4: std::__1::vector<swift::Demangle::Node*, std::__1::allocator<swift::Demangle::Node*> >::push_back[abi:v15006](swift::Demangle::Node* const&) (in test.dwarf) (vector:1547)

0x0000000100072f9c: swift::Demangle::Demangler::demangleBridgedMethodParams() (in test.dwarf) (Demangler.cpp:2152)

0x00000001000730e4: swift::Demangle::Demangler::demangleFuncSpecParam(unsigned long long) (in test.dwarf) (Demangler.cpp:2248)

0x00000001000734d8: swift::Demangle::Demangler::addFuncSpecParamNumber(swift::Demangle::Node*, swift::Demangle::FunctionSigSpecializationParamKind) (in test.dwarf) (Demangler.cpp:2373)

0x0000000100073604: swift::Demangle::Demangler::nextChar() (in test.dwarf) (Demangler.h:330)
0x0000000100073604: swift::Demangle::Demangler::demangleMetatypeRepresentation() (in test.dwarf) (Demangler.cpp:2691)

0x0000000100073668: swift::Demangle::Demangler::demangleProtocolList() (in test.dwarf) (Demangler.cpp:2833)

0x0000000100073750: swift::Demangle::Demangler::nextChar() (in test.dwarf) (Demangler.h:330)
0x0000000100073750: swift::Demangle::Demangler::demangleAccessor(swift::Demangle::Node*) (in test.dwarf) (Demangler.cpp:2706)

0x00000001000738c8: swift::Demangle::Demangler::demangleEntity(swift::Demangle::Node::Kind) (in test.dwarf) (Demangler.cpp:2804)

0x000000010007399c: swift::Demangle::NodeFactory::~NodeFactory() (in test.dwarf) (Demangler.h:81)

0x00000001000739e0: swift::Demangle::NodeFactory::~NodeFactory() (in test.dwarf) (Demangler.h:81)

0x0000000100073a24: swift::Demangle::Demangler::~Demangler() (in test.dwarf) (Demangler.h:298)

0x0000000100073aa0: llvm::StringRef llvm::StringRef::copy<swift::Demangle::NodeFactory>(swift::Demangle::NodeFactory&) const (in test.dwarf) (StringRef.h:135)

0x0000000100073b00: char* swift::Demangle::NodeFactory::Allocate<char>(unsigned long) (in test.dwarf) (Demangler.h:91)

0x0000000100073b8c: std::__1::__throw_bad_function_call[abi:v15006]() (in test.dwarf) (function.h:61)

0x0000000100073bc0: std::__1::bad_function_call::~bad_function_call() (in test.dwarf) (function.h:50)
0x0000000100073bc0: std::__1::bad_function_call::~bad_function_call() (in test.dwarf) (function.h:50)

0x0000000100073bc4: std::__1::bad_function_call::~bad_function_call() (in test.dwarf) (function.h:50)

0x0000000100073bd8: std::__1::vector<swift::Demangle::Node*, std::__1::allocator<swift::Demangle::Node*> >::__throw_length_error[abi:v15006]() const (in test.dwarf) (vector:851)

0x0000000100073bec: std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<swift::Demangle::Node*> >::pointer> std::__1::__allocate_at_least[abi:v15006]<std::__1::allocator<swift::Demangle::Node*> >(std::__1::allocator_traits&, unsigned long) (in test.dwarf) (allocate_at_least.h:53)

0x0000000100073c20: std::__throw_bad_array_new_length([abi:v15006], void) (in test.dwarf) (new:155)

0x0000000100073c48: _OUTLINED_FUNCTION_0 (in test.dwarf) (new:157)

Address has no line information: 0x0000000100073c50

Address has no line information: 0x0000000100073c58

Address has no line information: 0x0000000100073c60

Address has no line information: 0x0000000100073c68

Address has no line information: 0x0000000100073c70

0x0000000100073c78: swift::Demangle::DemanglerPrinter::operator<<(unsigned long long) & (in test.dwarf) (NodePrinter.cpp:34)

0x0000000100073cf0: swift::Demangle::DemanglerPrinter::writeHex(unsigned long long) & (in test.dwarf) (NodePrinter.cpp:40)

0x0000000100073d68: swift::Demangle::archetypeName(unsigned long long, unsigned long long) (in test.dwarf) (NodePrinter.cpp:54)

0x0000000100073e6c: swift::Demangle::nodeToString(swift::Demangle::Node*, swift::Demangle::DemangleOptions const&) (in test.dwarf) (NodePrinter.cpp:2383)

0x0000000100073f34: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) (in test.dwarf) (NodePrinter.cpp:952)

0x0000000100077474: (anonymous namespace)::NodePrinter::printEntity(swift::Demangle::Node*, bool, (anonymous namespace)::NodePrinter::TypePrinting, bool, llvm::StringRef, int, llvm::StringRef) (in test.dwarf) (NodePrinter.cpp:2245)

0x0000000100077974: (anonymous namespace)::NodePrinter::printChildren(swift::Demangle::Node*, char const*) (in test.dwarf) (NodePrinter.cpp:212)

0x0000000100077990: (anonymous namespace)::operator<<(swift::Demangle::DemanglerPrinter&, (anonymous namespace)::QuotedString const&) (in test.dwarf) (NodePrinter.cpp:74)

0x0000000100077b2c: (anonymous namespace)::NodePrinter::printFunctionType(swift::Demangle::Node*, swift::Demangle::Node*) (in test.dwarf) (NodePrinter.cpp:709)

0x0000000100077bf8: (anonymous namespace)::NodePrinter::printFunctionParameters(swift::Demangle::Node*, swift::Demangle::Node*, bool) (in test.dwarf) (NodePrinter.cpp:650)

0x0000000100077dbc: (anonymous namespace)::NodePrinter::printSpecializationPrefix(swift::Demangle::Node*, llvm::StringRef, llvm::StringRef) (in test.dwarf) (NodePrinter.cpp:898)

0x0000000100077f40: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) (in test.dwarf) (NodePrinter.cpp:818)

0x00000001000783c0: printer_unreachable(char const*) (in test.dwarf) (NodePrinter.cpp:29)

0x00000001000783f0: (anonymous namespace)::NodePrinter::printWithParens(swift::Demangle::Node*) (in test.dwarf) (NodePrinter.cpp:521)

0x00000001000784e0: (anonymous namespace)::NodePrinter::printAbstractStorage(swift::Demangle::Node*, bool, llvm::StringRef) (in test.dwarf) (NodePrinter.cpp:2228)

0x0000000100078558: (anonymous namespace)::NodePrinter::printImplFunctionType(swift::Demangle::Node*) (in test.dwarf) (NodePrinter.cpp:730)

0x00000001000786f4: needSpaceBeforeType(swift::Demangle::Node*) (in test.dwarf) (NodePrinter.cpp:938)

0x0000000100078760: (anonymous namespace)::NodePrinter::printChildren(swift::Demangle::Node**, swift::Demangle::Node**, char const*) (in test.dwarf) (NodePrinter.cpp:202)

0x00000001000787d4: (anonymous namespace)::NodePrinter::printEntityType(swift::Demangle::Node*, swift::Demangle::Node*, swift::Demangle::Node*) (in test.dwarf) (NodePrinter.cpp:2359)

0x0000000100078940: (anonymous namespace)::NodePrinter::printFunctionParameters(swift::Demangle::Node*, swift::Demangle::Node*, bool)::{lambda(swift::Demangle::Node*)#1}::operator()(swift::Demangle::Node*) const (in test.dwarf) (NodePrinter.cpp:684)

0x0000000100078b4c: (anonymous namespace)::NodePrinter::printBoundGenericNoSugar(swift::Demangle::Node*) (in test.dwarf) (NodePrinter.cpp:228)

0x0000000100078bd0: (anonymous namespace)::NodePrinter::findSugar(swift::Demangle::Node*) (in test.dwarf) (NodePrinter.cpp:530)

0x0000000100078dbc: (anonymous namespace)::NodePrinter::isIdentifier(swift::Demangle::Node*, llvm::StringRef) (in test.dwarf) (NodePrinter.cpp:254)

0x0000000100078e1c: (anonymous namespace)::NodePrinter::isSwiftModule(swift::Demangle::Node*) (in test.dwarf) (NodePrinter.cpp:238)

0x0000000100078e74: _OUTLINED_FUNCTION_0 (in test.dwarf) (NodePrinter.cpp:239)

Address has no line information: 0x0000000100078e7c

Address has no line information: 0x0000000100078e84

0x0000000100078e8c: swift::Demangle::demangleOldSymbolAsNode(llvm::StringRef, swift::Demangle::NodeFactory&) (in test.dwarf) (OldDemangler.cpp:2289)

0x0000000100079acc: (anonymous namespace)::NameSource::nextIf(llvm::StringRef) (in test.dwarf) (OldDemangler.cpp:130)

0x0000000100079b24: (anonymous namespace)::OldDemangler::demangleGlobal() (in test.dwarf) (OldDemangler.cpp:305)

0x000000010007a0e8: (anonymous namespace)::NameSource::advanceOffset(unsigned long) (in test.dwarf) (OldDemangler.cpp:144)

0x000000010007a120: (anonymous namespace)::OldDemangler::demangleType() (in test.dwarf) (OldDemangler.cpp:1765)

0x000000010007a178: (anonymous namespace)::OldDemangler::demangleProtocolConformance() (in test.dwarf) (OldDemangler.cpp:1143)

0x000000010007a218: (anonymous namespace)::OldDemangler::demangleTypeImpl() (in test.dwarf) (OldDemangler.cpp:1799)

0x000000010007ad30: (anonymous namespace)::OldDemangler::demangleBuiltinSize(unsigned long long&) (in test.dwarf) (OldDemangler.cpp:283)

0x000000010007ad88: swift::Demangle::DemanglerPrinter&& swift::Demangle::DemanglerPrinter::operator<< <char const (&) [15]>(char const (&) [15]) && (in test.dwarf) (Demangle.h:541)

0x000000010007adc4: swift::Demangle::DemanglerPrinter&& swift::Demangle::DemanglerPrinter::operator<< <char const (&) [12]>(char const (&) [12]) && (in test.dwarf) (Demangle.h:541)

0x000000010007ae00: (anonymous namespace)::OldDemangler::demangleNatural(unsigned long long&) (in test.dwarf) (OldDemangler.cpp:262)

0x000000010007aebc: swift::Demangle::DemanglerPrinter&& swift::Demangle::DemanglerPrinter::operator<< <char const (&) [5]>(char const (&) [5]) && (in test.dwarf) (Demangle.h:541)

0x000000010007aef8: swift::Demangle::DemanglerPrinter&& swift::Demangle::DemanglerPrinter::operator<< <char const (&) [7]>(char const (&) [7]) && (in test.dwarf) (Demangle.h:541)

0x000000010007af34: (anonymous namespace)::OldDemangler::demangleDeclarationName(swift::Demangle::Node::Kind) (in test.dwarf) (OldDemangler.cpp:937)

0x000000010007b058: (anonymous namespace)::OldDemangler::demangleFunctionType(swift::Demangle::Node::Kind) (in test.dwarf) (OldDemangler.cpp:1774)

0x000000010007b170: (anonymous namespace)::OldDemangler::demangleBoundGenericType() (in test.dwarf) (OldDemangler.cpp:1074)

0x000000010007b1a8: (anonymous namespace)::OldDemangler::demangleGenericSignature(bool) (in test.dwarf) (OldDemangler.cpp:1519)

0x000000010007b714: (anonymous namespace)::OldDemangler::demangleMetatypeRepresentation() (in test.dwarf) (OldDemangler.cpp:1566)

0x000000010007b79c: (anonymous namespace)::OldDemangler::demangleProtocolList() (in test.dwarf) (OldDemangler.cpp:1130)

0x000000010007b844: (anonymous namespace)::OldDemangler::demangleArchetypeType() (in test.dwarf) (OldDemangler.cpp:1700)

0x000000010007b8f4: (anonymous namespace)::OldDemangler::getDependentGenericParamType(unsigned int, unsigned int) (in test.dwarf) (OldDemangler.cpp:1378)

0x000000010007ba48: (anonymous namespace)::OldDemangler::demangleAssociatedTypeSimple() (in test.dwarf) (OldDemangler.cpp:1449)

0x000000010007baac: (anonymous namespace)::OldDemangler::demangleAssociatedTypeCompound() (in test.dwarf) (OldDemangler.cpp:1462)

0x000000010007bb3c: (anonymous namespace)::OldDemangler::demangleSubstitutionIndex() (in test.dwarf) (OldDemangler.cpp:867)

0x000000010007bde8: (anonymous namespace)::OldDemangler::demangleTuple((anonymous namespace)::OldDemangler::IsVariadic) (in test.dwarf) (OldDemangler.cpp:1728)

0x000000010007bf68: (anonymous namespace)::OldDemangler::demangleImplFunctionType() (in test.dwarf) (OldDemangler.cpp:2130)

0x000000010007c234: (anonymous namespace)::OldDemangler::demangleContext() (in test.dwarf) (OldDemangler.cpp:1086)

0x000000010007c444: (anonymous namespace)::OldDemangler::demangleDeclName() (in test.dwarf) (OldDemangler.cpp:723)

0x000000010007c5a4: (anonymous namespace)::OldDemangler::demangleModule() (in test.dwarf) (OldDemangler.cpp:918)

0x000000010007c724: (anonymous namespace)::OldDemangler::demangleEntity() (in test.dwarf) (OldDemangler.cpp:1163)

0x000000010007cdb0: (anonymous namespace)::OldDemangler::demangleIdentifier(llvm::Optional<swift::Demangle::Node::Kind>) (in test.dwarf) (OldDemangler.cpp:755)

0x000000010007d0e4: (anonymous namespace)::OldDemangler::demangleNominalType() (in test.dwarf) (OldDemangler.cpp:997)

0x000000010007d1b0: (anonymous namespace)::OldDemangler::demangleIndexAsNode(swift::Demangle::Node::Kind) (in test.dwarf) (OldDemangler.cpp:852)

0x000000010007d200: (anonymous namespace)::OldDemangler::demangleIndex(unsigned long long&) (in test.dwarf) (OldDemangler.cpp:837)

0x000000010007d2a4: (anonymous namespace)::OldDemangler::demangleBoundGenericArgs(swift::Demangle::Node*) (in test.dwarf) (OldDemangler.cpp:1011)

0x000000010007d444: (anonymous namespace)::OldDemangler::demangleProtocolNameGivenContext(swift::Demangle::Node*) (in test.dwarf) (OldDemangler.cpp:960)

0x000000010007d558: (anonymous namespace)::OldDemangler::demangleProtocolName() (in test.dwarf) (OldDemangler.cpp:951)

0x000000010007d640: (anonymous namespace)::OldDemangler::demangleGenericParamIndex() (in test.dwarf) (OldDemangler.cpp:1390)

0x000000010007d708: (anonymous namespace)::OldDemangler::demangleArchetypeType()::{lambda(swift::Demangle::Node*)#1}::operator()(swift::Demangle::Node*) const (in test.dwarf) (OldDemangler.cpp:1701)

0x000000010007d834: (anonymous namespace)::OldDemangler::demangleDependentMemberTypeName(swift::Demangle::Node*) (in test.dwarf) (OldDemangler.cpp:1414)

0x000000010007d9fc: (anonymous namespace)::OldDemangler::createSwiftType(swift::Demangle::Node::Kind, llvm::StringRef) (in test.dwarf) (OldDemangler.cpp:859)

0x000000010007daa4: (anonymous namespace)::OldDemangler::demangleImplConvention((anonymous namespace)::OldDemangler::ImplConventionContext) (in test.dwarf) (OldDemangler.cpp:2190)

0x000000010007dc74: (anonymous namespace)::OldDemangler::demangleImplParameterOrResult(swift::Demangle::Node::Kind) (in test.dwarf) (OldDemangler.cpp:2254)

0x000000010007dd8c: (anonymous namespace)::NameSource::readUntil(char, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) (in test.dwarf) (OldDemangler.cpp:155)

0x000000010007ddfc: (anonymous namespace)::OldDemangler::demangleDirectness() (in test.dwarf) (OldDemangler.cpp:254)

0x000000010007de6c: (anonymous namespace)::OldDemangler::demangleReabstractSignature(swift::Demangle::Node*) (in test.dwarf) (OldDemangler.cpp:2104)

0x000000010007df1c: swift::Punycode::decodePunycode(llvm::StringRef, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) (in test.dwarf) (Punycode.cpp:75)

0x000000010007e218: std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::reserve(unsigned long) (in test.dwarf) (vector:1494)

0x000000010007e2ac: std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::insert(std::__1::__wrap_iter<unsigned int const*>, unsigned int const&) (in test.dwarf) (vector:1680)

0x000000010007e4b8: swift::Punycode::decodePunycodeUTF8(llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) (in test.dwarf) (Punycode.cpp:269)

0x000000010007e63c: std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__throw_length_error[abi:v15006]() const (in test.dwarf) (vector:851)

0x000000010007e650: std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned int> >::pointer> std::__1::__allocate_at_least[abi:v15006]<std::__1::allocator<unsigned int> >(std::__1::allocator_traits&, unsigned long) (in test.dwarf) (allocate_at_least.h:53)

0x000000010007e684: llvm::StringRef::StringRef(char const*) [clone .cold.1] (in test.dwarf) (StringRef.h:0)

0x000000010007e6ac: isProtocolNode(swift::Demangle::Node*) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e6d0: swift::Demangle::Node::addChild(swift::Demangle::Node*, swift::Demangle::NodeFactory&) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e6f8: swift::Demangle::Node::addChild(swift::Demangle::Node*, swift::Demangle::NodeFactory&) [clone .cold.2] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e720: swift::Demangle::Node::removeChildAt(unsigned int, swift::Demangle::NodeFactory&) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e748: swift::Demangle::Node** swift::Demangle::NodeFactory::Allocate<swift::Demangle::Node*>(unsigned long) [clone .cold.1] (in test.dwarf) (Demangler.h:0)

0x000000010007e76c: swift::Demangle::Node::reverseChildren(unsigned long) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e794: swift::Demangle::NodeFactory::clear() [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e7bc: swift::Demangle::Node* swift::Demangle::NodeFactory::Allocate<swift::Demangle::Node>(unsigned long) [clone .cold.1] (in test.dwarf) (Demangler.h:0)

0x000000010007e7e0: swift::Demangle::CharVector::str() const [clone .cold.1] (in test.dwarf) (Demangler.h:0)

0x000000010007e804: swift::Demangle::CharVector::append(llvm::StringRef, swift::Demangle::NodeFactory&) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e82c: swift::Demangle::CharVector::append(int, swift::Demangle::NodeFactory&) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e854: swift::Demangle::Demangler::demangleSymbol(llvm::StringRef) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e878: swift::Demangle::Demangler::nextIf(llvm::StringRef) [clone .cold.1] (in test.dwarf) (Demangler.h:0)

0x000000010007e89c: swift::Demangle::Demangler::demangleOperator() [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e8c0: swift::Demangle::Demangler::demangleOperator() [clone .cold.2] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e8e4: swift::Demangle::Node::getText() const [clone .cold.1] (in test.dwarf) (Demangle.h:0)

0x000000010007e90c: swift::Demangle::Demangler::popFunctionParamLabels(swift::Demangle::Node*) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e930: swift::Demangle::Demangler::popFunctionParamLabels(swift::Demangle::Node*) [clone .cold.2] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e954: swift::Demangle::Demangler::popFunctionParamLabels(swift::Demangle::Node*) [clone .cold.3] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e978: swift::Demangle::Demangler::popFunctionParamLabels(swift::Demangle::Node*) [clone .cold.4] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e99c: swift::Demangle::Demangler::popFunctionParamLabels(swift::Demangle::Node*) [clone .cold.5] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e9c0: swift::Demangle::Demangler::popFunctionParamLabels(swift::Demangle::Node*) [clone .cold.6] (in test.dwarf) (Demangler.cpp:0)

0x000000010007e9e4: swift::Demangle::Demangler::popFunctionParamLabels(swift::Demangle::Node*) [clone .cold.7] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ea08: swift::Demangle::Demangler::popFunctionParamLabels(swift::Demangle::Node*) [clone .cold.8] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ea2c: swift::Demangle::Demangler::popFunctionParamLabels(swift::Demangle::Node*) [clone .cold.9] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ea54: swift::Demangle::Demangler::popFunctionParamLabels(swift::Demangle::Node*) [clone .cold.10] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ea78: swift::Demangle::Demangler::popFunctionParamLabels(swift::Demangle::Node*) [clone .cold.11] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ea9c: swift::Demangle::Demangler::demangleBuiltinType() [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007eac0: swift::Demangle::Demangler::demangleBuiltinType() [clone .cold.2] (in test.dwarf) (Demangler.cpp:0)

0x000000010007eae4: swift::Demangle::Demangler::demangleBuiltinType() [clone .cold.3] (in test.dwarf) (Demangler.cpp:0)

0x000000010007eb08: swift::Demangle::Demangler::demangleIdentifier() [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007eb2c: swift::Demangle::Demangler::demangleIdentifier() [clone .cold.2] (in test.dwarf) (Demangler.cpp:0)

0x000000010007eb50: swift::Demangle::Demangler::demangleIdentifier() [clone .cold.3] (in test.dwarf) (Demangler.cpp:0)

0x000000010007eb78: swift::Demangle::Demangler::demangleImplFunctionType() [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007eb9c: swift::Demangle::Demangler::demangleImplFunctionType() [clone .cold.2] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ebc0: swift::Demangle::Demangler::demangleMetatype() [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ebe4: swift::Demangle::Demangler::demangleGenericRequirement() [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ec08: swift::Demangle::Demangler::demangleStandardSubstitution() [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ec2c: swift::Demangle::Demangler::demangleSpecialType() [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ec54: swift::Demangle::Demangler::demangleSpecialType() [clone .cold.2] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ec78: swift::Demangle::Demangler::demangleSpecialType() [clone .cold.3] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ec9c: swift::Demangle::Demangler::demangleSpecialType() [clone .cold.4] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ecc0: swift::Demangle::Demangler::demangleSpecialType() [clone .cold.5] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ece8: swift::Demangle::Demangler::demangleOperatorIdentifier() [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ed0c: swift::Demangle::Demangler::demangleOperatorIdentifier() [clone .cold.2] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ed30: swift::Demangle::Demangler::demangleOperatorIdentifier() [clone .cold.3] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ed54: swift::Demangle::Demangler::getDependentGenericParamType(int, int) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ed78: swift::Demangle::Demangler::consumeAll() [clone .cold.1] (in test.dwarf) (Demangler.h:0)

0x000000010007eda0: swift::Demangle::Demangler::consumeAll() [clone .cold.2] (in test.dwarf) (Demangler.h:0)

0x000000010007edc4: swift::Demangle::Vector<char>::push_back(char const&, swift::Demangle::NodeFactory&) [clone .cold.1] (in test.dwarf) (Demangler.h:0)

0x000000010007edec: swift::Demangle::Demangler::popFunctionParams(swift::Demangle::Node::Kind) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ee10: swift::Demangle::Vector<swift::Demangle::Node*>::push_back(swift::Demangle::Node* const&, swift::Demangle::NodeFactory&) [clone .cold.1] (in test.dwarf) (Demangler.h:0)

0x000000010007ee38: swift::Demangle::Demangler::demangleBoundGenericArgs(swift::Demangle::Node*, swift::Demangle::Vector<swift::Demangle::Node*> const&, unsigned long) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ee5c: swift::Demangle::Demangler::demangleBoundGenericArgs(swift::Demangle::Node*, swift::Demangle::Vector<swift::Demangle::Node*> const&, unsigned long) [clone .cold.2] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ee80: swift::Demangle::Demangler::demangleImplParamConvention() [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007eea4: swift::Demangle::Demangler::demangleImplResultConvention(swift::Demangle::Node::Kind) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007eec8: swift::Demangle::Demangler::demangleFunctionSpecialization() [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007eeec: swift::Demangle::Demangler::demangleFunctionSpecialization() [clone .cold.2] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ef10: swift::Demangle::Demangler::demangleFunctionSpecialization() [clone .cold.3] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ef38: swift::Demangle::Demangler::addFuncSpecParamNumber(swift::Demangle::Node*, swift::Demangle::FunctionSigSpecializationParamKind) [clone .cold.1] (in test.dwarf) (Demangler.cpp:0)

0x000000010007ef5c: llvm::StringRef llvm::StringRef::copy<swift::Demangle::NodeFactory>(swift::Demangle::NodeFactory&) const [clone .cold.1] (in test.dwarf) (StringRef.h:0)

0x000000010007ef80: char* swift::Demangle::NodeFactory::Allocate<char>(unsigned long) [clone .cold.1] (in test.dwarf) (Demangler.h:0)

0x000000010007efa4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.1] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007efc8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.2] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007efec: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.3] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f010: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.4] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f034: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.5] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f058: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.6] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f07c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.7] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f0a0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.8] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f0c4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.9] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f0e8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.10] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f10c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.11] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f130: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.12] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f154: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.13] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f178: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.14] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f19c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.15] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f1c0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.16] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f1e4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.17] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f208: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.18] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f22c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.19] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f250: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.20] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f274: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.21] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f298: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.22] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f2bc: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.23] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f2e4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.24] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f308: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.25] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f32c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.26] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f350: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.27] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f374: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.28] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f398: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.29] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f3bc: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.30] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f3e0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.31] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f404: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.32] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f428: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.33] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f44c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.34] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f470: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.35] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f494: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.36] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f4b8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.37] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f4dc: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.38] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f500: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.39] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f524: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.40] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f548: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.41] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f56c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.42] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f590: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.43] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f5b8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.44] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f5dc: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.45] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f600: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.46] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f624: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.47] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f648: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.48] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f66c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.49] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f690: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.50] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f6b4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.51] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f6d8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.52] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f6fc: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.53] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f720: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.54] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f744: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.55] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f768: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.56] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f78c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.57] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f7b0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.58] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f7d4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.59] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f7f8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.60] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f81c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.61] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f840: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.62] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f864: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.63] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f888: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.64] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f8ac: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.65] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f8d0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.66] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f8f4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.67] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f918: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.68] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f93c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.69] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f960: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.70] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f984: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.71] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f9a8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.72] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f9cc: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.73] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007f9f0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.74] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fa14: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.75] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fa38: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.76] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fa5c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.77] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fa80: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.78] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007faa4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.79] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fac8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.80] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007faec: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.81] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fb10: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.82] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fb38: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.83] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fb5c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.84] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fb80: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.85] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fba4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.86] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fbc8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.87] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fbec: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.88] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fc10: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.89] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fc34: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.90] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fc58: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.91] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fc7c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.92] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fca0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.93] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fcc4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.94] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fce8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.95] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fd0c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.96] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fd30: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.97] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fd54: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.98] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fd78: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.99] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fd9c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.100] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fdc0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.101] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fde4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.102] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fe08: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.103] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fe2c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.104] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fe50: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.105] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fe74: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.106] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fe98: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.107] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007febc: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.108] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007fee0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.109] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007ff04: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.110] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007ff28: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.111] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007ff4c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.112] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007ff70: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.113] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007ff94: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.114] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007ffb8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.115] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010007ffdc: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.116] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080000: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.117] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080024: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.118] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080048: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.119] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008006c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.120] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080090: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.121] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000800b4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.122] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000800d8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.123] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000800fc: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.124] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080120: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.125] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080144: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.126] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080168: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.127] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008018c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.128] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000801b0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.129] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000801d4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.130] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000801f8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.131] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008021c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.132] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080240: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.133] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080264: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.134] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080288: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.135] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000802ac: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.136] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000802d0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.137] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000802f4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.138] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080318: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.139] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008033c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.140] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080360: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.141] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080384: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.142] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000803a8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.143] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000803cc: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.144] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000803f0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.145] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080414: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.146] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080438: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.147] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008045c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.148] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080480: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.149] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000804a4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.150] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000804c8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.151] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000804ec: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.152] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080510: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.153] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080534: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.154] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080558: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.155] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008057c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.156] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000805a0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.157] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000805c4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.158] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000805e8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.159] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008060c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.160] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080630: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.161] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080654: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.162] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080678: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.163] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008069c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.164] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000806c0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.165] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000806e4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.166] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080708: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.167] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008072c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.168] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080750: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.169] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080774: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.170] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080798: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.171] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000807c0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.172] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000807e8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.173] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008080c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.174] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080830: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.175] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080854: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.176] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080878: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.177] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008089c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.178] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000808c0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.179] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000808e4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.180] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080908: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.181] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008092c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.182] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080950: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.183] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080978: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.184] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000809a0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.185] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000809c4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.186] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000809ec: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.187] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080a14: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.188] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080a38: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.189] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080a60: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.190] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080a84: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.191] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080aa8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.192] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080acc: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.193] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080af0: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.194] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080b14: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.195] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080b38: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.196] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080b5c: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.197] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080b80: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.198] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080ba4: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.199] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080bc8: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.200] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080bec: (anonymous namespace)::NodePrinter::print(swift::Demangle::Node*, bool) [clone .cold.201] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080c10: (anonymous namespace)::NodePrinter::printEntity(swift::Demangle::Node*, bool, (anonymous namespace)::NodePrinter::TypePrinting, bool, llvm::StringRef, int, llvm::StringRef) [clone .cold.1] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080c34: (anonymous namespace)::NodePrinter::printEntity(swift::Demangle::Node*, bool, (anonymous namespace)::NodePrinter::TypePrinting, bool, llvm::StringRef, int, llvm::StringRef) [clone .cold.2] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080c5c: (anonymous namespace)::NodePrinter::printEntity(swift::Demangle::Node*, bool, (anonymous namespace)::NodePrinter::TypePrinting, bool, llvm::StringRef, int, llvm::StringRef) [clone .cold.3] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080c80: (anonymous namespace)::NodePrinter::printEntity(swift::Demangle::Node*, bool, (anonymous namespace)::NodePrinter::TypePrinting, bool, llvm::StringRef, int, llvm::StringRef) [clone .cold.4] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080ca4: (anonymous namespace)::NodePrinter::printEntity(swift::Demangle::Node*, bool, (anonymous namespace)::NodePrinter::TypePrinting, bool, llvm::StringRef, int, llvm::StringRef) [clone .cold.5] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080cc8: (anonymous namespace)::NodePrinter::printEntity(swift::Demangle::Node*, bool, (anonymous namespace)::NodePrinter::TypePrinting, bool, llvm::StringRef, int, llvm::StringRef) [clone .cold.6] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080cf0: (anonymous namespace)::NodePrinter::printEntity(swift::Demangle::Node*, bool, (anonymous namespace)::NodePrinter::TypePrinting, bool, llvm::StringRef, int, llvm::StringRef) [clone .cold.7] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080d14: (anonymous namespace)::NodePrinter::printEntity(swift::Demangle::Node*, bool, (anonymous namespace)::NodePrinter::TypePrinting, bool, llvm::StringRef, int, llvm::StringRef) [clone .cold.8] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080d38: (anonymous namespace)::NodePrinter::printEntity(swift::Demangle::Node*, bool, (anonymous namespace)::NodePrinter::TypePrinting, bool, llvm::StringRef, int, llvm::StringRef) [clone .cold.9] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080d5c: (anonymous namespace)::NodePrinter::printFunctionType(swift::Demangle::Node*, swift::Demangle::Node*) [clone .cold.1] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080d80: (anonymous namespace)::NodePrinter::printFunctionType(swift::Demangle::Node*, swift::Demangle::Node*) [clone .cold.2] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080da4: (anonymous namespace)::NodePrinter::printFunctionParameters(swift::Demangle::Node*, swift::Demangle::Node*, bool) [clone .cold.1] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080dc8: (anonymous namespace)::NodePrinter::printFunctionParameters(swift::Demangle::Node*, swift::Demangle::Node*, bool) [clone .cold.2] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080dec: (anonymous namespace)::NodePrinter::printFunctionParameters(swift::Demangle::Node*, swift::Demangle::Node*, bool) [clone .cold.3] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080e14: (anonymous namespace)::NodePrinter::printSpecializationPrefix(swift::Demangle::Node*, llvm::StringRef, llvm::StringRef) [clone .cold.1] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080e38: (anonymous namespace)::NodePrinter::printSpecializationPrefix(swift::Demangle::Node*, llvm::StringRef, llvm::StringRef) [clone .cold.2] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080e5c: (anonymous namespace)::NodePrinter::printSpecializationPrefix(swift::Demangle::Node*, llvm::StringRef, llvm::StringRef) [clone .cold.3] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080e80: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.1] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080ea8: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.2] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080ecc: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.3] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080ef0: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.4] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080f14: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.5] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080f38: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.6] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080f5c: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.7] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080f80: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.8] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080fa4: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.9] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080fc8: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.10] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100080fec: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.11] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100081010: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.12] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100081034: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.13] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100081058: (anonymous namespace)::NodePrinter::printFunctionSigSpecializationParam(swift::Demangle::Node*, unsigned int) [clone .cold.14] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008107c: (anonymous namespace)::NodePrinter::printWithParens(swift::Demangle::Node*) [clone .cold.1] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000810a0: (anonymous namespace)::NodePrinter::printWithParens(swift::Demangle::Node*) [clone .cold.2] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000810c4: (anonymous namespace)::NodePrinter::printWithParens(swift::Demangle::Node*) [clone .cold.3] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000810e8: (anonymous namespace)::NodePrinter::printImplFunctionType(swift::Demangle::Node*) [clone .cold.1] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100081110: (anonymous namespace)::NodePrinter::printImplFunctionType(swift::Demangle::Node*) [clone .cold.2] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100081138: needSpaceBeforeType(swift::Demangle::Node*) [clone .cold.1] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008115c: (anonymous namespace)::NodePrinter::printEntityType(swift::Demangle::Node*, swift::Demangle::Node*, swift::Demangle::Node*) [clone .cold.1] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100081180: (anonymous namespace)::NodePrinter::printEntityType(swift::Demangle::Node*, swift::Demangle::Node*, swift::Demangle::Node*) [clone .cold.2] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000811a4: (anonymous namespace)::NodePrinter::printEntityType(swift::Demangle::Node*, swift::Demangle::Node*, swift::Demangle::Node*) [clone .cold.3] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000811c8: (anonymous namespace)::NodePrinter::printFunctionParameters(swift::Demangle::Node*, swift::Demangle::Node*, bool)::{lambda(swift::Demangle::Node*)#1}::operator()(swift::Demangle::Node*) const [clone .cold.1] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000811f0: (anonymous namespace)::NodePrinter::printFunctionParameters(swift::Demangle::Node*, swift::Demangle::Node*, bool)::{lambda(swift::Demangle::Node*)#1}::operator()(swift::Demangle::Node*) const [clone .cold.2] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100081214: (anonymous namespace)::NodePrinter::printFunctionParameters(swift::Demangle::Node*, swift::Demangle::Node*, bool)::{lambda(swift::Demangle::Node*)#1}::operator()(swift::Demangle::Node*) const [clone .cold.3] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008123c: (anonymous namespace)::NodePrinter::findSugar(swift::Demangle::Node*) [clone .cold.1] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100081260: (anonymous namespace)::NodePrinter::findSugar(swift::Demangle::Node*) [clone .cold.2] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100081284: (anonymous namespace)::NodePrinter::findSugar(swift::Demangle::Node*) [clone .cold.3] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000812a8: (anonymous namespace)::NodePrinter::findSugar(swift::Demangle::Node*) [clone .cold.4] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000812cc: (anonymous namespace)::NodePrinter::findSugar(swift::Demangle::Node*) [clone .cold.5] (in test.dwarf) (NodePrinter.cpp:0)

0x00000001000812f0: (anonymous namespace)::NodePrinter::findSugar(swift::Demangle::Node*) [clone .cold.6] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100081314: (anonymous namespace)::NodePrinter::findSugar(swift::Demangle::Node*) [clone .cold.7] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100081338: (anonymous namespace)::NodePrinter::findSugar(swift::Demangle::Node*) [clone .cold.8] (in test.dwarf) (NodePrinter.cpp:0)

0x000000010008135c: (anonymous namespace)::NodePrinter::findSugar(swift::Demangle::Node*) [clone .cold.9] (in test.dwarf) (NodePrinter.cpp:0)

0x0000000100081380: (anonymous namespace)::NameSource::advanceOffset(unsigned long) [clone .cold.1] (in test.dwarf) (OldDemangler.cpp:0)

0x00000001000813a8: (anonymous namespace)::OldDemangler::demangleTypeImpl() [clone .cold.1] (in test.dwarf) (OldDemangler.cpp:0)

0x00000001000813d0: (anonymous namespace)::OldDemangler::demangleEntity() [clone .cold.1] (in test.dwarf) (OldDemangler.cpp:0)

0x00000001000813f8: (anonymous namespace)::OldDemangler::demangleBoundGenericArgs(swift::Demangle::Node*) [clone .cold.1] (in test.dwarf) (OldDemangler.cpp:0)

0x0000000100081420: (anonymous namespace)::OldDemangler::demangleDependentMemberTypeName(swift::Demangle::Node*) [clone .cold.1] (in test.dwarf) (OldDemangler.cpp:0)

0x0000000100081448: -[RollbarDTO(CustomData) addKeyed:DataTransferObject:] (in test.dwarf) (RollbarDTO+CustomData.m:5)

0x0000000100081468: -[RollbarDTO(CustomData) addKeyed:String:] (in test.dwarf) (RollbarDTO+CustomData.m:9)

0x00000001000814d0: -[RollbarDTO(CustomData) addKeyed:Number:] (in test.dwarf) (RollbarDTO+CustomData.m:13)

0x00000001000814f0: -[RollbarDTO(CustomData) addKeyed:Array:] (in test.dwarf) (RollbarDTO+CustomData.m:17)

0x0000000100081558: -[RollbarDTO(CustomData) addKeyed:Dictionary:] (in test.dwarf) (RollbarDTO+CustomData.m:21)

0x00000001000815c0: -[RollbarDTO(CustomData) addKeyed:Placeholder:] (in test.dwarf) (RollbarDTO+CustomData.m:25)

0x0000000100081628: -[RollbarDTO(CustomData) tryAddKeyed:Object:] (in test.dwarf) (RollbarDTO+CustomData.m:29)

0x00000001000816b0: -[RollbarDTO(Protected) description] (in test.dwarf) (RollbarDTO+Protected.m:9)

0x00000001000816b4: -[RollbarDTO(Protected) dataDictionary] (in test.dwarf) (RollbarDTO+Protected.m:14)

0x0000000100081780: -[RollbarDTO(Protected) dataArray] (in test.dwarf) (RollbarDTO+Protected.m:29)

0x000000010008184c: -[RollbarDTO(Protected) getDataByKey:] (in test.dwarf) (RollbarDTO+Protected.m:46)

0x00000001000818cc: -[RollbarDTO(Protected) setData:byKey:] (in test.dwarf) (RollbarDTO+Protected.m:57)

0x000000010008199c: -[RollbarDTO(Protected) mergeDataDictionary:] (in test.dwarf) (RollbarDTO+Protected.m:74)

0x00000001000819b8: -[RollbarDTO(Protected) safelyGetDictionaryByKey:] (in test.dwarf) (RollbarDTO+Protected.m:82)

0x0000000100081a38: -[RollbarDTO(Protected) safelyGetArrayByKey:] (in test.dwarf) (RollbarDTO+Protected.m:92)

0x0000000100081ab8: -[RollbarDTO(Protected) safelyGetStringByKey:] (in test.dwarf) (RollbarDTO+Protected.m:102)

0x0000000100081b3c: -[RollbarDTO(Protected) safelyGetNumberByKey:] (in test.dwarf) (RollbarDTO+Protected.m:113)

0x0000000100081b40: -[RollbarDTO(Protected) setDictionary:forKey:] (in test.dwarf) (RollbarDTO+Protected.m:119)

0x0000000100081bbc: -[RollbarDTO(Protected) setArray:forKey:] (in test.dwarf) (RollbarDTO+Protected.m:126)

0x0000000100081c38: -[RollbarDTO(Protected) setString:forKey:] (in test.dwarf) (RollbarDTO+Protected.m:133)

0x0000000100081cb4: -[RollbarDTO(Protected) setNumber:forKey:] (in test.dwarf) (RollbarDTO+Protected.m:142)

0x0000000100081cb8: -[RollbarDTO(Protected) safelyGetDataTransferObjectByKey:] (in test.dwarf) (RollbarDTO+Protected.m:147)

0x0000000100081d44: -[RollbarDTO(Protected) setDataTransferObject:forKey:] (in test.dwarf) (RollbarDTO+Protected.m:163)

0x0000000100081d58: -[RollbarDTO(Protected) safelyGetTriStateFlagByKey:] (in test.dwarf) (RollbarDTO+Protected.m:166)

0x0000000100081dbc: -[RollbarDTO(Protected) setTriStateFlag:forKey:] (in test.dwarf) (RollbarDTO+Protected.m:176)

0x0000000100081e6c: -[RollbarDTO(Protected) safelyGetBoolByKey:withDefault:] (in test.dwarf) (RollbarDTO+Protected.m:185)

0x0000000100081eb4: -[RollbarDTO(Protected) setBool:forKey:] (in test.dwarf) (RollbarDTO+Protected.m:195)

0x0000000100081f24: -[RollbarDTO(Protected) safelyGetUIntegerByKey:withDefault:] (in test.dwarf) (RollbarDTO+Protected.m:200)

0x0000000100081f6c: -[RollbarDTO(Protected) setUInteger:forKey:] (in test.dwarf) (RollbarDTO+Protected.m:211)

0x0000000100081fdc: -[RollbarDTO(Protected) safelyGetIntegerByKey:withDefault:] (in test.dwarf) (RollbarDTO+Protected.m:216)

0x0000000100082024: -[RollbarDTO(Protected) setInteger:forKey:] (in test.dwarf) (RollbarDTO+Protected.m:228)

0x0000000100082094: -[RollbarDTO(Protected) safelyGetTimeIntervalByKey:withDefault:] (in test.dwarf) (RollbarDTO+Protected.m:234)

0x00000001000820e4: -[RollbarDTO(Protected) setTimeInterval:forKey:] (in test.dwarf) (RollbarDTO+Protected.m:246)

0x000000010008215c: -[RollbarDTO(Protected) safelyGetDateByKey:] (in test.dwarf) (RollbarDTO+Protected.m:253)

0x00000001000821b8: -[RollbarDTO(Protected) safelyGetDateByKey:withDefault:] (in test.dwarf) (RollbarDTO+Protected.m:267)

0x0000000100082260: -[RollbarDTO(Protected) setDate:forKey:] (in test.dwarf) (RollbarDTO+Protected.m:282)

0x00000001000822e8: +[RollbarDTO isTransferableObject:] (in test.dwarf) (RollbarDTO.m:16)

0x0000000100082300: +[RollbarDTO isTransferableDataValue:] (in test.dwarf) (RollbarDTO.m:27)

0x0000000100082410: +[RollbarDTO dataWithJSONObject:options:error:safe:] (in test.dwarf) (RollbarDTO.m:44)

0x0000000100082684: +[RollbarDTO safeDataFromJSONObject:] (in test.dwarf) (RollbarDTO.m:80)

0x0000000100082690: +[RollbarDTO measureJSONDataByteSize:] (in test.dwarf) (RollbarDTO.m:132)

0x0000000100082698: -[RollbarDTO jsonFriendlyData] (in test.dwarf) (RollbarDTO.m:141)

0x00000001000826a0: -[RollbarDTO serializeToJSONData] (in test.dwarf) (RollbarDTO.m:144)

0x0000000100082760: -[RollbarDTO serializeToJSONString] (in test.dwarf) (RollbarDTO.m:162)

0x000000010008284c: -[RollbarDTO deserializeFromJSONData:] (in test.dwarf) (RollbarDTO.m:193)

0x00000001000829bc: -[RollbarDTO deserializeFromJSONString:] (in test.dwarf) (RollbarDTO.m:227)

0x0000000100082a48: -[RollbarDTO getDefinedProperties] (in test.dwarf) (RollbarDTO.m:237)

0x0000000100082b28: -[RollbarDTO hasSameDefinedPropertiesAs:] (in test.dwarf) (RollbarDTO.m:266)

0x0000000100082bac: -[RollbarDTO isEqual:] (in test.dwarf) (RollbarDTO.m:271)

0x0000000100082e78: -[RollbarDTO isEmpty] (in test.dwarf) (RollbarDTO.m:328)

0x0000000100082e80: -[RollbarDTO initWithJSONString:] (in test.dwarf) (RollbarDTO.m:333)

0x0000000100082f30: -[RollbarDTO initWithJSONData:] (in test.dwarf) (RollbarDTO.m:342)

0x0000000100082f80: -[RollbarDTO initWithDictionary:] (in test.dwarf) (RollbarDTO.m:350)

0x0000000100083200: -[RollbarDTO initWithArray:] (in test.dwarf) (RollbarDTO.m:397)

0x0000000100083444: -[RollbarDTO init] (in test.dwarf) (RollbarDTO.m:436)

0x00000001000834b0: -[RollbarDTO copyWithZone:] (in test.dwarf) (RollbarDTO.m:458)

0x0000000100083690: -[RollbarDTO mutableCopyWithZone:] (in test.dwarf) (RollbarDTO.m:492)

0x00000001000837f0: -[RollbarDTO .cxx_destruct] (in test.dwarf) (RollbarDTO.m:8)

0x000000010008382c: -[RollbarEntity initWithBuilder:] (in test.dwarf) (RollbarBuilder.m:5)

0x00000001000838ac: -[RollbarEntity ID] (in test.dwarf) (RollbarBuilder.h:11)

0x00000001000838b4: -[RollbarEntity .cxx_destruct] (in test.dwarf) (RollbarBuilder.m:3)

0x00000001000838c0: -[RollbarEntityBuilder build] (in test.dwarf) (RollbarBuilder.m:16)

0x00000001000838f0: -[RollbarEntityBuilder ID] (in test.dwarf) (RollbarBuilder.h:28)

0x00000001000838f8: -[RollbarEntityBuilder setID:] (in test.dwarf) (RollbarBuilder.h:28)

0x0000000100083904: -[RollbarEntityBuilder .cxx_destruct] (in test.dwarf) (RollbarBuilder.m:14)

0x0000000100083910: +[RollbarReceptionist receptionistForKeyPath:object:queue:task:] (in test.dwarf) (RollbarReceptionist.m:9)

0x0000000100083a14: -[RollbarReceptionist observeValueForKeyPath:ofObject:change:context:] (in test.dwarf) (RollbarReceptionist.m:28)

0x0000000100083afc: __70-[RollbarReceptionist observeValueForKeyPath:ofObject:change:context:]_block_invoke (in test.dwarf) (RollbarReceptionist.m:34)

0x0000000100083b14: __copy_helper_block_e8_32s40s48s56s (in test.dwarf) (RollbarReceptionist.m:0)

0x0000000100083b4c: __destroy_helper_block_e8_32s40s48s56s (in test.dwarf) (RollbarReceptionist.m:0)

0x0000000100083b84: -[RollbarReceptionist description] (in test.dwarf) (RollbarReceptionist.m:40)

0x0000000100083bc0: -[RollbarReceptionist .cxx_destruct] (in test.dwarf) (RollbarReceptionist.m:3)

0x0000000100083c08: +[RollbarTaskDispatcher dispatcherForQueue:task:taskInput:] (in test.dwarf) (RollbarTaskDispatcher.m:9)

0x0000000100083cc4: -[RollbarTaskDispatcher dispatchTask:input:] (in test.dwarf) (RollbarTaskDispatcher.m:23)

0x0000000100083d1c: __44-[RollbarTaskDispatcher dispatchTask:input:]_block_invoke (in test.dwarf) (RollbarTaskDispatcher.m:26)

0x0000000100083d30: __copy_helper_block_e8_32s (in test.dwarf) (RollbarTaskDispatcher.m:0)

0x0000000100083d38: __destroy_helper_block_e8_32s (in test.dwarf) (RollbarTaskDispatcher.m:0)

0x0000000100083d40: -[RollbarTaskDispatcher dispatchInput:] (in test.dwarf) (RollbarTaskDispatcher.m:30)

0x0000000100083d4c: -[RollbarTaskDispatcher dispatch] (in test.dwarf) (RollbarTaskDispatcher.m:36)

0x0000000100083d54: -[RollbarTaskDispatcher description] (in test.dwarf) (RollbarTaskDispatcher.m:41)

0x0000000100083d90: -[RollbarTaskDispatcher .cxx_destruct] (in test.dwarf) (RollbarTaskDispatcher.m:3)

0x0000000100083dcc: +[NSDate(Rollbar) rollbar_dateFromString:] (in test.dwarf) (NSDate+Rollbar.m:12)

0x0000000100083e44: -[NSDate(Rollbar) rollbar_toString] (in test.dwarf) (NSDate+Rollbar.m:20)

0x0000000100083ea0: -[NSDictionary(Rollbar) rollbar_valuePresentForKey:withContext:] (in test.dwarf) (NSDictionary+Rollbar.m:8)

0x0000000100083f6c: +[NSJSONSerialization(Rollbar) rollbar_dataWithJSONObject:options:error:safe:] (in test.dwarf) (NSJSONSerialization+Rollbar.m:12)

0x00000001000841e0: +[NSJSONSerialization(Rollbar) rollbar_safeDataFromJSONObject:] (in test.dwarf) (NSJSONSerialization+Rollbar.m:48)

0x0000000100084284: __63+[NSJSONSerialization(Rollbar) rollbar_safeDataFromJSONObject:]_block_invoke (in test.dwarf) (NSJSONSerialization+Rollbar.m:56)

0x00000001000846ec: +[NSJSONSerialization(Rollbar) rollbar_measureJSONDataByteSize:] (in test.dwarf) (NSJSONSerialization+Rollbar.m:134)

0x00000001000846f4: -[NSObject(Rollbar) rollbar_objectClassName] (in test.dwarf) (NSObject+Rollbar.m:5)

0x0000000100084708: +[RollbarBundleUtil detectAppBundleVersion] (in test.dwarf) (RollbarBundleUtil.m:5)

0x00000001000847e8: +[RollbarCachesDirectory directory] (in test.dwarf) (RollbarCachesDirectory.m:6)

0x0000000100084838: +[RollbarCachesDirectory ensureCachesDirectoryExists] (in test.dwarf) (RollbarCachesDirectory.m:39)

0x0000000100084944: +[RollbarCachesDirectory checkCacheFileExists:] (in test.dwarf) (RollbarCachesDirectory.m:66)

0x00000001000849e8: +[RollbarCachesDirectory getCacheFilePath:] (in test.dwarf) (RollbarCachesDirectory.m:73)

0x0000000100084a58: +[RollbarCrashReportUtil extractLinesFromCrashReport:] (in test.dwarf) (RollbarCrashReportUtil.m:17)

0x0000000100084a90: +[RollbarCrashReportUtil extractExceptionInfoFromCrashReport:] (in test.dwarf) (RollbarCrashReportUtil.m:26)

0x0000000100084d60: +[RollbarCrashReportUtil extractComponentsFromBacktrace:] (in test.dwarf) (RollbarCrashReportUtil.m:79)

0x0000000100085008: +[RollbarFileIOUtil applicationSupportDirectory] (in test.dwarf) (RollbarFileIOUtil.m:15)

0x0000000100085018: +[RollbarFileIOUtil applicationCachesDirectory] (in test.dwarf) (RollbarFileIOUtil.m:20)

0x0000000100085028: +[RollbarFileIOUtil directory:] (in test.dwarf) (RollbarFileIOUtil.m:23)

0x00000001000850ec: +[RollbarFileReader findData:inData:] (in test.dwarf) (RollbarFileReader.m:9)

0x00000001000851e0: -[RollbarFileReader initWithFilePath:andOffset:] (in test.dwarf) (RollbarFileReader.m:35)

0x00000001000852b8: -[RollbarFileReader dealloc] (in test.dwarf) (RollbarFileReader.m:50)

0x0000000100085304: -[RollbarFileReader readLine] (in test.dwarf) (RollbarFileReader.m:56)

0x00000001000854a0: -[RollbarFileReader getCurrentOffset] (in test.dwarf) (RollbarFileReader.m:90)

0x00000001000854a8: -[RollbarFileReader enumerateLinesUsingBlock:] (in test.dwarf) (RollbarFileReader.m:93)

0x000000010008553c: -[RollbarFileReader lineDelimiter] (in test.dwarf) (RollbarFileReader.m:7)

0x0000000100085544: -[RollbarFileReader setLineDelimiter:] (in test.dwarf) (RollbarFileReader.m:7)

0x000000010008554c: -[RollbarFileReader chunkSize] (in test.dwarf) (RollbarFileReader.m:7)

0x0000000100085554: -[RollbarFileReader setChunkSize:] (in test.dwarf) (RollbarFileReader.m:0)

0x000000010008555c: -[RollbarFileReader .cxx_destruct] (in test.dwarf) (RollbarFileReader.m:5)

0x0000000100085598: +[RollbarFileWriter ensureFileExists:] (in test.dwarf) (RollbarFileWriter.m:6)

0x0000000100085678: +[RollbarFileWriter appendData:toFile:] (in test.dwarf) (RollbarFileWriter.m:28)

0x00000001000858c4: +[RollbarFileWriter appendSafelyData:toFile:] (in test.dwarf) (RollbarFileWriter.m:73)

0x0000000100085944: +[RollbarHostingProcessUtil getHostingProcessName] (in test.dwarf) (RollbarHostingProcessUtil.m:5)

0x0000000100085990: +[RollbarHostingProcessUtil getHostingProcessIdentifier] (in test.dwarf) (RollbarHostingProcessUtil.m:11)

0x00000001000859d4: RBCLog (in test.dwarf) (RollbarInternalLogging.m:12)

0x00000001000859d8: RBCErr (in test.dwarf) (RollbarInternalLogging.m:23)

0x00000001000859dc: +[RollbarMemoryStatsDescriptors sharedInstance] (in test.dwarf) (RollbarMemoryStatsDescriptors.m:29)

0x0000000100085a50: __47+[RollbarMemoryStatsDescriptors sharedInstance]_block_invoke (in test.dwarf) (RollbarMemoryStatsDescriptors.m:34)

0x0000000100085b98: +[RollbarMemoryStatsDescriptors sharedInstanceExists] (in test.dwarf) (RollbarMemoryStatsDescriptors.m:61)

0x0000000100085bac: -[RollbarMemoryStatsDescriptors getMemoryStatsTypeDescriptor:] (in test.dwarf) (RollbarMemoryStatsDescriptors.m:68)

0x0000000100085bb4: -[RollbarMemoryStatsDescriptors getPhysicalMemoryDescriptor:] (in test.dwarf) (RollbarMemoryStatsDescriptors.m:73)

0x0000000100085bbc: -[RollbarMemoryStatsDescriptors getVirtualMemoryDescriptor:] (in test.dwarf) (RollbarMemoryStatsDescriptors.m:78)

0x0000000100085bc4: -[RollbarMemoryStatsDescriptors .cxx_destruct] (in test.dwarf) (RollbarMemoryStatsDescriptors.m:19)

0x0000000100085c00: +[RollbarMemoryUtil initialize] (in test.dwarf) (RollbarMemoryUtil.m:10)

0x0000000100085c70: +[RollbarMemoryUtil getMemoryStats] (in test.dwarf) (RollbarMemoryUtil.m:22)

0x0000000100085e24: +[RollbarMemoryUtil getPhysicalMemoryStats] (in test.dwarf) (RollbarMemoryUtil.m:36)

0x0000000100085f18: +[RollbarMemoryUtil getVirtualMemoryStats] (in test.dwarf) (RollbarMemoryUtil.m:44)

0x0000000100086390: +[RollbarMemoryUtil getPhysicalMemoryInBytes] (in test.dwarf) (RollbarMemoryUtil.m:90)

0x00000001000863e0: +[RollbarMemoryUtil convertToMBs:] (in test.dwarf) (RollbarMemoryUtil.m:106)

0x00000001000863ec: +[RollbarMemoryUtil convertToHumanFriendlyFormat:] (in test.dwarf) (RollbarMemoryUtil.m:112)

0x00000001000863f8: +[RollbarMemoryUtil getPhysicalMemoryInMBs] (in test.dwarf) (RollbarMemoryUtil.m:118)

0x000000010008643c: +[RollbarMemoryUtil getPhysicalMemorySizeWithUnits] (in test.dwarf) (RollbarMemoryUtil.m:130)

0x000000010008646c: +[RollbarOsUtil detectOsVersion] (in test.dwarf) (RollbarOsUtil.m:5)

0x00000001000864c0: +[RollbarOsUtil detectOsVersionString] (in test.dwarf) (RollbarOsUtil.m:11)

0x000000010008650c: +[RollbarOsUtil stringFromOsVersion:] (in test.dwarf) (RollbarOsUtil.m:17)

0x00000001000865d4: +[RollbarOsUtil detectOsUptimeInterval] (in test.dwarf) (RollbarOsUtil.m:24)

0x0000000100086620: +[RollbarPredicateBuilder buildIntegerPredicateWithValue:forProperty:] (in test.dwarf) (RollbarPredicateBuilder.m:12)

0x0000000100086664: +[RollbarPredicateBuilder buildNumberPredicateWithValue:forProperty:] (in test.dwarf) (RollbarPredicateBuilder.m:23)

0x0000000100086670: +[RollbarPredicateBuilder buildStringPredicateWithValue:forProperty:] (in test.dwarf) (RollbarPredicateBuilder.m:31)

0x000000010008667c: +[RollbarPredicateBuilder buildStringPredicateWithValueList:forProperty:] (in test.dwarf) (RollbarPredicateBuilder.m:36)

0x0000000100086718: +[RollbarPredicateBuilder buildLessThanDatePredicateWithValue:forProperty:] (in test.dwarf) (RollbarPredicateBuilder.m:50)

0x00000001000867a0: +[RollbarPredicateBuilder buildInclusiveTimeIntervalPredicateStartingAt:endingAt:forProperty:] (in test.dwarf) (RollbarPredicateBuilder.m:68)

0x00000001000867e0: +[RollbarPredicateBuilder buildTimeIntervalPredicateStartingAt:inclusively:endingAt:inclusively:forProperty:] (in test.dwarf) (RollbarPredicateBuilder.m:85)

0x0000000100086964: +[RollbarPredicateBuilder safelyBuildObjectPredicateWithValue:forProperty:] (in test.dwarf) (RollbarPredicateBuilder.m:137)

0x0000000100086a0c: +[RollbarTriStateFlagUtil TriStateFlagToString:] (in test.dwarf) (RollbarTriStateFlag.m:7)

0x0000000100086a38: +[RollbarTriStateFlagUtil TriStateFlagFromString:] (in test.dwarf) (RollbarTriStateFlag.m:18)

0x0000000100086aac: swift::AsyncTask::waitFuture(swift::AsyncTask*, swift::AsyncContext*, void (*)(swift::AsyncContext* swift_async_context) swiftasynccall, swift::AsyncContext*, swift::OpaqueValue*) (in test.dwarf) + 0

0x0000000100086cf4: swift::swift56override_swift_task_future_wait(swift::OpaqueValue*, swift::AsyncContext*, swift::AsyncTask*, void (*)(swift::AsyncContext* swift_async_context) swiftasynccall, swift::AsyncContext*, void (*)(swift::OpaqueValue*, swift::AsyncContext* swift_async_context, swift::AsyncTask*, void (swift::AsyncContext* swift_async_context), swift::AsyncContext*) swiftasynccall) (in test.dwarf) + 0

0x0000000100086dd8: task_future_wait_resume_adapter(swift::AsyncContext*) (in test.dwarf) + 0

0x0000000100086de0: swift::swift56override_swift_task_future_wait_throwing(swift::OpaqueValue*, swift::AsyncContext*, swift::AsyncTask*, void (*)(swift::AsyncContext* swift_async_context, void* swift_context) swiftasynccall, swift::AsyncContext*, void (*)(swift::OpaqueValue*, swift::AsyncContext* swift_async_context, swift::AsyncTask*, void* swift_context, swift::AsyncContext*) swiftasynccall) (in test.dwarf) + 0

0x0000000100086ee8: task_wait_throwing_resume_adapter(swift::AsyncContext*) (in test.dwarf) + 0

0x0000000100086ef8: swift::swift56override_swift_task_create_common(unsigned long, swift::TaskOptionRecord*, swift::TargetMetadata<swift::InProcess> const*, void (*)(swift::AsyncContext* swift_async_context) swiftasynccall, void*, unsigned long, swift::AsyncTaskAndContext (*)(unsigned long, swift::TaskOptionRecord*, swift::TargetMetadata<swift::InProcess> const*, void (swift::AsyncContext* swift_async_context), void (swift::AsyncContext* swift_async_context) swiftasynccall, unsigned long) swiftcall) (in test.dwarf) + 0

0x0000000100086f08: swift::AsyncTask::flagAsRunning_slow() (in test.dwarf) + 0

0x0000000100087080: swift::AsyncTask::flagAsSuspended_slow() (in test.dwarf) + 0

0x00000001000871f8: swift::swift_task_escalateBackdeploy56(swift::AsyncTask*, swift::JobPriority) (in test.dwarf) + 0

0x000000010008725c: swift::swift_task_escalateBackdeploy56(swift::AsyncTask*, swift::JobPriority)::$_2::operator()() const::{lambda(void*)#1}::__invoke(void*) (in test.dwarf) + 0

0x000000010008728c: swift::waitForStatusRecordUnlock(swift::AsyncTask*, swift::ActiveTaskStatus&) (in test.dwarf) + 0

0x0000000100087370: swift::swift_Concurrency_fatalError(unsigned int, char const*, ...) (in test.dwarf) + 0

0x000000010008737c: swift::swift_task_getCurrent() (in test.dwarf) + 0

0x0000000100087384: swift::_swift_task_clearCurrent() (in test.dwarf) + 0

0x00000001000873b8: swift::adoptTaskVoucher(swift::AsyncTask*) (in test.dwarf) + 0

0x0000000100087470: swift::restoreTaskVoucher(swift::AsyncTask*) (in test.dwarf) + 0

0x0000000100087504: swift_voucher_needs_adopt(voucher_s*)::{lambda()#1}::operator()() const::{lambda(void*)#1}::__invoke(void*) (in test.dwarf) + 0

0x0000000100087534: swift::_swift_tsan_acquire(void*) (in test.dwarf) + 0

0x0000000100087598: swift::_swift_tsan_release(void*) (in test.dwarf) + 0

0x00000001000875fc: swift::_swift_tsan_acquire(void*)::$_0::operator()() const::{lambda(void*)#1}::__invoke(void*) (in test.dwarf) + 0

0x000000010008762c: swift::_swift_tsan_release(void*)::$_1::operator()() const::{lambda(void*)#1}::__invoke(void*) (in test.dwarf) + 0

0x000000010008765c: swift::MutexPlatformHelper::init(os_unfair_lock_s&, bool) (in test.dwarf) + 0

0x0000000100087664: swift::MutexPlatformHelper::destroy(os_unfair_lock_s&) (in test.dwarf) + 0

0x0000000100087668: swift::MutexPlatformHelper::lock(os_unfair_lock_s&) (in test.dwarf) + 0

0x000000010008767c: swift::MutexPlatformHelper::unlock(os_unfair_lock_s&) (in test.dwarf) + 0

0x0000000100087690: swift::swift_task_enterThreadLocalContextBackdeploy56(char*) (in test.dwarf) + 0

0x00000001000876f4: swift::swift_task_exitThreadLocalContextBackdeploy56(char*) (in test.dwarf) + 0

0x0000000100087758: swift::swift_task_enterThreadLocalContextBackdeploy56(char*)::$_0::operator()() const::{lambda(void*)#1}::__invoke(void*) (in test.dwarf) + 0

0x0000000100087788: swift::swift_task_exitThreadLocalContextBackdeploy56(char*)::$_1::operator()() const::{lambda(void*)#1}::__invoke(void*) (in test.dwarf) + 0

0x0000000100088d00: _objc_msgSend$CPUArchForMajor:minor: (in test.dwarf) + 0

0x0000000100088d20: _objc_msgSend$CPUType: (in test.dwarf) + 0

0x0000000100088d40: _objc_msgSend$CaptureIpTypeFromString: (in test.dwarf) + 0

0x0000000100088d60: _objc_msgSend$CaptureIpTypeToString: (in test.dwarf) + 0

0x0000000100088d80: _objc_msgSend$HttpMethodFromString: (in test.dwarf) + 0

0x0000000100088da0: _objc_msgSend$HttpMethodToString: (in test.dwarf) + 0

0x0000000100088dc0: _objc_msgSend$ID (in test.dwarf) + 0

0x0000000100088de0: _objc_msgSend$JSONForObject: (in test.dwarf) + 0

0x0000000100088e00: _objc_msgSend$JSONObjectWithData:options:error: (in test.dwarf) + 0

0x0000000100088e20: _objc_msgSend$NSLogReplacement: (in test.dwarf) + 0

0x0000000100088e40: _objc_msgSend$RollbarAppLanguageFromString: (in test.dwarf) + 0

0x0000000100088e60: _objc_msgSend$RollbarAppLanguageToString: (in test.dwarf) + 0

0x0000000100088e80: _objc_msgSend$RollbarLevelFromString: (in test.dwarf) + 0

0x0000000100088ea0: _objc_msgSend$RollbarLevelToString: (in test.dwarf) + 0

0x0000000100088ec0: _objc_msgSend$RollbarSourceFromString: (in test.dwarf) + 0

0x0000000100088ee0: _objc_msgSend$RollbarSourceToString: (in test.dwarf) + 0

0x0000000100088f00: _objc_msgSend$RollbarTelemetryTypeFromString: (in test.dwarf) + 0

0x0000000100088f20: _objc_msgSend$RollbarTelemetryTypeToString: (in test.dwarf) + 0

0x0000000100088f40: _objc_msgSend$TriStateFlagFromString: (in test.dwarf) + 0

0x0000000100088f60: _objc_msgSend$TriStateFlagToString: (in test.dwarf) + 0

0x0000000100088f80: _objc_msgSend$URLEncoded (in test.dwarf) + 0

0x0000000100088fa0: _objc_msgSend$URLForDirectory:inDomain:appropriateForURL:create:error: (in test.dwarf) + 0

0x0000000100088fc0: _objc_msgSend$URLQueryAllowedCharacterSet (in test.dwarf) + 0

0x0000000100088fe0: _objc_msgSend$URLWithString: (in test.dwarf) + 0

0x0000000100089000: _objc_msgSend$UTF8String (in test.dwarf) + 0

0x0000000100089020: _objc_msgSend$UUID (in test.dwarf) + 0

0x0000000100089040: _objc_msgSend$UUIDString (in test.dwarf) + 0

0x0000000100089060: _objc_msgSend$WWANOnly (in test.dwarf) + 0

0x0000000100089080: _objc_msgSend$_clearFile: (in test.dwarf) + 0

0x00000001000890a0: _objc_msgSend$_droppedPayloadsLogPath (in test.dwarf) + 0

0x00000001000890c0: _objc_msgSend$_getSDKDataFilePath: (in test.dwarf) + 0

0x00000001000890e0: _objc_msgSend$_incomingPayloadsLogPath (in test.dwarf) + 0

0x0000000100089100: _objc_msgSend$_logPayloadsStorePath (in test.dwarf) + 0

0x0000000100089120: _objc_msgSend$_telemetryItemsStorePath (in test.dwarf) + 0

0x0000000100089140: _objc_msgSend$_test_rollbarThread (in test.dwarf) + 0

0x0000000100089160: _objc_msgSend$_transmittedPayloadsLogPath (in test.dwarf) + 0

0x0000000100089180: _objc_msgSend$abbreviation (in test.dwarf) + 0

0x00000001000891a0: _objc_msgSend$absoluteString (in test.dwarf) + 0

0x00000001000891c0: _objc_msgSend$accessToken (in test.dwarf) + 0

0x00000001000891e0: _objc_msgSend$actionWithTitle:style:handler: (in test.dwarf) + 0

0x0000000100089200: _objc_msgSend$active (in test.dwarf) + 0

0x0000000100089220: _objc_msgSend$addAction: (in test.dwarf) + 0

0x0000000100089240: _objc_msgSend$addAttachmentData:mimeType:fileName: (in test.dwarf) + 0

0x0000000100089260: _objc_msgSend$addButtonWithTitle: (in test.dwarf) + 0

0x0000000100089280: _objc_msgSend$addDestinationWithEndpoint:andAccesToken: (in test.dwarf) + 0

0x00000001000892a0: _objc_msgSend$addEntriesFromDictionary: (in test.dwarf) + 0

0x00000001000892c0: _objc_msgSend$addFilter: (in test.dwarf) + 0

0x00000001000892e0: _objc_msgSend$addObject: (in test.dwarf) + 0

0x0000000100089300: _objc_msgSend$addObjectsFromArray: (in test.dwarf) + 0

0x0000000100089320: _objc_msgSend$addObserver:forKeyPath:options:context: (in test.dwarf) + 0

0x0000000100089340: _objc_msgSend$addObserver:selector:name:object: (in test.dwarf) + 0

0x0000000100089360: _objc_msgSend$addOperationWithBlock: (in test.dwarf) + 0

0x0000000100089380: _objc_msgSend$addPayload:withConfig:andDestinationID: (in test.dwarf) + 0

0x00000001000893a0: _objc_msgSend$addPreFilter: (in test.dwarf) + 0

0x00000001000893c0: _objc_msgSend$addSubview: (in test.dwarf) + 0

0x00000001000893e0: _objc_msgSend$addTimer:forMode: (in test.dwarf) + 0

0x0000000100089400: _objc_msgSend$address (in test.dwarf) + 0

0x0000000100089420: _objc_msgSend$alertControllerWithTitle:message:preferredStyle: (in test.dwarf) + 0

0x0000000100089440: _objc_msgSend$alertView (in test.dwarf) + 0

0x0000000100089460: _objc_msgSend$allCrashDescriptionKeys (in test.dwarf) + 0

0x0000000100089480: _objc_msgSend$allHeaderFields (in test.dwarf) + 0

0x00000001000894a0: _objc_msgSend$allKeys (in test.dwarf) + 0

0x00000001000894c0: _objc_msgSend$allObjects (in test.dwarf) + 0

0x00000001000894e0: _objc_msgSend$allReports (in test.dwarf) + 0

0x0000000100089500: _objc_msgSend$allocWithZone: (in test.dwarf) + 0

0x0000000100089520: _objc_msgSend$allowNotFound (in test.dwarf) + 0

0x0000000100089540: _objc_msgSend$appIdentifier (in test.dwarf) + 0

0x0000000100089560: _objc_msgSend$appStoreReceiptURL (in test.dwarf) + 0

0x0000000100089580: _objc_msgSend$appendBytes:length: (in test.dwarf) + 0

0x00000001000895a0: _objc_msgSend$appendData: (in test.dwarf) + 0

0x00000001000895c0: _objc_msgSend$appendData:name:contentType:filename: (in test.dwarf) + 0

0x00000001000895e0: _objc_msgSend$appendData:toFile: (in test.dwarf) + 0

0x0000000100089600: _objc_msgSend$appendFormat: (in test.dwarf) + 0

0x0000000100089620: _objc_msgSend$appendOriginatingCall:callName: (in test.dwarf) + 0

0x0000000100089640: _objc_msgSend$appendSafelyData:toFile: (in test.dwarf) + 0

0x0000000100089660: _objc_msgSend$appendString: (in test.dwarf) + 0

0x0000000100089680: _objc_msgSend$appendUTF8Format: (in test.dwarf) + 0

0x00000001000896a0: _objc_msgSend$appendUTF8String: (in test.dwarf) + 0

0x00000001000896c0: _objc_msgSend$argBlockWithFilters:andKeys: (in test.dwarf) + 0

0x00000001000896e0: _objc_msgSend$array (in test.dwarf) + 0

0x0000000100089700: _objc_msgSend$arrayWithArray: (in test.dwarf) + 0

0x0000000100089720: _objc_msgSend$arrayWithCapacity: (in test.dwarf) + 0

0x0000000100089740: _objc_msgSend$arrayWithObject: (in test.dwarf) + 0

0x0000000100089760: _objc_msgSend$arrayWithObjects: (in test.dwarf) + 0

0x0000000100089780: _objc_msgSend$arrayWithObjects:count: (in test.dwarf) + 0

0x00000001000897a0: _objc_msgSend$attemptMemoryStatsCollection (in test.dwarf) + 0

0x00000001000897c0: _objc_msgSend$attributesOfFileSystemForPath:error: (in test.dwarf) + 0

0x00000001000897e0: _objc_msgSend$awaitingResponse (in test.dwarf) + 0

0x0000000100089800: _objc_msgSend$backtraceFromThreadReport: (in test.dwarf) + 0

0x0000000100089820: _objc_msgSend$backtraceString:reportStyle:mainExecutableName: (in test.dwarf) + 0

0x0000000100089840: _objc_msgSend$basePath (in test.dwarf) + 0

0x0000000100089860: _objc_msgSend$basicRegistersFromThreadReport: (in test.dwarf) + 0

0x0000000100089880: _objc_msgSend$binaryImagesReport: (in test.dwarf) + 0

0x00000001000898a0: _objc_msgSend$binaryImagesStringForReport: (in test.dwarf) + 0

0x00000001000898c0: _objc_msgSend$blankForNil: (in test.dwarf) + 0

0x00000001000898e0: _objc_msgSend$body (in test.dwarf) + 0

0x0000000100089900: _objc_msgSend$boolValue (in test.dwarf) + 0

0x0000000100089920: _objc_msgSend$buildOSData (in test.dwarf) + 0

0x0000000100089940: _objc_msgSend$buildRollbarClient (in test.dwarf) + 0

0x0000000100089960: _objc_msgSend$buildRollbarNotifierModule (in test.dwarf) + 0

0x0000000100089980: _objc_msgSend$buildRollbarPayloadWithLevel:message:exception:error:extra:crashReport:context: (in test.dwarf) + 0

0x00000001000899a0: _objc_msgSend$buildRollbarPerson (in test.dwarf) + 0

0x00000001000899c0: _objc_msgSend$buildRollbarServer (in test.dwarf) + 0

0x00000001000899e0: _objc_msgSend$buildStackFrameFromBacktraceLine: (in test.dwarf) + 0

0x0000000100089a00: _objc_msgSend$buildTimeIntervalPredicateStartingAt:inclusively:endingAt:inclusively:forProperty: (in test.dwarf) + 0

0x0000000100089a20: _objc_msgSend$bundleForClass: (in test.dwarf) + 0

0x0000000100089a40: _objc_msgSend$bundleIdentifier (in test.dwarf) + 0

0x0000000100089a60: _objc_msgSend$bundleName (in test.dwarf) + 0

0x0000000100089a80: _objc_msgSend$bundlePath (in test.dwarf) + 0

0x0000000100089aa0: _objc_msgSend$bytes (in test.dwarf) + 0

0x0000000100089ac0: _objc_msgSend$cStringUsingEncoding: (in test.dwarf) + 0

0x0000000100089ae0: _objc_msgSend$calculateCollectionTimeInterval: (in test.dwarf) + 0

0x0000000100089b00: _objc_msgSend$callStackReturnAddresses (in test.dwarf) + 0

0x0000000100089b20: _objc_msgSend$callStackSymbols (in test.dwarf) + 0

0x0000000100089b40: _objc_msgSend$callbacks (in test.dwarf) + 0

0x0000000100089b60: _objc_msgSend$canPostWithConfig: (in test.dwarf) + 0

0x0000000100089b80: _objc_msgSend$canSendMail (in test.dwarf) + 0

0x0000000100089ba0: _objc_msgSend$cancel (in test.dwarf) + 0

0x0000000100089bc0: _objc_msgSend$captureConnectivity (in test.dwarf) + 0

0x0000000100089be0: _objc_msgSend$captureIp (in test.dwarf) + 0

0x0000000100089c00: _objc_msgSend$captureLog (in test.dwarf) + 0

0x0000000100089c20: _objc_msgSend$captureTelemetryDataForNetwork: (in test.dwarf) + 0

0x0000000100089c40: _objc_msgSend$caseInsensitiveCompare: (in test.dwarf) + 0

0x0000000100089c60: _objc_msgSend$cdataEscaped: (in test.dwarf) + 0

0x0000000100089c80: _objc_msgSend$characterAtIndex: (in test.dwarf) + 0

0x0000000100089ca0: _objc_msgSend$checkDbFile (in test.dwarf) + 0

0x0000000100089cc0: _objc_msgSend$checkIfTableExists: (in test.dwarf) + 0

0x0000000100089ce0: _objc_msgSend$checkIgnoreRollbarData (in test.dwarf) + 0

0x0000000100089d00: _objc_msgSend$checkPayloadResponse:error: (in test.dwarf) + 0

0x0000000100089d20: _objc_msgSend$checkProcessStalePayload: (in test.dwarf) + 0

0x0000000100089d40: _objc_msgSend$class (in test.dwarf) + 0

0x0000000100089d60: _objc_msgSend$classDidBecomeLoaded (in test.dwarf) + 0

0x0000000100089d80: _objc_msgSend$className (in test.dwarf) + 0

0x0000000100089da0: _objc_msgSend$classNamed: (in test.dwarf) + 0

0x0000000100089dc0: _objc_msgSend$clearAllData (in test.dwarf) + 0

0x0000000100089de0: _objc_msgSend$clearDestinations (in test.dwarf) + 0

0x0000000100089e00: _objc_msgSend$clearError: (in test.dwarf) + 0

0x0000000100089e20: _objc_msgSend$clearPayloads (in test.dwarf) + 0

0x0000000100089e40: _objc_msgSend$closeAndReturnError: (in test.dwarf) + 0

0x0000000100089e60: _objc_msgSend$closeFile (in test.dwarf) + 0

0x0000000100089e80: _objc_msgSend$code (in test.dwarf) + 0

0x0000000100089ea0: _objc_msgSend$codecWithEncodeOptions:decodeOptions: (in test.dwarf) + 0

0x0000000100089ec0: _objc_msgSend$collectMemoryStats (in test.dwarf) + 0

0x0000000100089ee0: _objc_msgSend$collector (in test.dwarf) + 0

0x0000000100089f00: _objc_msgSend$compare: (in test.dwarf) + 0

0x0000000100089f20: _objc_msgSend$componentsJoinedByString: (in test.dwarf) + 0

0x0000000100089f40: _objc_msgSend$componentsSeparatedByCharactersInSet: (in test.dwarf) + 0

0x0000000100089f60: _objc_msgSend$componentsSeparatedByString: (in test.dwarf) + 0

0x0000000100089f80: _objc_msgSend$compressionLevel (in test.dwarf) + 0

0x0000000100089fa0: _objc_msgSend$config (in test.dwarf) + 0

0x0000000100089fc0: _objc_msgSend$configuration (in test.dwarf) + 0

0x0000000100089fe0: _objc_msgSend$configureWith: (in test.dwarf) + 0

0x000000010008a000: _objc_msgSend$configureWithOptions: (in test.dwarf) + 0

0x000000010008a020: _objc_msgSend$conformsToProtocol: (in test.dwarf) + 0

0x000000010008a040: _objc_msgSend$connectionRequired (in test.dwarf) + 0

0x000000010008a060: _objc_msgSend$contactEmailKey (in test.dwarf) + 0

0x000000010008a080: _objc_msgSend$contentType (in test.dwarf) + 0

0x000000010008a0a0: _objc_msgSend$convertToHumanFriendlyFormat: (in test.dwarf) + 0

0x000000010008a0c0: _objc_msgSend$convertToMBs: (in test.dwarf) + 0

0x000000010008a0e0: _objc_msgSend$copy (in test.dwarf) + 0

0x000000010008a100: _objc_msgSend$copyWithZone: (in test.dwarf) + 0

0x000000010008a120: _objc_msgSend$count (in test.dwarf) + 0

0x000000010008a140: _objc_msgSend$countByEnumeratingWithState:objects:count: (in test.dwarf) + 0

0x000000010008a160: _objc_msgSend$cpuArchForReport: (in test.dwarf) + 0

0x000000010008a180: _objc_msgSend$cpuFamily: (in test.dwarf) + 0

0x000000010008a1a0: _objc_msgSend$crashDescriptionKey (in test.dwarf) + 0

0x000000010008a1c0: _objc_msgSend$crashDescriptionKeys (in test.dwarf) + 0

0x000000010008a1e0: _objc_msgSend$crashHandlerData (in test.dwarf) + 0

0x000000010008a200: _objc_msgSend$crashHandlerDataBacking (in test.dwarf) + 0

0x000000010008a220: _objc_msgSend$crashLevel (in test.dwarf) + 0

0x000000010008a240: _objc_msgSend$crashReport: (in test.dwarf) + 0

0x000000010008a260: _objc_msgSend$crashReportString: (in test.dwarf) + 0

0x000000010008a280: _objc_msgSend$crashedThread: (in test.dwarf) + 0

0x000000010008a2a0: _objc_msgSend$crashedThreadCPUStateStringForReport:cpuArch: (in test.dwarf) + 0

0x000000010008a2c0: _objc_msgSend$crashedThreadReport: (in test.dwarf) + 0

0x000000010008a2e0: _objc_msgSend$createDirectoryAtPath:withIntermediateDirectories:attributes:error: (in test.dwarf) + 0

0x000000010008a300: _objc_msgSend$createFileAtPath:contents:attributes: (in test.dwarf) + 0

0x000000010008a320: _objc_msgSend$createMutableDataWithData:forPath: (in test.dwarf) + 0

0x000000010008a340: _objc_msgSend$createRollbarConfigFromFile:error: (in test.dwarf) + 0

0x000000010008a360: _objc_msgSend$createTelemetryBodyWithType:data: (in test.dwarf) + 0

0x000000010008a380: _objc_msgSend$currentDevice (in test.dwarf) + 0

0x000000010008a3a0: _objc_msgSend$currentHandler (in test.dwarf) + 0

0x000000010008a3c0: _objc_msgSend$currentReachabilityStatus (in test.dwarf) + 0

0x000000010008a3e0: _objc_msgSend$currentRunLoop (in test.dwarf) + 0

0x000000010008a400: _objc_msgSend$customData (in test.dwarf) + 0

0x000000010008a420: _objc_msgSend$data (in test.dwarf) + 0

0x000000010008a440: _objc_msgSend$data:name:contentType:filename: (in test.dwarf) + 0

0x000000010008a460: _objc_msgSend$dataScrubber (in test.dwarf) + 0

0x000000010008a480: _objc_msgSend$dataTaskWithRequest:completionHandler: (in test.dwarf) + 0

0x000000010008a4a0: _objc_msgSend$dataUsingEncoding: (in test.dwarf) + 0

0x000000010008a4c0: _objc_msgSend$dataWithBytes:length: (in test.dwarf) + 0

0x000000010008a4e0: _objc_msgSend$dataWithBytesNoCopy:length:freeWhenDone: (in test.dwarf) + 0

0x000000010008a500: _objc_msgSend$dataWithCapacity: (in test.dwarf) + 0

0x000000010008a520: _objc_msgSend$dataWithContentsOfFile: (in test.dwarf) + 0

0x000000010008a540: _objc_msgSend$dataWithContentsOfFile:options:error: (in test.dwarf) + 0

0x000000010008a560: _objc_msgSend$dataWithData: (in test.dwarf) + 0

0x000000010008a580: _objc_msgSend$dataWithJSONObject:options:error: (in test.dwarf) + 0

0x000000010008a5a0: _objc_msgSend$dataWithLength: (in test.dwarf) + 0

0x000000010008a5c0: _objc_msgSend$date (in test.dwarf) + 0

0x000000010008a5e0: _objc_msgSend$dateByAddingTimeInterval: (in test.dwarf) + 0

0x000000010008a600: _objc_msgSend$dateFromString: (in test.dwarf) + 0

0x000000010008a620: _objc_msgSend$dateWithTimeIntervalSinceNow: (in test.dwarf) + 0

0x000000010008a640: _objc_msgSend$decode:options:error: (in test.dwarf) + 0

0x000000010008a660: _objc_msgSend$decodeOptions (in test.dwarf) + 0

0x000000010008a680: _objc_msgSend$defaultCStringEncoding (in test.dwarf) + 0

0x000000010008a6a0: _objc_msgSend$defaultCenter (in test.dwarf) + 0

0x000000010008a6c0: _objc_msgSend$defaultCrashReportFilterSet (in test.dwarf) + 0

0x000000010008a6e0: _objc_msgSend$defaultCrashReportFilterSetAppleFmt (in test.dwarf) + 0

0x000000010008a700: _objc_msgSend$defaultFilenameFormats (in test.dwarf) + 0

0x000000010008a720: _objc_msgSend$defaultManager (in test.dwarf) + 0

0x000000010008a740: _objc_msgSend$delegate (in test.dwarf) + 0

0x000000010008a760: _objc_msgSend$deleteBehaviorAfterSendAll (in test.dwarf) + 0

0x000000010008a780: _objc_msgSend$deleteCharactersInRange: (in test.dwarf) + 0

0x000000010008a7a0: _objc_msgSend$deleteFile:error: (in test.dwarf) + 0

0x000000010008a7c0: _objc_msgSend$deriveTypeFromBody: (in test.dwarf) + 0

0x000000010008a7e0: _objc_msgSend$description (in test.dwarf) + 0

0x000000010008a800: _objc_msgSend$descriptionForObjCCall (in test.dwarf) + 0

0x000000010008a820: _objc_msgSend$descriptionForReport:keys: (in test.dwarf) + 0

0x000000010008a840: _objc_msgSend$descriptionWithParamCount: (in test.dwarf) + 0

0x000000010008a860: _objc_msgSend$deserializeFromJSONData: (in test.dwarf) + 0

0x000000010008a880: _objc_msgSend$deserializeFromJSONString: (in test.dwarf) + 0

0x000000010008a8a0: _objc_msgSend$destination (in test.dwarf) + 0

0x000000010008a8c0: _objc_msgSend$destinationID: (in test.dwarf) + 0

0x000000010008a8e0: _objc_msgSend$destinationIDwithEndpoint:andAccessToken: (in test.dwarf) + 0

0x000000010008a900: _objc_msgSend$developerOptions (in test.dwarf) + 0

0x000000010008a920: _objc_msgSend$diagnoseCrash: (in test.dwarf) + 0

0x000000010008a940: _objc_msgSend$dictionary (in test.dwarf) + 0

0x000000010008a960: _objc_msgSend$dictionaryWithCapacity: (in test.dwarf) + 0

0x000000010008a980: _objc_msgSend$dictionaryWithDictionary: (in test.dwarf) + 0

0x000000010008a9a0: _objc_msgSend$dictionaryWithObject:forKey: (in test.dwarf) + 0

0x000000010008a9c0: _objc_msgSend$dictionaryWithObjects:forKeys:count: (in test.dwarf) + 0

0x000000010008a9e0: _objc_msgSend$dictionaryWithObjectsAndKeys: (in test.dwarf) + 0

0x000000010008aa00: _objc_msgSend$didChangeValueForKey: (in test.dwarf) + 0

0x000000010008aa20: _objc_msgSend$directory (in test.dwarf) + 0

0x000000010008aa40: _objc_msgSend$directory: (in test.dwarf) + 0

0x000000010008aa60: _objc_msgSend$dismissModalVC (in test.dwarf) + 0

0x000000010008aa80: _objc_msgSend$dismissModalViewControllerAnimated: (in test.dwarf) + 0

0x000000010008aaa0: _objc_msgSend$dismissViewControllerAnimated:completion: (in test.dwarf) + 0

0x000000010008aac0: _objc_msgSend$dispatchInput: (in test.dwarf) + 0

0x000000010008aae0: _objc_msgSend$dispatchTask:input: (in test.dwarf) + 0

0x000000010008ab00: _objc_msgSend$distantFuture (in test.dwarf) + 0

0x000000010008ab20: _objc_msgSend$doctor (in test.dwarf) + 0

0x000000010008ab40: _objc_msgSend$doctorReport: (in test.dwarf) + 0

0x000000010008ab60: _objc_msgSend$domain (in test.dwarf) + 0

0x000000010008ab80: _objc_msgSend$doubleValue (in test.dwarf) + 0

0x000000010008aba0: _objc_msgSend$droppedPayloadsLog (in test.dwarf) + 0

0x000000010008abc0: _objc_msgSend$droppedPayloadsLogFile (in test.dwarf) + 0

0x000000010008abe0: _objc_msgSend$dummyVC (in test.dwarf) + 0

0x000000010008ac00: _objc_msgSend$element (in test.dwarf) + 0

0x000000010008ac20: _objc_msgSend$enabled (in test.dwarf) + 0

0x000000010008ac40: _objc_msgSend$encode:options:error: (in test.dwarf) + 0

0x000000010008ac60: _objc_msgSend$encodeOptions (in test.dwarf) + 0

0x000000010008ac80: _objc_msgSend$endpoint (in test.dwarf) + 0

0x000000010008aca0: _objc_msgSend$ensureCachesDirectoryExists (in test.dwarf) + 0

0x000000010008acc0: _objc_msgSend$ensureDestinationsTable (in test.dwarf) + 0

0x000000010008ace0: _objc_msgSend$ensureFileExists: (in test.dwarf) + 0

0x000000010008ad00: _objc_msgSend$ensurePayloadsTable (in test.dwarf) + 0

0x000000010008ad20: _objc_msgSend$enumerateKeysAndObjectsUsingBlock: (in test.dwarf) + 0

0x000000010008ad40: _objc_msgSend$enumerateLinesUsingBlock: (in test.dwarf) + 0

0x000000010008ad60: _objc_msgSend$enumerateObjectsUsingBlock: (in test.dwarf) + 0

0x000000010008ad80: _objc_msgSend$environment (in test.dwarf) + 0

0x000000010008ada0: _objc_msgSend$ephemeralSessionConfiguration (in test.dwarf) + 0

0x000000010008adc0: _objc_msgSend$error (in test.dwarf) + 0

0x000000010008ade0: _objc_msgSend$errorInfoStringForReport: (in test.dwarf) + 0

0x000000010008ae00: _objc_msgSend$errorReport: (in test.dwarf) + 0

0x000000010008ae20: _objc_msgSend$errorWithDomain:code:description: (in test.dwarf) + 0

0x000000010008ae40: _objc_msgSend$errorWithDomain:code:userInfo: (in test.dwarf) + 0

0x000000010008ae60: _objc_msgSend$exceptionWithName:reason:userInfo: (in test.dwarf) + 0

0x000000010008ae80: _objc_msgSend$executeSql: (in test.dwarf) + 0

0x000000010008aea0: _objc_msgSend$exit (in test.dwarf) + 0

0x000000010008aec0: _objc_msgSend$expectedButtonIndex (in test.dwarf) + 0

0x000000010008aee0: _objc_msgSend$extraDescriptionKeys (in test.dwarf) + 0

0x000000010008af00: _objc_msgSend$extraInfoStringForReport:mainExecutableName: (in test.dwarf) + 0

0x000000010008af20: _objc_msgSend$extractComponentsFromBacktrace: (in test.dwarf) + 0

0x000000010008af40: _objc_msgSend$extractExceptionInfoFromCrashReport: (in test.dwarf) + 0

0x000000010008af60: _objc_msgSend$extractHostName: (in test.dwarf) + 0

0x000000010008af80: _objc_msgSend$extractLinesFromCrashReport: (in test.dwarf) + 0

0x000000010008afa0: _objc_msgSend$factoryWithConfig: (in test.dwarf) + 0

0x000000010008afc0: _objc_msgSend$field (in test.dwarf) + 0

0x000000010008afe0: _objc_msgSend$fieldBacking (in test.dwarf) + 0

0x000000010008b000: _objc_msgSend$fieldWithIndex: (in test.dwarf) + 0

0x000000010008b020: _objc_msgSend$fields (in test.dwarf) + 0

0x000000010008b040: _objc_msgSend$fileExistsAtPath: (in test.dwarf) + 0

0x000000010008b060: _objc_msgSend$fileHandleForReadingAtPath: (in test.dwarf) + 0

0x000000010008b080: _objc_msgSend$fileHandleForWritingAtPath: (in test.dwarf) + 0

0x000000010008b0a0: _objc_msgSend$filename (in test.dwarf) + 0

0x000000010008b0c0: _objc_msgSend$filenameFmt (in test.dwarf) + 0

0x000000010008b0e0: _objc_msgSend$fillError:withDomain:code:description: (in test.dwarf) + 0

0x000000010008b100: _objc_msgSend$filter (in test.dwarf) + 0

0x000000010008b120: _objc_msgSend$filterReports:bodyName:bodyContentType:bodyFilename:onCompletion: (in test.dwarf) + 0

0x000000010008b140: _objc_msgSend$filterReports:onCompletion: (in test.dwarf) + 0

0x000000010008b160: _objc_msgSend$filterWithCompressionLevel: (in test.dwarf) + 0

0x000000010008b180: _objc_msgSend$filterWithFilters: (in test.dwarf) + 0

0x000000010008b1a0: _objc_msgSend$filterWithFiltersAndKeys: (in test.dwarf) + 0

0x000000010008b1c0: _objc_msgSend$filterWithKeys: (in test.dwarf) + 0

0x000000010008b1e0: _objc_msgSend$filterWithOptions: (in test.dwarf) + 0

0x000000010008b200: _objc_msgSend$filterWithReportStyle: (in test.dwarf) + 0

0x000000010008b220: _objc_msgSend$filterWithSeparatorFmt:keys: (in test.dwarf) + 0

0x000000010008b240: _objc_msgSend$filterWithTitle:message:yesAnswer:noAnswer: (in test.dwarf) + 0

0x000000010008b260: _objc_msgSend$filters (in test.dwarf) + 0

0x000000010008b280: _objc_msgSend$findData:inData: (in test.dwarf) + 0

0x000000010008b2a0: _objc_msgSend$firstObject (in test.dwarf) + 0

0x000000010008b2c0: _objc_msgSend$framework (in test.dwarf) + 0

0x000000010008b2e0: _objc_msgSend$getAllData (in test.dwarf) + 0

0x000000010008b300: _objc_msgSend$getDataByKey: (in test.dwarf) + 0

0x000000010008b320: _objc_msgSend$getDefinedProperties (in test.dwarf) + 0

0x000000010008b340: _objc_msgSend$getDestinationByID: (in test.dwarf) + 0

0x000000010008b360: _objc_msgSend$getIDofDestinationWithEndpoint:andAccesToken: (in test.dwarf) + 0

0x000000010008b380: _objc_msgSend$getJsonFriendlyDataFromFrames: (in test.dwarf) + 0

0x000000010008b3a0: _objc_msgSend$getJsonFriendlyDataFromTelemetry: (in test.dwarf) + 0

0x000000010008b3c0: _objc_msgSend$getJsonFriendlyDataFromTraceChain: (in test.dwarf) + 0

0x000000010008b3e0: _objc_msgSend$getMemoryStats (in test.dwarf) + 0

0x000000010008b400: _objc_msgSend$getMemoryStatsTypeDescriptor: (in test.dwarf) + 0

0x000000010008b420: _objc_msgSend$getPayloadCount (in test.dwarf) + 0

0x000000010008b440: _objc_msgSend$getPayloadsWithDestinationID:andOffset:andLimit: (in test.dwarf) + 0

0x000000010008b460: _objc_msgSend$getPayloadsWithOffset:andLimit: (in test.dwarf) + 0

0x000000010008b480: _objc_msgSend$getPhysicalMemoryDescriptor: (in test.dwarf) + 0

0x000000010008b4a0: _objc_msgSend$getPhysicalMemoryInBytes (in test.dwarf) + 0

0x000000010008b4c0: _objc_msgSend$getPhysicalMemoryInMBs (in test.dwarf) + 0

0x000000010008b4e0: _objc_msgSend$getPhysicalMemoryStats (in test.dwarf) + 0

0x000000010008b500: _objc_msgSend$getRecordForConfig: (in test.dwarf) + 0

0x000000010008b520: _objc_msgSend$getRecordForEndpoint:andAccessToken: (in test.dwarf) + 0

0x000000010008b540: _objc_msgSend$getScrubFields: (in test.dwarf) + 0

0x000000010008b560: _objc_msgSend$getUUIDBytes: (in test.dwarf) + 0

0x000000010008b580: _objc_msgSend$getVirtualMemoryDescriptor: (in test.dwarf) + 0

0x000000010008b5a0: _objc_msgSend$getVirtualMemoryStats (in test.dwarf) + 0

0x000000010008b5c0: _objc_msgSend$greenReply (in test.dwarf) + 0

0x000000010008b5e0: _objc_msgSend$gunzippedWithError: (in test.dwarf) + 0

0x000000010008b600: _objc_msgSend$gzippedWithCompressionLevel:error: (in test.dwarf) + 0

0x000000010008b620: _objc_msgSend$handleDeadlock (in test.dwarf) + 0

0x000000010008b640: _objc_msgSend$handleFailureInMethod:object:file:lineNumber:description: (in test.dwarf) + 0

0x000000010008b660: _objc_msgSend$handleResponse:data:error:onSuccess:onFailure:onError: (in test.dwarf) + 0

0x000000010008b680: _objc_msgSend$hasPrefix: (in test.dwarf) + 0

0x000000010008b6a0: _objc_msgSend$hasSameDefinedPropertiesAs: (in test.dwarf) + 0

0x000000010008b6c0: _objc_msgSend$hasSuffix: (in test.dwarf) + 0

0x000000010008b6e0: _objc_msgSend$headerStringForReport: (in test.dwarf) + 0

0x000000010008b700: _objc_msgSend$headerStringForSystemInfo:reportID:crashTime: (in test.dwarf) + 0

0x000000010008b720: _objc_msgSend$helpAnchor (in test.dwarf) + 0

0x000000010008b740: _objc_msgSend$host (in test.dwarf) + 0

0x000000010008b760: _objc_msgSend$httpProxy (in test.dwarf) + 0

0x000000010008b780: _objc_msgSend$httpsProxy (in test.dwarf) + 0

0x000000010008b7a0: _objc_msgSend$identifierForVendor (in test.dwarf) + 0

0x000000010008b7c0: _objc_msgSend$incomingPayloadsLog (in test.dwarf) + 0

0x000000010008b7e0: _objc_msgSend$incomingPayloadsLogFile (in test.dwarf) + 0

0x000000010008b800: _objc_msgSend$index (in test.dwarf) + 0

0x000000010008b820: _objc_msgSend$infoDictionary (in test.dwarf) + 0

0x000000010008b840: _objc_msgSend$infoReport: (in test.dwarf) + 0

0x000000010008b860: _objc_msgSend$init (in test.dwarf) + 0

0x000000010008b880: _objc_msgSend$initDB: (in test.dwarf) + 0

0x000000010008b8a0: _objc_msgSend$initInMemoryOnly (in test.dwarf) + 0

0x000000010008b8c0: _objc_msgSend$initWithAccessToken: (in test.dwarf) + 0

0x000000010008b8e0: _objc_msgSend$initWithAccessToken:andEnvironment: (in test.dwarf) + 0

0x000000010008b900: _objc_msgSend$initWithAccessToken:data: (in test.dwarf) + 0

0x000000010008b920: _objc_msgSend$initWithAccessToken:environment: (in test.dwarf) + 0

0x000000010008b940: _objc_msgSend$initWithAddress: (in test.dwarf) + 0

0x000000010008b960: _objc_msgSend$initWithAppIdentifier:userIDKey:userNameKey:contactEmailKey:crashDescriptionKeys: (in test.dwarf) + 0

0x000000010008b980: _objc_msgSend$initWithArray: (in test.dwarf) + 0

0x000000010008b9a0: _objc_msgSend$initWithBasePath: (in test.dwarf) + 0

0x000000010008b9c0: _objc_msgSend$initWithBody: (in test.dwarf) + 0

0x000000010008b9e0: _objc_msgSend$initWithBool: (in test.dwarf) + 0

0x000000010008ba00: _objc_msgSend$initWithBuilder: (in test.dwarf) + 0

0x000000010008ba20: _objc_msgSend$initWithCString: (in test.dwarf) + 0

0x000000010008ba40: _objc_msgSend$initWithCapacity: (in test.dwarf) + 0

0x000000010008ba60: _objc_msgSend$initWithCompressionLevel: (in test.dwarf) + 0

0x000000010008ba80: _objc_msgSend$initWithConfig: (in test.dwarf) + 0

0x000000010008baa0: _objc_msgSend$initWithConfiguration: (in test.dwarf) + 0

0x000000010008bac0: _objc_msgSend$initWithCpu:serverConfig: (in test.dwarf) + 0

0x000000010008bae0: _objc_msgSend$initWithCrashReport: (in test.dwarf) + 0

0x000000010008bb00: _objc_msgSend$initWithData: (in test.dwarf) + 0

0x000000010008bb20: _objc_msgSend$initWithData:encoding: (in test.dwarf) + 0

0x000000010008bb40: _objc_msgSend$initWithData:length: (in test.dwarf) + 0

0x000000010008bb60: _objc_msgSend$initWithData:name:contentType:filename: (in test.dwarf) + 0

0x000000010008bb80: _objc_msgSend$initWithDestinationID:andRegistry: (in test.dwarf) + 0

0x000000010008bba0: _objc_msgSend$initWithDictionary: (in test.dwarf) + 0

0x000000010008bbc0: _objc_msgSend$initWithElement:extraData: (in test.dwarf) + 0

0x000000010008bbe0: _objc_msgSend$initWithEnabled: (in test.dwarf) + 0

0x000000010008bc00: _objc_msgSend$initWithEnabled:captureLog:captureConnectivity:viewInputsScrubber: (in test.dwarf) + 0

0x000000010008bc20: _objc_msgSend$initWithEnabled:scrubFields:safeListFields: (in test.dwarf) + 0

0x000000010008bc40: _objc_msgSend$initWithEnabled:transmit:logIncomingPayloads:logTransmittedPayloads:logDroppedPayloads: (in test.dwarf) + 0

0x000000010008bc60: _objc_msgSend$initWithEnabled:transmit:logIncomingPayloads:logTransmittedPayloads:logDroppedPayloads:incomingPayloadsLogFile:transmittedPayloadsLogFile:droppedPayloadsLogFile: (in test.dwarf) + 0

0x000000010008bc80: _objc_msgSend$initWithEncodeOptions:decodeOptions: (in test.dwarf) + 0

0x000000010008bca0: _objc_msgSend$initWithEndpoint:accessToken:environment: (in test.dwarf) + 0

0x000000010008bcc0: _objc_msgSend$initWithEnvironment:body: (in test.dwarf) + 0

0x000000010008bce0: _objc_msgSend$initWithError: (in test.dwarf) + 0

0x000000010008bd00: _objc_msgSend$initWithException: (in test.dwarf) + 0

0x000000010008bd20: _objc_msgSend$initWithExceptionClass:exceptionMessage:exceptionDescription: (in test.dwarf) + 0

0x000000010008bd40: _objc_msgSend$initWithFileName: (in test.dwarf) + 0

0x000000010008bd60: _objc_msgSend$initWithFilePath:andOffset: (in test.dwarf) + 0

0x000000010008bd80: _objc_msgSend$initWithFilters:keys: (in test.dwarf) + 0

0x000000010008bda0: _objc_msgSend$initWithFiltersArray: (in test.dwarf) + 0

0x000000010008bdc0: _objc_msgSend$initWithFormat: (in test.dwarf) + 0

0x000000010008bde0: _objc_msgSend$initWithFormat:arguments: (in test.dwarf) + 0

0x000000010008be00: _objc_msgSend$initWithFromLocation:toLocation:extraData: (in test.dwarf) + 0

0x000000010008be20: _objc_msgSend$initWithHost: (in test.dwarf) + 0

0x000000010008be40: _objc_msgSend$initWithHost:allowWWAN:block: (in test.dwarf) + 0

0x000000010008be60: _objc_msgSend$initWithHost:root:branch:codeVersion: (in test.dwarf) + 0

0x000000010008be80: _objc_msgSend$initWithID:username:email: (in test.dwarf) + 0

0x000000010008bea0: _objc_msgSend$initWithIndex: (in test.dwarf) + 0

0x000000010008bec0: _objc_msgSend$initWithJSONData: (in test.dwarf) + 0

0x000000010008bee0: _objc_msgSend$initWithJSONString: (in test.dwarf) + 0

0x000000010008bf00: _objc_msgSend$initWithKey:allowNotFound: (in test.dwarf) + 0

0x000000010008bf20: _objc_msgSend$initWithKeysArray: (in test.dwarf) + 0

0x000000010008bf40: _objc_msgSend$initWithLevel:source:body: (in test.dwarf) + 0

0x000000010008bf60: _objc_msgSend$initWithLogLevel:crashLevel: (in test.dwarf) + 0

0x000000010008bf80: _objc_msgSend$initWithLogLevel:crashLevel:maximumReportsPerMinute:rateLimitBehavior: (in test.dwarf) + 0

0x000000010008bfa0: _objc_msgSend$initWithLogLevel:crashLevel:maximumReportsPerMinute:rateLimitBehavior:captureIp:codeVersion:framework:requestId: (in test.dwarf) + 0

0x000000010008bfc0: _objc_msgSend$initWithMessage: (in test.dwarf) + 0

0x000000010008bfe0: _objc_msgSend$initWithMessage:extraData: (in test.dwarf) + 0

0x000000010008c000: _objc_msgSend$initWithMethod:url:statusCode:extraData: (in test.dwarf) + 0

0x000000010008c020: _objc_msgSend$initWithNSError: (in test.dwarf) + 0

0x000000010008c040: _objc_msgSend$initWithName:version: (in test.dwarf) + 0

0x000000010008c060: _objc_msgSend$initWithNibName:bundle: (in test.dwarf) + 0

0x000000010008c080: _objc_msgSend$initWithObjectsAndKeys: (in test.dwarf) + 0

0x000000010008c0a0: _objc_msgSend$initWithOptions: (in test.dwarf) + 0

0x000000010008c0c0: _objc_msgSend$initWithRawCrashReport: (in test.dwarf) + 0

0x000000010008c0e0: _objc_msgSend$initWithReachabilityRef: (in test.dwarf) + 0

0x000000010008c100: _objc_msgSend$initWithRecipients:subject:message:filenameFmt: (in test.dwarf) + 0

0x000000010008c120: _objc_msgSend$initWithReportStyle: (in test.dwarf) + 0

0x000000010008c140: _objc_msgSend$initWithRollbarException:rollbarCallStackFrames: (in test.dwarf) + 0

0x000000010008c160: _objc_msgSend$initWithScrubFields: (in test.dwarf) + 0

0x000000010008c180: _objc_msgSend$initWithScrubFields:safeListFields: (in test.dwarf) + 0

0x000000010008c1a0: _objc_msgSend$initWithSeparatorFmt:keysArray: (in test.dwarf) + 0

0x000000010008c1c0: _objc_msgSend$initWithStatus:extraData: (in test.dwarf) + 0

0x000000010008c1e0: _objc_msgSend$initWithStatusCode:rateLimit:remainingCount:remainingSeconds: (in test.dwarf) + 0

0x000000010008c200: _objc_msgSend$initWithStore: (in test.dwarf) + 0

0x000000010008c220: _objc_msgSend$initWithString: (in test.dwarf) + 0

0x000000010008c240: _objc_msgSend$initWithTarget:selector:object: (in test.dwarf) + 0

0x000000010008c260: _objc_msgSend$initWithTimeIntervalSinceNow: (in test.dwarf) + 0

0x000000010008c280: _objc_msgSend$initWithTitle:message:yesAnswer:noAnswer: (in test.dwarf) + 0

0x000000010008c2a0: _objc_msgSend$initWithURL: (in test.dwarf) + 0

0x000000010008c2c0: _objc_msgSend$initWithURL:userIDKey:userNameKey:contactEmailKey:crashDescriptionKeys: (in test.dwarf) + 0

0x000000010008c2e0: _objc_msgSend$initWithURL:userName:userEmail: (in test.dwarf) + 0

0x000000010008c300: _objc_msgSend$initWithUUIDString: (in test.dwarf) + 0

0x000000010008c320: _objc_msgSend$insertObject:atIndex: (in test.dwarf) + 0

0x000000010008c340: _objc_msgSend$install (in test.dwarf) + 0

0x000000010008c360: _objc_msgSend$intValue (in test.dwarf) + 0

0x000000010008c380: _objc_msgSend$integerValue (in test.dwarf) + 0

0x000000010008c3a0: _objc_msgSend$invalidate (in test.dwarf) + 0

0x000000010008c3c0: _objc_msgSend$isCancelled (in test.dwarf) + 0

0x000000010008c3e0: _objc_msgSend$isDeadlock: (in test.dwarf) + 0

0x000000010008c400: _objc_msgSend$isEmpty (in test.dwarf) + 0

0x000000010008c420: _objc_msgSend$isEqual: (in test.dwarf) + 0

0x000000010008c440: _objc_msgSend$isEqualToArray: (in test.dwarf) + 0

0x000000010008c460: _objc_msgSend$isEqualToNumber: (in test.dwarf) + 0

0x000000010008c480: _objc_msgSend$isEqualToString: (in test.dwarf) + 0

0x000000010008c4a0: _objc_msgSend$isExecuting (in test.dwarf) + 0

0x000000010008c4c0: _objc_msgSend$isInstance (in test.dwarf) + 0

0x000000010008c4e0: _objc_msgSend$isInvalidAddress: (in test.dwarf) + 0

0x000000010008c500: _objc_msgSend$isKindOfClass: (in test.dwarf) + 0

0x000000010008c520: _objc_msgSend$isMathError: (in test.dwarf) + 0

0x000000010008c540: _objc_msgSend$isMemoryCorruption: (in test.dwarf) + 0

0x000000010008c560: _objc_msgSend$isMutable: (in test.dwarf) + 0

0x000000010008c580: _objc_msgSend$isReachable (in test.dwarf) + 0

0x000000010008c5a0: _objc_msgSend$isReachableViaWiFi (in test.dwarf) + 0

0x000000010008c5c0: _objc_msgSend$isReachableWithFlags: (in test.dwarf) + 0

0x000000010008c5e0: _objc_msgSend$isStackOverflow: (in test.dwarf) + 0

0x000000010008c600: _objc_msgSend$isTransferableDataValue: (in test.dwarf) + 0

0x000000010008c620: _objc_msgSend$isTransferableObject: (in test.dwarf) + 0

0x000000010008c640: _objc_msgSend$isTruncationNeeded:forLimit: (in test.dwarf) + 0

0x000000010008c660: _objc_msgSend$isValid (in test.dwarf) + 0

0x000000010008c680: _objc_msgSend$isValidJSONObject: (in test.dwarf) + 0

0x000000010008c6a0: _objc_msgSend$isZombieNSException: (in test.dwarf) + 0

0x000000010008c6c0: _objc_msgSend$itereateObjectStructure:whileTuncatingStrings: (in test.dwarf) + 0

0x000000010008c6e0: _objc_msgSend$jsonFriendlyData (in test.dwarf) + 0

0x000000010008c700: _objc_msgSend$key (in test.dwarf) + 0

0x000000010008c720: _objc_msgSend$keyBacking (in test.dwarf) + 0

0x000000010008c740: _objc_msgSend$keyPaths (in test.dwarf) + 0

0x000000010008c760: _objc_msgSend$keyWindow (in test.dwarf) + 0

0x000000010008c780: _objc_msgSend$keys (in test.dwarf) + 0

0x000000010008c7a0: _objc_msgSend$lastFunctionCall: (in test.dwarf) + 0

0x000000010008c7c0: _objc_msgSend$lastInAppStackEntry: (in test.dwarf) + 0

0x000000010008c7e0: _objc_msgSend$lastPathComponent (in test.dwarf) + 0

0x000000010008c800: _objc_msgSend$lastStackEntry: (in test.dwarf) + 0

0x000000010008c820: _objc_msgSend$length (in test.dwarf) + 0

0x000000010008c840: _objc_msgSend$lengthOfBytesUsingEncoding: (in test.dwarf) + 0

0x000000010008c860: _objc_msgSend$limitRawCrashReportInPayload: (in test.dwarf) + 0

0x000000010008c880: _objc_msgSend$lineRangeForRange: (in test.dwarf) + 0

0x000000010008c8a0: _objc_msgSend$loadCrashReportJSONWithID: (in test.dwarf) + 0

0x000000010008c8c0: _objc_msgSend$loadTelemetryData (in test.dwarf) + 0

0x000000010008c8e0: _objc_msgSend$localTimeZone (in test.dwarf) + 0

0x000000010008c900: _objc_msgSend$localWindowLimit (in test.dwarf) + 0

0x000000010008c920: _objc_msgSend$localeWithLocaleIdentifier: (in test.dwarf) + 0

0x000000010008c940: _objc_msgSend$localizedDescription (in test.dwarf) + 0

0x000000010008c960: _objc_msgSend$localizedStringForKey:value:table: (in test.dwarf) + 0

0x000000010008c980: _objc_msgSend$log:error:data:context: (in test.dwarf) + 0

0x000000010008c9a0: _objc_msgSend$log:exception:data:context: (in test.dwarf) + 0

0x000000010008c9c0: _objc_msgSend$log:message:data:context: (in test.dwarf) + 0

0x000000010008c9e0: _objc_msgSend$logCrashReport: (in test.dwarf) + 0

0x000000010008ca00: _objc_msgSend$logDroppedPayloads (in test.dwarf) + 0

0x000000010008ca20: _objc_msgSend$logIncomingPayloads (in test.dwarf) + 0

0x000000010008ca40: _objc_msgSend$logLevel (in test.dwarf) + 0

0x000000010008ca60: _objc_msgSend$logTransmittedPayloads (in test.dwarf) + 0

0x000000010008ca80: _objc_msgSend$loggableStringFromPayload:result: (in test.dwarf) + 0

0x000000010008caa0: _objc_msgSend$logger (in test.dwarf) + 0

0x000000010008cac0: _objc_msgSend$loggerWithConfiguration: (in test.dwarf) + 0

0x000000010008cae0: _objc_msgSend$loggingOptions (in test.dwarf) + 0

0x000000010008cb00: _objc_msgSend$longLongValue (in test.dwarf) + 0

0x000000010008cb20: _objc_msgSend$longValue (in test.dwarf) + 0

0x000000010008cb40: _objc_msgSend$lowercaseString (in test.dwarf) + 0

0x000000010008cb60: _objc_msgSend$mainBundle (in test.dwarf) + 0

0x000000010008cb80: _objc_msgSend$mainExecutableNameForReport: (in test.dwarf) + 0

0x000000010008cba0: _objc_msgSend$majorVersion: (in test.dwarf) + 0

0x000000010008cbc0: _objc_msgSend$makeKeyPath: (in test.dwarf) + 0

0x000000010008cbe0: _objc_msgSend$makeKeyPaths: (in test.dwarf) + 0

0x000000010008cc00: _objc_msgSend$maximumReportsPerMinute (in test.dwarf) + 0

0x000000010008cc20: _objc_msgSend$maximumTelemetryData (in test.dwarf) + 0

0x000000010008cc40: _objc_msgSend$measureTotalEncodingBytes: (in test.dwarf) + 0

0x000000010008cc60: _objc_msgSend$measureTotalEncodingBytes:usingEncoding: (in test.dwarf) + 0

0x000000010008cc80: _objc_msgSend$memoryStatsAutocollectionInterval (in test.dwarf) + 0

0x000000010008cca0: _objc_msgSend$mergeDataDictionary: (in test.dwarf) + 0

0x000000010008ccc0: _objc_msgSend$message (in test.dwarf) + 0

0x000000010008cce0: _objc_msgSend$messageFromCrashReport: (in test.dwarf) + 0

0x000000010008cd00: _objc_msgSend$modifyPayload:withConfig: (in test.dwarf) + 0

0x000000010008cd20: _objc_msgSend$modifyRollbarData (in test.dwarf) + 0

0x000000010008cd40: _objc_msgSend$monitorThread (in test.dwarf) + 0

0x000000010008cd60: _objc_msgSend$monitoring (in test.dwarf) + 0

0x000000010008cd80: _objc_msgSend$mutableBytes (in test.dwarf) + 0

0x000000010008cda0: _objc_msgSend$mutableCopy (in test.dwarf) + 0

0x000000010008cdc0: _objc_msgSend$mutableCopyWithZone: (in test.dwarf) + 0

0x000000010008cde0: _objc_msgSend$name (in test.dwarf) + 0

0x000000010008ce00: _objc_msgSend$new (in test.dwarf) + 0

0x000000010008ce20: _objc_msgSend$nextFieldIndex (in test.dwarf) + 0

0x000000010008ce40: _objc_msgSend$noAnswer (in test.dwarf) + 0

0x000000010008ce60: _objc_msgSend$notificationName (in test.dwarf) + 0

0x000000010008ce80: _objc_msgSend$notifier (in test.dwarf) + 0

0x000000010008cea0: _objc_msgSend$null (in test.dwarf) + 0

0x000000010008cec0: _objc_msgSend$nullTerminated: (in test.dwarf) + 0

0x000000010008cee0: _objc_msgSend$numberWithBool: (in test.dwarf) + 0

0x000000010008cf00: _objc_msgSend$numberWithDouble: (in test.dwarf) + 0

0x000000010008cf20: _objc_msgSend$numberWithInt: (in test.dwarf) + 0

0x000000010008cf40: _objc_msgSend$numberWithInteger: (in test.dwarf) + 0

0x000000010008cf60: _objc_msgSend$numberWithLongLong: (in test.dwarf) + 0

0x000000010008cf80: _objc_msgSend$numberWithUnsignedInt: (in test.dwarf) + 0

0x000000010008cfa0: _objc_msgSend$numberWithUnsignedInteger: (in test.dwarf) + 0

0x000000010008cfc0: _objc_msgSend$numberWithUnsignedLongLong: (in test.dwarf) + 0

0x000000010008cfe0: _objc_msgSend$objectAtIndex: (in test.dwarf) + 0

0x000000010008d000: _objc_msgSend$objectAtIndexedSubscript: (in test.dwarf) + 0

0x000000010008d020: _objc_msgSend$objectEnumerator (in test.dwarf) + 0

0x000000010008d040: _objc_msgSend$objectForInfoDictionaryKey: (in test.dwarf) + 0

0x000000010008d060: _objc_msgSend$objectForKey: (in test.dwarf) + 0

0x000000010008d080: _objc_msgSend$objectForKeyPath: (in test.dwarf) + 0

0x000000010008d0a0: _objc_msgSend$objectForKeyedSubscript: (in test.dwarf) + 0

0x000000010008d0c0: _objc_msgSend$onCompletion (in test.dwarf) + 0

0x000000010008d0e0: _objc_msgSend$onReachabilityChanged (in test.dwarf) + 0

0x000000010008d100: _objc_msgSend$onReachabilityFlagsChanged: (in test.dwarf) + 0

0x000000010008d120: _objc_msgSend$openDB: (in test.dwarf) + 0

0x000000010008d140: _objc_msgSend$operatingSystemVersion (in test.dwarf) + 0

0x000000010008d160: _objc_msgSend$operatingSystemVersionString (in test.dwarf) + 0

0x000000010008d180: _objc_msgSend$operationWithHost:allowWWAN:block: (in test.dwarf) + 0

0x000000010008d1a0: _objc_msgSend$osData (in test.dwarf) + 0

0x000000010008d1c0: _objc_msgSend$params (in test.dwarf) + 0

0x000000010008d1e0: _objc_msgSend$path (in test.dwarf) + 0

0x000000010008d200: _objc_msgSend$payloadWithLevel:crashReport: (in test.dwarf) + 0

0x000000010008d220: _objc_msgSend$payloadWithLevel:error:data:context: (in test.dwarf) + 0

0x000000010008d240: _objc_msgSend$payloadWithLevel:exception:data:context: (in test.dwarf) + 0

0x000000010008d260: _objc_msgSend$payloadWithLevel:message:data:context: (in test.dwarf) + 0

0x000000010008d280: _objc_msgSend$payloadsStore (in test.dwarf) + 0

0x000000010008d2a0: _objc_msgSend$performSelector:onThread:withObject:waitUntilDone: (in test.dwarf) + 0

0x000000010008d2c0: _objc_msgSend$persistPayload:withConfig: (in test.dwarf) + 0

0x000000010008d2e0: _objc_msgSend$persistentRepositoryWithPath: (in test.dwarf) + 0

0x000000010008d300: _objc_msgSend$person (in test.dwarf) + 0

0x000000010008d320: _objc_msgSend$physicalMemory (in test.dwarf) + 0

0x000000010008d340: _objc_msgSend$postNotificationName:object: (in test.dwarf) + 0

0x000000010008d360: _objc_msgSend$postPayload:toDestination:usingDeveloperOptions:andHttpProxySettings:andHttpsProxySettings: (in test.dwarf) + 0

0x000000010008d380: _objc_msgSend$predicateWithFormat: (in test.dwarf) + 0

0x000000010008d3a0: _objc_msgSend$prependedFilters (in test.dwarf) + 0

0x000000010008d3c0: _objc_msgSend$presentModalVC: (in test.dwarf) + 0

0x000000010008d3e0: _objc_msgSend$presentModalViewController:animated: (in test.dwarf) + 0

0x000000010008d400: _objc_msgSend$presentViewController:animated:completion: (in test.dwarf) + 0

0x000000010008d420: _objc_msgSend$previousClassName (in test.dwarf) + 0

0x000000010008d440: _objc_msgSend$printAppleFormat (in test.dwarf) + 0

0x000000010008d460: _objc_msgSend$processIdentifier (in test.dwarf) + 0

0x000000010008d480: _objc_msgSend$processInfo (in test.dwarf) + 0

0x000000010008d4a0: _objc_msgSend$processName (in test.dwarf) + 0

0x000000010008d4c0: _objc_msgSend$processReport: (in test.dwarf) + 0

0x000000010008d4e0: _objc_msgSend$processSavedItems (in test.dwarf) + 0

0x000000010008d500: _objc_msgSend$processSavedPayload: (in test.dwarf) + 0

0x000000010008d520: _objc_msgSend$proxyPort (in test.dwarf) + 0

0x000000010008d540: _objc_msgSend$proxyUrl (in test.dwarf) + 0

0x000000010008d560: _objc_msgSend$quincyArchFromCpuType:cpuSubType: (in test.dwarf) + 0

0x000000010008d580: _objc_msgSend$quincyInstallUUID (in test.dwarf) + 0

0x000000010008d5a0: _objc_msgSend$raise:format: (in test.dwarf) + 0

0x000000010008d5c0: _objc_msgSend$rangeOfComposedCharacterSequenceAtIndex: (in test.dwarf) + 0

0x000000010008d5e0: _objc_msgSend$rangeOfString: (in test.dwarf) + 0

0x000000010008d600: _objc_msgSend$rangeOfString:options: (in test.dwarf) + 0

0x000000010008d620: _objc_msgSend$rateLimitBehavior (in test.dwarf) + 0

0x000000010008d640: _objc_msgSend$reachability (in test.dwarf) + 0

0x000000010008d660: _objc_msgSend$reachabilityChanged: (in test.dwarf) + 0

0x000000010008d680: _objc_msgSend$reachabilityFlags (in test.dwarf) + 0

0x000000010008d6a0: _objc_msgSend$reachabilityForInternetConnection (in test.dwarf) + 0

0x000000010008d6c0: _objc_msgSend$reachabilityRef (in test.dwarf) + 0

0x000000010008d6e0: _objc_msgSend$reachabilitySerialQueue (in test.dwarf) + 0

0x000000010008d700: _objc_msgSend$reachabilityToHost: (in test.dwarf) + 0

0x000000010008d720: _objc_msgSend$reachabilityWithAddress: (in test.dwarf) + 0

0x000000010008d740: _objc_msgSend$reachabilityWithHostname: (in test.dwarf) + 0

0x000000010008d760: _objc_msgSend$reachable (in test.dwarf) + 0

0x000000010008d780: _objc_msgSend$reachableBlock (in test.dwarf) + 0

0x000000010008d7a0: _objc_msgSend$reachableOnWWAN (in test.dwarf) + 0

0x000000010008d7c0: _objc_msgSend$readDataOfLength: (in test.dwarf) + 0

0x000000010008d7e0: _objc_msgSend$readLine (in test.dwarf) + 0

0x000000010008d800: _objc_msgSend$readPayloadsDataFromFile: (in test.dwarf) + 0

0x000000010008d820: _objc_msgSend$reason (in test.dwarf) + 0

0x000000010008d840: _objc_msgSend$recipients (in test.dwarf) + 0

0x000000010008d860: _objc_msgSend$recordConnectivityEventForLevel:status:extraData: (in test.dwarf) + 0

0x000000010008d880: _objc_msgSend$recordErrorEventForLevel:message:extraData: (in test.dwarf) + 0

0x000000010008d8a0: _objc_msgSend$recordEvent: (in test.dwarf) + 0

0x000000010008d8c0: _objc_msgSend$recordEventWithLevel:eventBody: (in test.dwarf) + 0

0x000000010008d8e0: _objc_msgSend$recordEventWithLevel:source:eventBody: (in test.dwarf) + 0

0x000000010008d900: _objc_msgSend$recordLogEventForLevel:message:extraData: (in test.dwarf) + 0

0x000000010008d920: _objc_msgSend$recordManualEventForLevel:withData: (in test.dwarf) + 0

0x000000010008d940: _objc_msgSend$recordNavigationEventForLevel:from:to:extraData: (in test.dwarf) + 0

0x000000010008d960: _objc_msgSend$recordNetworkEventForLevel:method:url:statusCode:extraData: (in test.dwarf) + 0

0x000000010008d980: _objc_msgSend$recordPostReply:withConfig: (in test.dwarf) + 0

0x000000010008d9a0: _objc_msgSend$recordViewEventForLevel:element:extraData: (in test.dwarf) + 0

0x000000010008d9c0: _objc_msgSend$recrashReport: (in test.dwarf) + 0

0x000000010008d9e0: _objc_msgSend$recrashReportString: (in test.dwarf) + 0

0x000000010008da00: _objc_msgSend$registerNameForFamily:paramIndex: (in test.dwarf) + 0

0x000000010008da20: _objc_msgSend$remainingCount (in test.dwarf) + 0

0x000000010008da40: _objc_msgSend$remainingSeconds (in test.dwarf) + 0

0x000000010008da60: _objc_msgSend$removeAllDestinations (in test.dwarf) + 0

0x000000010008da80: _objc_msgSend$removeAllObjects (in test.dwarf) + 0

0x000000010008daa0: _objc_msgSend$removeAllPayloads (in test.dwarf) + 0

0x000000010008dac0: _objc_msgSend$removeFromSuperview (in test.dwarf) + 0

0x000000010008dae0: _objc_msgSend$removeItemAtPath:error: (in test.dwarf) + 0

0x000000010008db00: _objc_msgSend$removeLastObject (in test.dwarf) + 0

0x000000010008db20: _objc_msgSend$removeObject: (in test.dwarf) + 0

0x000000010008db40: _objc_msgSend$removeObjectAtIndex: (in test.dwarf) + 0

0x000000010008db60: _objc_msgSend$removeObjectForKey: (in test.dwarf) + 0

0x000000010008db80: _objc_msgSend$removeObjectsInRange: (in test.dwarf) + 0

0x000000010008dba0: _objc_msgSend$removeObserver:forKeyPath:context: (in test.dwarf) + 0

0x000000010008dbc0: _objc_msgSend$removePayloadByID: (in test.dwarf) + 0

0x000000010008dbe0: _objc_msgSend$replaceObjectAtIndex:withObject: (in test.dwarf) + 0

0x000000010008dc00: _objc_msgSend$replyFromHttpResponse: (in test.dwarf) + 0

0x000000010008dc20: _objc_msgSend$report: (in test.dwarf) + 0

0x000000010008dc40: _objc_msgSend$reportFieldForProperty: (in test.dwarf) + 0

0x000000010008dc60: _objc_msgSend$reportFieldForProperty:setKey: (in test.dwarf) + 0

0x000000010008dc80: _objc_msgSend$reportFieldForProperty:setValue: (in test.dwarf) + 0

0x000000010008dca0: _objc_msgSend$reportStyle (in test.dwarf) + 0

0x000000010008dcc0: _objc_msgSend$reportWithIntID: (in test.dwarf) + 0

0x000000010008dce0: _objc_msgSend$reports (in test.dwarf) + 0

0x000000010008dd00: _objc_msgSend$repositoryWithFlag: (in test.dwarf) + 0

0x000000010008dd20: _objc_msgSend$repositoryWithPath: (in test.dwarf) + 0

0x000000010008dd40: _objc_msgSend$requestId (in test.dwarf) + 0

0x000000010008dd60: _objc_msgSend$requestWithURL: (in test.dwarf) + 0

0x000000010008dd80: _objc_msgSend$requestWithURL:cachePolicy:timeoutInterval: (in test.dwarf) + 0

0x000000010008dda0: _objc_msgSend$requiredProperties (in test.dwarf) + 0

0x000000010008ddc0: _objc_msgSend$respondsToSelector: (in test.dwarf) + 0

0x000000010008dde0: _objc_msgSend$resume (in test.dwarf) + 0

0x000000010008de00: _objc_msgSend$rollbar_dataWithJSONObject:options:error:safe: (in test.dwarf) + 0

0x000000010008de20: _objc_msgSend$rollbar_dateFromString: (in test.dwarf) + 0

0x000000010008de40: _objc_msgSend$rollbar_objectClassName (in test.dwarf) + 0

0x000000010008de60: _objc_msgSend$rollbar_safeDataFromJSONObject: (in test.dwarf) + 0

0x000000010008de80: _objc_msgSend$rollbar_toString (in test.dwarf) + 0

0x000000010008dea0: _objc_msgSend$rootViewController (in test.dwarf) + 0

0x000000010008dec0: _objc_msgSend$run (in test.dwarf) + 0

0x000000010008dee0: _objc_msgSend$runMode:beforeDate: (in test.dwarf) + 0

0x000000010008df00: _objc_msgSend$safeDataFromJSONObject: (in test.dwarf) + 0

0x000000010008df20: _objc_msgSend$safeListFields (in test.dwarf) + 0

0x000000010008df40: _objc_msgSend$safelyBuildObjectPredicateWithValue:forProperty: (in test.dwarf) + 0

0x000000010008df60: _objc_msgSend$safelyGetArrayByKey: (in test.dwarf) + 0

0x000000010008df80: _objc_msgSend$safelyGetBoolByKey:withDefault: (in test.dwarf) + 0

0x000000010008dfa0: _objc_msgSend$safelyGetDictionaryByKey: (in test.dwarf) + 0

0x000000010008dfc0: _objc_msgSend$safelyGetNumberByKey: (in test.dwarf) + 0

0x000000010008dfe0: _objc_msgSend$safelyGetStringByKey: (in test.dwarf) + 0

0x000000010008e000: _objc_msgSend$safelyGetTimeIntervalByKey:withDefault: (in test.dwarf) + 0

0x000000010008e020: _objc_msgSend$safelyGetUIntegerByKey:withDefault: (in test.dwarf) + 0

0x000000010008e040: _objc_msgSend$savePayload:withConfig: (in test.dwarf) + 0

0x000000010008e060: _objc_msgSend$saveRollbarConfig:toFile:error: (in test.dwarf) + 0

0x000000010008e080: _objc_msgSend$saveTelemetryData: (in test.dwarf) + 0

0x000000010008e0a0: _objc_msgSend$scanDouble: (in test.dwarf) + 0

0x000000010008e0c0: _objc_msgSend$scannerWithString: (in test.dwarf) + 0

0x000000010008e0e0: _objc_msgSend$scrubFields (in test.dwarf) + 0

0x000000010008e100: _objc_msgSend$scrubPayload:withConfig: (in test.dwarf) + 0

0x000000010008e120: _objc_msgSend$seekToEndReturningOffset:error: (in test.dwarf) + 0

0x000000010008e140: _objc_msgSend$seekToFileOffset: (in test.dwarf) + 0

0x000000010008e160: _objc_msgSend$selectMultipleRowsWithSql:andCallback: (in test.dwarf) + 0

0x000000010008e180: _objc_msgSend$selectSingleRowWithSql:andCallback: (in test.dwarf) + 0

0x000000010008e1a0: _objc_msgSend$sendAllReports (in test.dwarf) + 0

0x000000010008e1c0: _objc_msgSend$sendAllReportsWithCompletion: (in test.dwarf) + 0

0x000000010008e1e0: _objc_msgSend$sendPayload:toDestination:withConfig: (in test.dwarf) + 0

0x000000010008e200: _objc_msgSend$sendPayload:usingConfig: (in test.dwarf) + 0

0x000000010008e220: _objc_msgSend$sendPayload:withConfig: (in test.dwarf) + 0

0x000000010008e240: _objc_msgSend$sendReports:onCompletion: (in test.dwarf) + 0

0x000000010008e260: _objc_msgSend$sendRequest:onSuccess:onFailure:onError: (in test.dwarf) + 0

0x000000010008e280: _objc_msgSend$sender (in test.dwarf) + 0

0x000000010008e2a0: _objc_msgSend$separatorFmt (in test.dwarf) + 0

0x000000010008e2c0: _objc_msgSend$serializeToJSONData (in test.dwarf) + 0

0x000000010008e2e0: _objc_msgSend$serializeToJSONString (in test.dwarf) + 0

0x000000010008e300: _objc_msgSend$serializedDataArray (in test.dwarf) + 0

0x000000010008e320: _objc_msgSend$server (in test.dwarf) + 0

0x000000010008e340: _objc_msgSend$sessionWithConfiguration: (in test.dwarf) + 0

0x000000010008e360: _objc_msgSend$set (in test.dwarf) + 0

0x000000010008e380: _objc_msgSend$setAccessToken: (in test.dwarf) + 0

0x000000010008e3a0: _objc_msgSend$setActive: (in test.dwarf) + 0

0x000000010008e3c0: _objc_msgSend$setAdaptive: (in test.dwarf) + 0

0x000000010008e3e0: _objc_msgSend$setAddConsoleLogToReport: (in test.dwarf) + 0

0x000000010008e400: _objc_msgSend$setAddress: (in test.dwarf) + 0

0x000000010008e420: _objc_msgSend$setAlertView: (in test.dwarf) + 0

0x000000010008e440: _objc_msgSend$setAllowNotFound: (in test.dwarf) + 0

0x000000010008e460: _objc_msgSend$setAppIdentifier: (in test.dwarf) + 0

0x000000010008e480: _objc_msgSend$setArray:forKey: (in test.dwarf) + 0

0x000000010008e4a0: _objc_msgSend$setAwaitingResponse: (in test.dwarf) + 0

0x000000010008e4c0: _objc_msgSend$setBasePath: (in test.dwarf) + 0

0x000000010008e4e0: _objc_msgSend$setBranch: (in test.dwarf) + 0

0x000000010008e500: _objc_msgSend$setBundleName: (in test.dwarf) + 0

0x000000010008e520: _objc_msgSend$setCachePolicy: (in test.dwarf) + 0

0x000000010008e540: _objc_msgSend$setCallbacks: (in test.dwarf) + 0

0x000000010008e560: _objc_msgSend$setCaptureLog: (in test.dwarf) + 0

0x000000010008e580: _objc_msgSend$setCatchZombies: (in test.dwarf) + 0

0x000000010008e5a0: _objc_msgSend$setClassName: (in test.dwarf) + 0

0x000000010008e5c0: _objc_msgSend$setClient: (in test.dwarf) + 0

0x000000010008e5e0: _objc_msgSend$setCodeVersion: (in test.dwarf) + 0

0x000000010008e600: _objc_msgSend$setCollector: (in test.dwarf) + 0

0x000000010008e620: _objc_msgSend$setCompressionLevel: (in test.dwarf) + 0

0x000000010008e640: _objc_msgSend$setConfiguration: (in test.dwarf) + 0

0x000000010008e660: _objc_msgSend$setConnectionProxyDictionary: (in test.dwarf) + 0

0x000000010008e680: _objc_msgSend$setContactEmailKey: (in test.dwarf) + 0

0x000000010008e6a0: _objc_msgSend$setContainerStack: (in test.dwarf) + 0

0x000000010008e6c0: _objc_msgSend$setContext: (in test.dwarf) + 0

0x000000010008e6e0: _objc_msgSend$setCountStyle: (in test.dwarf) + 0

0x000000010008e700: _objc_msgSend$setCrashDescriptionKey: (in test.dwarf) + 0

0x000000010008e720: _objc_msgSend$setCrashDescriptionKeys: (in test.dwarf) + 0

0x000000010008e740: _objc_msgSend$setCrashHandlerDataBacking: (in test.dwarf) + 0

0x000000010008e760: _objc_msgSend$setCurrentSnapshotUserReportedExceptionHandler: (in test.dwarf) + 0

0x000000010008e780: _objc_msgSend$setCustom: (in test.dwarf) + 0

0x000000010008e7a0: _objc_msgSend$setData: (in test.dwarf) + 0

0x000000010008e7c0: _objc_msgSend$setData:byKey: (in test.dwarf) + 0

0x000000010008e7e0: _objc_msgSend$setDataLimit: (in test.dwarf) + 0

0x000000010008e800: _objc_msgSend$setDataTransferObject:forKey: (in test.dwarf) + 0

0x000000010008e820: _objc_msgSend$setDateFormat: (in test.dwarf) + 0

0x000000010008e840: _objc_msgSend$setDecodeOptions: (in test.dwarf) + 0

0x000000010008e860: _objc_msgSend$setDefaultFilenameFormats: (in test.dwarf) + 0

0x000000010008e880: _objc_msgSend$setDelegate: (in test.dwarf) + 0

0x000000010008e8a0: _objc_msgSend$setDeleteBehaviorAfterSendAll: (in test.dwarf) + 0

0x000000010008e8c0: _objc_msgSend$setDemangleLanguages: (in test.dwarf) + 0

0x000000010008e8e0: _objc_msgSend$setDictionary:forKey: (in test.dwarf) + 0

0x000000010008e900: _objc_msgSend$setDummyVC: (in test.dwarf) + 0

0x000000010008e920: _objc_msgSend$setEmail: (in test.dwarf) + 0

0x000000010008e940: _objc_msgSend$setEnabled: (in test.dwarf) + 0

0x000000010008e960: _objc_msgSend$setEncodeOptions: (in test.dwarf) + 0

0x000000010008e980: _objc_msgSend$setEnvironment: (in test.dwarf) + 0

0x000000010008e9a0: _objc_msgSend$setError: (in test.dwarf) + 0

0x000000010008e9c0: _objc_msgSend$setExpectedButtonIndex: (in test.dwarf) + 0

0x000000010008e9e0: _objc_msgSend$setExtraDescriptionKeys: (in test.dwarf) + 0

0x000000010008ea00: _objc_msgSend$setFieldBacking: (in test.dwarf) + 0

0x000000010008ea20: _objc_msgSend$setFields: (in test.dwarf) + 0

0x000000010008ea40: _objc_msgSend$setFilenameFmt: (in test.dwarf) + 0

0x000000010008ea60: _objc_msgSend$setFilters: (in test.dwarf) + 0

0x000000010008ea80: _objc_msgSend$setFramework: (in test.dwarf) + 0

0x000000010008eaa0: _objc_msgSend$setHTTPBody: (in test.dwarf) + 0

0x000000010008eac0: _objc_msgSend$setHTTPMethod: (in test.dwarf) + 0

0x000000010008eae0: _objc_msgSend$setHost: (in test.dwarf) + 0

0x000000010008eb00: _objc_msgSend$setID: (in test.dwarf) + 0

0x000000010008eb20: _objc_msgSend$setIgnoreNullsInArrays: (in test.dwarf) + 0

0x000000010008eb40: _objc_msgSend$setIgnoreNullsInObjects: (in test.dwarf) + 0

0x000000010008eb60: _objc_msgSend$setIncludesActualByteCount: (in test.dwarf) + 0

0x000000010008eb80: _objc_msgSend$setIncludesUnit: (in test.dwarf) + 0

0x000000010008eba0: _objc_msgSend$setInteger:forKey: (in test.dwarf) + 0

0x000000010008ebc0: _objc_msgSend$setIntrospectMemory: (in test.dwarf) + 0

0x000000010008ebe0: _objc_msgSend$setIsInstance: (in test.dwarf) + 0

0x000000010008ec00: _objc_msgSend$setKey: (in test.dwarf) + 0

0x000000010008ec20: _objc_msgSend$setKeyBacking: (in test.dwarf) + 0

0x000000010008ec40: _objc_msgSend$setKeyPaths: (in test.dwarf) + 0

0x000000010008ec60: _objc_msgSend$setKeys: (in test.dwarf) + 0

0x000000010008ec80: _objc_msgSend$setLanguage: (in test.dwarf) + 0

0x000000010008eca0: _objc_msgSend$setLength: (in test.dwarf) + 0

0x000000010008ecc0: _objc_msgSend$setLevel: (in test.dwarf) + 0

0x000000010008ece0: _objc_msgSend$setLineno: (in test.dwarf) + 0

0x000000010008ed00: _objc_msgSend$setLocalWindowLimit: (in test.dwarf) + 0

0x000000010008ed20: _objc_msgSend$setLocale: (in test.dwarf) + 0

0x000000010008ed40: _objc_msgSend$setLogger: (in test.dwarf) + 0

0x000000010008ed60: _objc_msgSend$setMailComposeDelegate: (in test.dwarf) + 0

0x000000010008ed80: _objc_msgSend$setMaxReportCount: (in test.dwarf) + 0

0x000000010008eda0: _objc_msgSend$setMessage: (in test.dwarf) + 0

0x000000010008edc0: _objc_msgSend$setMessageBody:isHTML: (in test.dwarf) + 0

0x000000010008ede0: _objc_msgSend$setMethod: (in test.dwarf) + 0

0x000000010008ee00: _objc_msgSend$setMonitorThread: (in test.dwarf) + 0

0x000000010008ee20: _objc_msgSend$setMonitoring: (in test.dwarf) + 0

0x000000010008ee40: _objc_msgSend$setName: (in test.dwarf) + 0

0x000000010008ee60: _objc_msgSend$setNextFieldIndex: (in test.dwarf) + 0

0x000000010008ee80: _objc_msgSend$setNoAnswer: (in test.dwarf) + 0

0x000000010008eea0: _objc_msgSend$setNotifier: (in test.dwarf) + 0

0x000000010008eec0: _objc_msgSend$setNumber:forKey: (in test.dwarf) + 0

0x000000010008eee0: _objc_msgSend$setObject:forKey: (in test.dwarf) + 0

0x000000010008ef00: _objc_msgSend$setObject:forKeyedSubscript: (in test.dwarf) + 0

0x000000010008ef20: _objc_msgSend$setOnCompletion: (in test.dwarf) + 0

0x000000010008ef40: _objc_msgSend$setOnCrash: (in test.dwarf) + 0

0x000000010008ef60: _objc_msgSend$setOnReachabilityChanged: (in test.dwarf) + 0

0x000000010008ef80: _objc_msgSend$setOsData: (in test.dwarf) + 0

0x000000010008efa0: _objc_msgSend$setParams: (in test.dwarf) + 0

0x000000010008efc0: _objc_msgSend$setPerson: (in test.dwarf) + 0

0x000000010008efe0: _objc_msgSend$setPlatform: (in test.dwarf) + 0

0x000000010008f000: _objc_msgSend$setPrependedFilters: (in test.dwarf) + 0

0x000000010008f020: _objc_msgSend$setPrettyPrint: (in test.dwarf) + 0

0x000000010008f040: _objc_msgSend$setPreviousClassName: (in test.dwarf) + 0

0x000000010008f060: _objc_msgSend$setPrintAppleFormat: (in test.dwarf) + 0

0x000000010008f080: _objc_msgSend$setReachability: (in test.dwarf) + 0

0x000000010008f0a0: _objc_msgSend$setReachabilityObject: (in test.dwarf) + 0

0x000000010008f0c0: _objc_msgSend$setReachabilityRef: (in test.dwarf) + 0

0x000000010008f0e0: _objc_msgSend$setReachabilitySerialQueue: (in test.dwarf) + 0

0x000000010008f100: _objc_msgSend$setReachableBlock: (in test.dwarf) + 0

0x000000010008f120: _objc_msgSend$setReachableOnWWAN: (in test.dwarf) + 0

0x000000010008f140: _objc_msgSend$setReachableOperation: (in test.dwarf) + 0

0x000000010008f160: _objc_msgSend$setRecipients: (in test.dwarf) + 0

0x000000010008f180: _objc_msgSend$setReportStyle: (in test.dwarf) + 0

0x000000010008f1a0: _objc_msgSend$setReportStyle:useDefaultFilenameFormat: (in test.dwarf) + 0

0x000000010008f1c0: _objc_msgSend$setReports: (in test.dwarf) + 0

0x000000010008f1e0: _objc_msgSend$setRequiredProperties: (in test.dwarf) + 0

0x000000010008f200: _objc_msgSend$setRoot: (in test.dwarf) + 0

0x000000010008f220: _objc_msgSend$setScrubViewInputs: (in test.dwarf) + 0

0x000000010008f240: _objc_msgSend$setSearchQueueNames: (in test.dwarf) + 0

0x000000010008f260: _objc_msgSend$setSeparatorFmt: (in test.dwarf) + 0

0x000000010008f280: _objc_msgSend$setServer: (in test.dwarf) + 0

0x000000010008f2a0: _objc_msgSend$setSink: (in test.dwarf) + 0

0x000000010008f2c0: _objc_msgSend$setSorted: (in test.dwarf) + 0

0x000000010008f2e0: _objc_msgSend$setString: (in test.dwarf) + 0

0x000000010008f300: _objc_msgSend$setString:forKey: (in test.dwarf) + 0

0x000000010008f320: _objc_msgSend$setSubject: (in test.dwarf) + 0

0x000000010008f340: _objc_msgSend$setTimeInterval:forKey: (in test.dwarf) + 0

0x000000010008f360: _objc_msgSend$setTimeZone: (in test.dwarf) + 0

0x000000010008f380: _objc_msgSend$setTimeoutInterval: (in test.dwarf) + 0

0x000000010008f3a0: _objc_msgSend$setTitle: (in test.dwarf) + 0

0x000000010008f3c0: _objc_msgSend$setToRecipients: (in test.dwarf) + 0

0x000000010008f3e0: _objc_msgSend$setType: (in test.dwarf) + 0

0x000000010008f400: _objc_msgSend$setUInteger:forKey: (in test.dwarf) + 0

0x000000010008f420: _objc_msgSend$setUncaughtExceptionHandler: (in test.dwarf) + 0

0x000000010008f440: _objc_msgSend$setUnreachableBlock: (in test.dwarf) + 0

0x000000010008f460: _objc_msgSend$setUrl: (in test.dwarf) + 0

0x000000010008f480: _objc_msgSend$setUserEmail: (in test.dwarf) + 0

0x000000010008f4a0: _objc_msgSend$setUserIDKey: (in test.dwarf) + 0

0x000000010008f4c0: _objc_msgSend$setUserName: (in test.dwarf) + 0

0x000000010008f4e0: _objc_msgSend$setUserNameKey: (in test.dwarf) + 0

0x000000010008f500: _objc_msgSend$setUsername: (in test.dwarf) + 0

0x000000010008f520: _objc_msgSend$setUuid: (in test.dwarf) + 0

0x000000010008f540: _objc_msgSend$setValue: (in test.dwarf) + 0

0x000000010008f560: _objc_msgSend$setValue:forHTTPHeaderField: (in test.dwarf) + 0

0x000000010008f580: _objc_msgSend$setValue:forKey: (in test.dwarf) + 0

0x000000010008f5a0: _objc_msgSend$setValue:forKeyPath: (in test.dwarf) + 0

0x000000010008f5c0: _objc_msgSend$setValueBacking: (in test.dwarf) + 0

0x000000010008f5e0: _objc_msgSend$setVersion: (in test.dwarf) + 0

0x000000010008f600: _objc_msgSend$setView: (in test.dwarf) + 0

0x000000010008f620: _objc_msgSend$setViewInputsToScrub: (in test.dwarf) + 0

0x000000010008f640: _objc_msgSend$setWaitUntilReachable: (in test.dwarf) + 0

0x000000010008f660: _objc_msgSend$setWithArray: (in test.dwarf) + 0

0x000000010008f680: _objc_msgSend$setYesAnswer: (in test.dwarf) + 0

0x000000010008f6a0: _objc_msgSend$setZeroPadsFractionDigits: (in test.dwarf) + 0

0x000000010008f6c0: _objc_msgSend$setupDataStorage (in test.dwarf) + 0

0x000000010008f6e0: _objc_msgSend$setupTimer (in test.dwarf) + 0

0x000000010008f700: _objc_msgSend$sharedApplication (in test.dwarf) + 0

0x000000010008f720: _objc_msgSend$sharedInstance (in test.dwarf) + 0

0x000000010008f740: _objc_msgSend$sharedSession (in test.dwarf) + 0

0x000000010008f760: _objc_msgSend$shouldIgnorePayload:withConfig: (in test.dwarf) + 0

0x000000010008f780: _objc_msgSend$shouldSkipReporting: (in test.dwarf) + 0

0x000000010008f7a0: _objc_msgSend$show (in test.dwarf) + 0

0x000000010008f7c0: _objc_msgSend$sink (in test.dwarf) + 0

0x000000010008f7e0: _objc_msgSend$sinkWithAppIdentifier:userIDKey:userNameKey:contactEmailKey:crashDescriptionKeys: (in test.dwarf) + 0

0x000000010008f800: _objc_msgSend$sinkWithRecipients:subject:message:filenameFmt: (in test.dwarf) + 0

0x000000010008f820: _objc_msgSend$sinkWithURL: (in test.dwarf) + 0

0x000000010008f840: _objc_msgSend$sinkWithURL:userIDKey:userNameKey:contactEmailKey:crashDescriptionKeys: (in test.dwarf) + 0

0x000000010008f860: _objc_msgSend$sinkWithURL:userName:userEmail: (in test.dwarf) + 0

0x000000010008f880: _objc_msgSend$sleepForTimeInterval: (in test.dwarf) + 0

0x000000010008f8a0: _objc_msgSend$snapTelemetryData (in test.dwarf) + 0

0x000000010008f8c0: _objc_msgSend$sortUsingComparator: (in test.dwarf) + 0

0x000000010008f8e0: _objc_msgSend$sortedArrayUsingSelector: (in test.dwarf) + 0

0x000000010008f900: _objc_msgSend$standardUserDefaults (in test.dwarf) + 0

0x000000010008f920: _objc_msgSend$start (in test.dwarf) + 0

0x000000010008f940: _objc_msgSend$startNotifier (in test.dwarf) + 0

0x000000010008f960: _objc_msgSend$startWithController:reports:filenameFmt:onCompletion: (in test.dwarf) + 0

0x000000010008f980: _objc_msgSend$startWithTitle:message:yesAnswer:noAnswer:reports:onCompletion: (in test.dwarf) + 0

0x000000010008f9a0: _objc_msgSend$statusCode (in test.dwarf) + 0

0x000000010008f9c0: _objc_msgSend$stopNotifier (in test.dwarf) + 0

0x000000010008f9e0: _objc_msgSend$string (in test.dwarf) + 0

0x000000010008fa00: _objc_msgSend$stringByAddingPercentEncodingWithAllowedCharacters: (in test.dwarf) + 0

0x000000010008fa20: _objc_msgSend$stringByAppendingFormat: (in test.dwarf) + 0

0x000000010008fa40: _objc_msgSend$stringByAppendingPathComponent: (in test.dwarf) + 0

0x000000010008fa60: _objc_msgSend$stringByAppendingString: (in test.dwarf) + 0

0x000000010008fa80: _objc_msgSend$stringByDeletingLastPathComponent (in test.dwarf) + 0

0x000000010008faa0: _objc_msgSend$stringByExpandingTildeInPath (in test.dwarf) + 0

0x000000010008fac0: _objc_msgSend$stringByReplacingOccurrencesOfString:withString: (in test.dwarf) + 0

0x000000010008fae0: _objc_msgSend$stringByReplacingOccurrencesOfString:withString:options:range: (in test.dwarf) + 0

0x000000010008fb00: _objc_msgSend$stringByStandardizingPath (in test.dwarf) + 0

0x000000010008fb20: _objc_msgSend$stringByTrimmingCharactersInSet: (in test.dwarf) + 0

0x000000010008fb40: _objc_msgSend$stringForKey: (in test.dwarf) + 0

0x000000010008fb60: _objc_msgSend$stringFromByteCount: (in test.dwarf) + 0

0x000000010008fb80: _objc_msgSend$stringFromDate: (in test.dwarf) + 0

0x000000010008fba0: _objc_msgSend$stringValue (in test.dwarf) + 0

0x000000010008fbc0: _objc_msgSend$stringWithCString:encoding: (in test.dwarf) + 0

0x000000010008fbe0: _objc_msgSend$stringWithData: (in test.dwarf) + 0

0x000000010008fc00: _objc_msgSend$stringWithFormat: (in test.dwarf) + 0

0x000000010008fc20: _objc_msgSend$stringWithString: (in test.dwarf) + 0

0x000000010008fc40: _objc_msgSend$stringWithUTF8String: (in test.dwarf) + 0

0x000000010008fc60: _objc_msgSend$stringWithUncaughtExceptionName:reason: (in test.dwarf) + 0

0x000000010008fc80: _objc_msgSend$stringifyObject: (in test.dwarf) + 0

0x000000010008fca0: _objc_msgSend$subarrayWithRange: (in test.dwarf) + 0

0x000000010008fcc0: _objc_msgSend$subdataWithRange: (in test.dwarf) + 0

0x000000010008fce0: _objc_msgSend$subject (in test.dwarf) + 0

0x000000010008fd00: _objc_msgSend$subscribeToNotifications (in test.dwarf) + 0

0x000000010008fd20: _objc_msgSend$substringFromIndex: (in test.dwarf) + 0

0x000000010008fd40: _objc_msgSend$substringWithRange: (in test.dwarf) + 0

0x000000010008fd60: _objc_msgSend$suppressSdkInfoLogging (in test.dwarf) + 0

0x000000010008fd80: _objc_msgSend$synchronize (in test.dwarf) + 0

0x000000010008fda0: _objc_msgSend$systemName (in test.dwarf) + 0

0x000000010008fdc0: _objc_msgSend$systemReport: (in test.dwarf) + 0

0x000000010008fde0: _objc_msgSend$systemUptime (in test.dwarf) + 0

0x000000010008fe00: _objc_msgSend$systemVersion (in test.dwarf) + 0

0x000000010008fe20: _objc_msgSend$telemetry (in test.dwarf) + 0

0x000000010008fe40: _objc_msgSend$telemetryOptions (in test.dwarf) + 0

0x000000010008fe60: _objc_msgSend$telemetryQueue (in test.dwarf) + 0

0x000000010008fe80: _objc_msgSend$threadListStringForReport:mainExecutableName: (in test.dwarf) + 0

0x000000010008fea0: _objc_msgSend$threadStringForThread:mainExecutableName: (in test.dwarf) + 0

0x000000010008fec0: _objc_msgSend$timeInterval (in test.dwarf) + 0

0x000000010008fee0: _objc_msgSend$timeIntervalSince1970 (in test.dwarf) + 0

0x000000010008ff00: _objc_msgSend$timeZoneForSecondsFromGMT: (in test.dwarf) + 0

0x000000010008ff20: _objc_msgSend$timerWithTimeInterval:target:selector:userInfo:repeats: (in test.dwarf) + 0

0x000000010008ff40: _objc_msgSend$title (in test.dwarf) + 0

0x000000010008ff60: _objc_msgSend$toAppleFormat: (in test.dwarf) + 0

0x000000010008ff80: _objc_msgSend$toCompactUUID: (in test.dwarf) + 0

0x000000010008ffa0: _objc_msgSend$toQuincyBody: (in test.dwarf) + 0

0x000000010008ffc0: _objc_msgSend$toQuincyFormat: (in test.dwarf) + 0

0x000000010008ffe0: _objc_msgSend$toStringWithQuotesEscaped: (in test.dwarf) + 0

0x0000000100090000: _objc_msgSend$topLevelContainer (in test.dwarf) + 0

0x0000000100090020: _objc_msgSend$totalDestinationRecords (in test.dwarf) + 0

0x0000000100090040: _objc_msgSend$transmit (in test.dwarf) + 0

0x0000000100090060: _objc_msgSend$transmitPayload:toDestination:usingDeveloperOptions:andHttpProxySettings:andHttpsProxySettings: (in test.dwarf) + 0

0x0000000100090080: _objc_msgSend$transmittedPayloadsLog (in test.dwarf) + 0

0x00000001000900a0: _objc_msgSend$transmittedPayloadsLogFile (in test.dwarf) + 0

0x00000001000900c0: _objc_msgSend$trimDataArray (in test.dwarf) + 0

0x00000001000900e0: _objc_msgSend$truncatePayload: (in test.dwarf) + 0

0x0000000100090100: _objc_msgSend$truncatePayload:toTotalBytes: (in test.dwarf) + 0

0x0000000100090120: _objc_msgSend$truncatePayload:toTotalBytes:byLimitingStringBytes: (in test.dwarf) + 0

0x0000000100090140: _objc_msgSend$truncatePayload:toTotalBytes:byReducingItems:keepingHeadsCount:keepingTailsCount: (in test.dwarf) + 0

0x0000000100090160: _objc_msgSend$truncatePayload:toTotalBytes:withExceptionMessageLimit:andTraceFramesLimit: (in test.dwarf) + 0

0x0000000100090180: _objc_msgSend$truncatePayloads:toMaxByteSize: (in test.dwarf) + 0

0x00000001000901a0: _objc_msgSend$truncateString:toTotalBytes: (in test.dwarf) + 0

0x00000001000901c0: _objc_msgSend$tryAddKeyed:Object: (in test.dwarf) + 0

0x00000001000901e0: _objc_msgSend$type (in test.dwarf) + 0

0x0000000100090200: _objc_msgSend$unreachableBlock (in test.dwarf) + 0

0x0000000100090220: _objc_msgSend$unsignedIntegerValue (in test.dwarf) + 0

0x0000000100090240: _objc_msgSend$unsignedLongLongValue (in test.dwarf) + 0

0x0000000100090260: _objc_msgSend$updateConfiguration: (in test.dwarf) + 0

0x0000000100090280: _objc_msgSend$url (in test.dwarf) + 0

0x00000001000902a0: _objc_msgSend$urlWithAppIdentifier: (in test.dwarf) + 0

0x00000001000902c0: _objc_msgSend$userEmail (in test.dwarf) + 0

0x00000001000902e0: _objc_msgSend$userExceptionTrace: (in test.dwarf) + 0

0x0000000100090300: _objc_msgSend$userIDKey (in test.dwarf) + 0

0x0000000100090320: _objc_msgSend$userInfo (in test.dwarf) + 0

0x0000000100090340: _objc_msgSend$userName (in test.dwarf) + 0

0x0000000100090360: _objc_msgSend$userNameKey (in test.dwarf) + 0

0x0000000100090380: _objc_msgSend$uuid (in test.dwarf) + 0

0x00000001000903a0: _objc_msgSend$uuidsFromReport: (in test.dwarf) + 0

0x00000001000903c0: _objc_msgSend$validateProperties (in test.dwarf) + 0

0x00000001000903e0: _objc_msgSend$value (in test.dwarf) + 0

0x0000000100090400: _objc_msgSend$valueBacking (in test.dwarf) + 0

0x0000000100090420: _objc_msgSend$valueForHTTPHeaderField: (in test.dwarf) + 0

0x0000000100090440: _objc_msgSend$valueForKey: (in test.dwarf) + 0

0x0000000100090460: _objc_msgSend$valueForKeyPath: (in test.dwarf) + 0

0x0000000100090480: _objc_msgSend$view (in test.dwarf) + 0

0x00000001000904a0: _objc_msgSend$viewInputsScrubber (in test.dwarf) + 0

0x00000001000904c0: _objc_msgSend$waitUntilReachable (in test.dwarf) + 0

0x00000001000904e0: _objc_msgSend$watchdogAnswer (in test.dwarf) + 0

0x0000000100090500: _objc_msgSend$watchdogPulse (in test.dwarf) + 0

0x0000000100090520: _objc_msgSend$whitespaceAndNewlineCharacterSet (in test.dwarf) + 0

0x0000000100090540: _objc_msgSend$whitespaceCharacterSet (in test.dwarf) + 0

0x0000000100090560: _objc_msgSend$willChangeValueForKey: (in test.dwarf) + 0

0x0000000100090580: _objc_msgSend$window (in test.dwarf) + 0

0x00000001000905a0: _objc_msgSend$writeData:error: (in test.dwarf) + 0

0x00000001000905c0: _objc_msgSend$writeToFile:atomically: (in test.dwarf) + 0

0x00000001000905e0: _objc_msgSend$yesAnswer (in test.dwarf) + 0

0x0000000100090600: _objc_msgSend$zombieCall: (in test.dwarf) + 0

0x0000000100090620: __OBJC_$_INSTANCE_METHODS__TtC12Rollbar_Demo11AppDelegate (in test.dwarf) + 0

0x0000000100090650: __OBJC_$_CLASS_METHODS_Rollbar (in test.dwarf) + 0

0x00000001000909c8: __OBJC_$_CLASS_METHODS_RollbarAppLanguageUtil (in test.dwarf) + 0

0x00000001000909e8: __OBJC_$_CLASS_METHODS_RollbarCaptureIpTypeUtil (in test.dwarf) + 0

0x0000000100090a08: __OBJC_$_CLASS_METHODS_RollbarConfig (in test.dwarf) + 0

0x0000000100090a40: __OBJC_$_CLASS_METHODS_RollbarConfigUtil (in test.dwarf) + 0

0x0000000100090ac0: __OBJC_$_CLASS_METHODS_RollbarHttpMethodUtil (in test.dwarf) + 0

0x0000000100090ae0: __OBJC_$_CLASS_METHODS_RollbarInfrastructure (in test.dwarf) + 0

0x0000000100090af8: __OBJC_$_CLASS_METHODS_RollbarLevelUtil (in test.dwarf) + 0

0x0000000100090b18: __OBJC_$_CLASS_METHODS_RollbarLogger(Test) (in test.dwarf) + 0

0x0000000100090c08: __OBJC_$_CLASS_METHODS_RollbarNotifierFiles (in test.dwarf) + 0

0x0000000100090c70: __OBJC_$_CLASS_METHODS_RollbarPayloadFactory (in test.dwarf) + 0

0x0000000100090c88: __OBJC_$_CLASS_METHODS_RollbarPayloadPostReply (in test.dwarf) + 0

0x0000000100090cc0: __OBJC_$_CLASS_METHODS_RollbarPayloadRepository (in test.dwarf) + 0

0x0000000100090d10: __OBJC_$_CLASS_METHODS_RollbarPayloadTruncator (in test.dwarf) + 0

0x0000000100090dc0: __OBJC_$_CLASS_METHODS_RollbarReachability (in test.dwarf) + 0

0x0000000100090e08: __OBJC_$_CLASS_METHODS_RollbarRegistry (in test.dwarf) + 0

0x0000000100090e28: __OBJC_$_CLASS_METHODS_RollbarSourceUtil (in test.dwarf) + 0

0x0000000100090e48: __OBJC_$_CLASS_METHODS_RollbarTelemetry (in test.dwarf) + 0

0x0000000100090e78: __OBJC_$_CLASS_METHODS_RollbarTelemetryEvent (in test.dwarf) + 0

0x0000000100090e98: __OBJC_$_CLASS_METHODS_RollbarTelemetryThread (in test.dwarf) + 0

0x0000000100090ec8: __OBJC_$_CLASS_METHODS_RollbarTelemetryTypeUtil (in test.dwarf) + 0

0x0000000100090ee8: __OBJC_$_CLASS_METHODS_RollbarThread (in test.dwarf) + 0

0x0000000100090f48: __OBJC_$_INSTANCE_METHODS_RollbarBody (in test.dwarf) + 0

0x0000000100091020: __OBJC_$_INSTANCE_METHODS_RollbarCallStackFrame (in test.dwarf) + 0

0x0000000100091140: __OBJC_$_INSTANCE_METHODS_RollbarCallStackFrameContext (in test.dwarf) + 0

0x0000000100091188: __OBJC_$_INSTANCE_METHODS_RollbarConfig (in test.dwarf) + 0

0x0000000100091278: __OBJC_$_INSTANCE_METHODS_RollbarCrashCollector (in test.dwarf) + 0

0x00000001000912b0: __OBJC_$_INSTANCE_METHODS_RollbarCrashLoggingFilter (in test.dwarf) + 0

0x00000001000912c8: __OBJC_$_INSTANCE_METHODS_RollbarCrashReport (in test.dwarf) + 0

0x00000001000912f8: __OBJC_$_INSTANCE_METHODS_RollbarData (in test.dwarf) + 0

0x00000001000914c8: __OBJC_$_INSTANCE_METHODS_RollbarDestination (in test.dwarf) + 0

0x0000000100091528: __OBJC_$_INSTANCE_METHODS_RollbarDestinationRecord (in test.dwarf) + 0

0x00000001000915f0: __OBJC_$_INSTANCE_METHODS_RollbarDeveloperOptions (in test.dwarf) + 0

0x0000000100091698: __OBJC_$_INSTANCE_METHODS_RollbarException (in test.dwarf) + 0

0x00000001000916f8: __OBJC_$_INSTANCE_METHODS_RollbarInfrastructure (in test.dwarf) + 0

0x0000000100091760: __OBJC_$_INSTANCE_METHODS_RollbarLogger(Test) (in test.dwarf) + 0

0x0000000100091808: __OBJC_$_INSTANCE_METHODS_RollbarLoggingOptions (in test.dwarf) + 0

0x00000001000918c8: __OBJC_$_INSTANCE_METHODS_RollbarMessage (in test.dwarf) + 0

0x0000000100091900: __OBJC_$_INSTANCE_METHODS_RollbarModule (in test.dwarf) + 0

0x0000000100091938: __OBJC_$_INSTANCE_METHODS_RollbarMutableConfig (in test.dwarf) + 0

0x0000000100091aa0: __OBJC_$_INSTANCE_METHODS_RollbarMutableDestination (in test.dwarf) + 0

0x0000000100091ad8: __OBJC_$_INSTANCE_METHODS_RollbarMutableDeveloperOptions (in test.dwarf) + 0

0x0000000100091b50: __OBJC_$_INSTANCE_METHODS_RollbarMutableLoggingOptions (in test.dwarf) + 0

0x0000000100091bc8: __OBJC_$_INSTANCE_METHODS_RollbarMutableModule (in test.dwarf) + 0

0x0000000100091bf8: __OBJC_$_INSTANCE_METHODS_RollbarMutablePerson (in test.dwarf) + 0

0x0000000100091c30: __OBJC_$_INSTANCE_METHODS_RollbarMutableProxy (in test.dwarf) + 0

0x0000000100091c60: __OBJC_$_INSTANCE_METHODS_RollbarMutableScrubbingOptions (in test.dwarf) + 0

0x0000000100091ce0: __OBJC_$_INSTANCE_METHODS_RollbarMutableServerConfig (in test.dwarf) + 0

0x0000000100091d18: __OBJC_$_INSTANCE_METHODS_RollbarMutableTelemetryOptions (in test.dwarf) + 0

0x0000000100091d80: __OBJC_$_INSTANCE_METHODS_RollbarPayload (in test.dwarf) + 0

0x0000000100091dd0: __OBJC_$_INSTANCE_METHODS_RollbarPayloadFactory (in test.dwarf) + 0

0x0000000100091e90: __OBJC_$_INSTANCE_METHODS_RollbarPayloadPostReply (in test.dwarf) + 0

0x0000000100091ef8: __OBJC_$_INSTANCE_METHODS_RollbarPayloadRepository (in test.dwarf) + 0

0x00000001000920f0: __OBJC_$_INSTANCE_METHODS_RollbarPerson (in test.dwarf) + 0

0x0000000100092150: __OBJC_$_INSTANCE_METHODS_RollbarProxy (in test.dwarf) + 0

0x0000000100092198: __OBJC_$_INSTANCE_METHODS_RollbarReachability (in test.dwarf) + 0

0x0000000100092318: __OBJC_$_INSTANCE_METHODS_RollbarRegistry (in test.dwarf) + 0

0x0000000100092368: __OBJC_$_INSTANCE_METHODS_RollbarRequest (in test.dwarf) + 0

0x0000000100092458: __OBJC_$_INSTANCE_METHODS_RollbarScrubbingOptions (in test.dwarf) + 0

0x00000001000924b8: __OBJC_$_INSTANCE_METHODS_RollbarSender (in test.dwarf) + 0

0x00000001000924f0: __OBJC_$_INSTANCE_METHODS_RollbarServer (in test.dwarf) + 0

0x0000000100092528: __OBJC_$_INSTANCE_METHODS_RollbarServerConfig (in test.dwarf) + 0

0x0000000100092578: __OBJC_$_INSTANCE_METHODS_RollbarTelemetry (in test.dwarf) + 0

0x00000001000926e8: __OBJC_$_INSTANCE_METHODS_RollbarTelemetryConnectivityBody (in test.dwarf) + 0

0x0000000100092730: __OBJC_$_INSTANCE_METHODS_RollbarTelemetryEvent (in test.dwarf) + 0

0x0000000100092798: __OBJC_$_INSTANCE_METHODS_RollbarTelemetryLogBody (in test.dwarf) + 0

0x00000001000927e0: __OBJC_$_INSTANCE_METHODS_RollbarTelemetryNavigationBody (in test.dwarf) + 0

0x0000000100092840: __OBJC_$_INSTANCE_METHODS_RollbarTelemetryNetworkBody (in test.dwarf) + 0

0x00000001000928b8: __OBJC_$_INSTANCE_METHODS_RollbarTelemetryOptions (in test.dwarf) + 0

0x0000000100092938: __OBJC_$_INSTANCE_METHODS_RollbarTelemetryOptionsObserver (in test.dwarf) + 0

0x0000000100092968: __OBJC_$_INSTANCE_METHODS_RollbarTelemetryThread (in test.dwarf) + 0

0x0000000100092a00: __OBJC_$_INSTANCE_METHODS_RollbarTelemetryViewBody (in test.dwarf) + 0

0x0000000100092a48: __OBJC_$_INSTANCE_METHODS_RollbarThread (in test.dwarf) + 0

0x0000000100092b38: __OBJC_$_INSTANCE_METHODS_RollbarTrace (in test.dwarf) + 0

0x0000000100092bb0: __OBJC_$_INSTANCE_METHODS__TtC18RollbarCrashReport23SwiftDiagnosisFormatter (in test.dwarf) + 0

0x0000000100092be0: __OBJC_$_INSTANCE_METHODS__TtC18RollbarCrashReport28RollbarCrashDiagnosticFilter (in test.dwarf) + 0

0x0000000100092c00: __OBJC_$_INSTANCE_METHODS__TtC18RollbarCrashReport28RollbarCrashFormattingFilter (in test.dwarf) + 0

0x0000000100092c20: __OBJC_$_INSTANCE_METHODS__TtC18RollbarCrashReportP33_7FFAE222EEA03028C0A0EA7AEC39C83716ISO8601Formatter (in test.dwarf) + 0

0x0000000100092c40: __OBJC_$_INSTANCE_METHODS__TtC18RollbarCrashReportP33_7FFAE222EEA03028C0A0EA7AEC39C83716RFC3339Formatter (in test.dwarf) + 0

0x0000000100092c60: __OBJC_$_CLASS_METHODS_KSCrashInstReportField (in test.dwarf) + 0

0x0000000100092c78: __OBJC_$_CLASS_METHODS_KSCrashInstallationConsole (in test.dwarf) + 0

0x0000000100092c90: __OBJC_$_CLASS_METHODS_KSCrashInstallationEmail (in test.dwarf) + 0

0x0000000100092ca8: __OBJC_$_CLASS_METHODS_KSCrashInstallationHockey (in test.dwarf) + 0

0x0000000100092cc0: __OBJC_$_CLASS_METHODS_KSCrashInstallationQuincy (in test.dwarf) + 0

0x0000000100092cd8: __OBJC_$_CLASS_METHODS_KSCrashInstallationStandard (in test.dwarf) + 0

0x0000000100092cf0: __OBJC_$_CLASS_METHODS_KSCrashInstallationVictory (in test.dwarf) + 0

0x0000000100092d08: __OBJC_$_INSTANCE_METHODS_KSCrashInstReportField (in test.dwarf) + 0

0x0000000100092db8: __OBJC_$_INSTANCE_METHODS_KSCrashInstallation(Alert) (in test.dwarf) + 0

0x0000000100092f20: __OBJC_$_INSTANCE_METHODS_KSCrashInstallationBaseQuincyHockey (in test.dwarf) + 0

0x0000000100093040: __OBJC_$_INSTANCE_METHODS_KSCrashInstallationConsole (in test.dwarf) + 0

0x0000000100093078: __OBJC_$_INSTANCE_METHODS_KSCrashInstallationEmail (in test.dwarf) + 0

0x0000000100093140: __OBJC_$_INSTANCE_METHODS_KSCrashInstallationHockey (in test.dwarf) + 0

0x0000000100093188: __OBJC_$_INSTANCE_METHODS_KSCrashInstallationQuincy (in test.dwarf) + 0

0x00000001000931d0: __OBJC_$_INSTANCE_METHODS_KSCrashInstallationStandard (in test.dwarf) + 0

0x0000000100093218: __OBJC_$_INSTANCE_METHODS_KSCrashInstallationVictory (in test.dwarf) + 0

0x0000000100093290: __OBJC_$_CLASS_METHODS_KSCrash (in test.dwarf) + 0

0x0000000100093310: __OBJC_$_CLASS_METHODS_KSCrashDoctor (in test.dwarf) + 0

0x0000000100093328: __OBJC_$_INSTANCE_METHODS_KSCrash (in test.dwarf) + 0

0x0000000100093628: __OBJC_$_INSTANCE_METHODS_KSCrashDoctor (in test.dwarf) + 0

0x0000000100093738: __OBJC_$_INSTANCE_METHODS_KSCrashDoctorFunctionCall (in test.dwarf) + 0

0x0000000100093798: __OBJC_$_INSTANCE_METHODS_KSCrashDoctorParam (in test.dwarf) + 0

0x0000000100093840: __OBJC_$_INSTANCE_METHODS_KSCrashDeadlockMonitor (in test.dwarf) + 0

0x00000001000938d0: __OBJC_$_CLASS_METHODS_KSJSONCodec (in test.dwarf) + 0

0x0000000100093900: __OBJC_$_CLASS_METHODS_NSError(SimpleConstructor) (in test.dwarf) + 0

0x0000000100093930: __OBJC_$_INSTANCE_METHODS_KSJSONCodec (in test.dwarf) + 0

0x0000000100093a50: __OBJC_$_CLASS_METHODS_KSCrashAlertViewProcess (in test.dwarf) + 0

0x0000000100093a68: __OBJC_$_CLASS_METHODS_KSCrashFilterSets (in test.dwarf) + 0

0x0000000100093a80: __OBJC_$_CLASS_METHODS_KSCrashReportFilterAlert (in test.dwarf) + 0

0x0000000100093a98: __OBJC_$_CLASS_METHODS_KSCrashReportFilterAppleFmt (in test.dwarf) + 0

0x0000000100093ab8: __OBJC_$_CLASS_METHODS_KSCrashReportFilterCombine (in test.dwarf) + 0

0x0000000100093ad8: __OBJC_$_CLASS_METHODS_KSCrashReportFilterConcatenate (in test.dwarf) + 0

0x0000000100093af0: __OBJC_$_CLASS_METHODS_KSCrashReportFilterDataToString (in test.dwarf) + 0

0x0000000100093b08: __OBJC_$_CLASS_METHODS_KSCrashReportFilterGZipCompress (in test.dwarf) + 0

0x0000000100093b20: __OBJC_$_CLASS_METHODS_KSCrashReportFilterGZipDecompress (in test.dwarf) + 0

0x0000000100093b38: __OBJC_$_CLASS_METHODS_KSCrashReportFilterJSONDecode (in test.dwarf) + 0

0x0000000100093b50: __OBJC_$_CLASS_METHODS_KSCrashReportFilterJSONEncode (in test.dwarf) + 0

0x0000000100093b68: __OBJC_$_CLASS_METHODS_KSCrashReportFilterObjectForKey (in test.dwarf) + 0

0x0000000100093b80: __OBJC_$_CLASS_METHODS_KSCrashReportFilterPassthrough (in test.dwarf) + 0

0x0000000100093b98: __OBJC_$_CLASS_METHODS_KSCrashReportFilterPipeline (in test.dwarf) + 0

0x0000000100093bb0: __OBJC_$_CLASS_METHODS_KSCrashReportFilterStringToData (in test.dwarf) + 0

0x0000000100093bc8: __OBJC_$_CLASS_METHODS_KSCrashReportFilterStringify (in test.dwarf) + 0

0x0000000100093be0: __OBJC_$_CLASS_METHODS_KSCrashReportFilterSubset (in test.dwarf) + 0

0x0000000100093bf8: __OBJC_$_INSTANCE_METHODS_KSCrashAlertViewProcess (in test.dwarf) + 0

0x0000000100093c88: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterAlert (in test.dwarf) + 0

0x0000000100093d18: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterAppleFmt (in test.dwarf) + 0

0x0000000100093eb8: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterCombine (in test.dwarf) + 0

0x0000000100093f20: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterConcatenate (in test.dwarf) + 0

0x0000000100093f88: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterDataToString (in test.dwarf) + 0

0x0000000100093fa0: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterGZipCompress (in test.dwarf) + 0

0x0000000100093fd8: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterGZipDecompress (in test.dwarf) + 0

0x0000000100093ff0: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterJSONDecode (in test.dwarf) + 0

0x0000000100094028: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterJSONEncode (in test.dwarf) + 0

0x0000000100094060: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterObjectForKey (in test.dwarf) + 0

0x00000001000940c0: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterPassthrough (in test.dwarf) + 0

0x00000001000940d8: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterPipeline (in test.dwarf) + 0

0x0000000100094138: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterStringToData (in test.dwarf) + 0

0x0000000100094150: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterStringify (in test.dwarf) + 0

0x0000000100094170: __OBJC_$_INSTANCE_METHODS_KSCrashReportFilterSubset (in test.dwarf) + 0

0x00000001000941c0: __OBJC_$_INSTANCE_METHODS_NSArray(DeepSearch) (in test.dwarf) + 0

0x0000000100094210: __OBJC_$_INSTANCE_METHODS_NSData(KSGZip) (in test.dwarf) + 0

0x0000000100094230: __OBJC_$_INSTANCE_METHODS_NSDictionary(DeepSearch|Rollbar) (in test.dwarf) + 0

0x0000000100094290: __OBJC_$_CLASS_METHODS_KSCString (in test.dwarf) + 0

0x00000001000942c8: __OBJC_$_CLASS_METHODS_KSHTTPMultipartPostBody (in test.dwarf) + 0

0x00000001000942e0: __OBJC_$_CLASS_METHODS_KSHTTPPostField (in test.dwarf) + 0

0x00000001000942f8: __OBJC_$_CLASS_METHODS_KSHTTPRequestSender (in test.dwarf) + 0

0x0000000100094310: __OBJC_$_CLASS_METHODS_KSReachabilityKSCrash (in test.dwarf) + 0

0x0000000100094330: __OBJC_$_CLASS_METHODS_KSReachableOperationKSCrash (in test.dwarf) + 0

0x0000000100094348: __OBJC_$_INSTANCE_METHODS_KSCString (in test.dwarf) + 0

0x00000001000943a8: __OBJC_$_INSTANCE_METHODS_KSHTTPMultipartPostBody (in test.dwarf) + 0

0x0000000100094438: __OBJC_$_INSTANCE_METHODS_KSHTTPPostField (in test.dwarf) + 0

0x0000000100094488: __OBJC_$_INSTANCE_METHODS_KSHTTPRequestSender (in test.dwarf) + 0

0x00000001000944a8: __OBJC_$_INSTANCE_METHODS_KSReachabilityKSCrash (in test.dwarf) + 0

0x00000001000945c8: __OBJC_$_INSTANCE_METHODS_KSReachableOperationKSCrash (in test.dwarf) + 0

0x0000000100094600: __OBJC_$_INSTANCE_METHODS_NSMutableData(AppendUTF8) (in test.dwarf) + 0

0x0000000100094620: __OBJC_$_INSTANCE_METHODS_NSString(URLEncode) (in test.dwarf) + 0

0x0000000100094638: __OBJC_$_CLASS_METHODS_KSCrashMailProcess (in test.dwarf) + 0

0x0000000100094650: __OBJC_$_CLASS_METHODS_KSCrashReportSinkConsole (in test.dwarf) + 0

0x0000000100094668: __OBJC_$_CLASS_METHODS_KSCrashReportSinkEMail (in test.dwarf) + 0

0x0000000100094680: __OBJC_$_CLASS_METHODS_KSCrashReportSinkHockey (in test.dwarf) + 0

0x0000000100094698: __OBJC_$_CLASS_METHODS_KSCrashReportSinkQuincy (in test.dwarf) + 0

0x00000001000946b0: __OBJC_$_CLASS_METHODS_KSCrashReportSinkStandard (in test.dwarf) + 0

0x00000001000946c8: __OBJC_$_CLASS_METHODS_KSCrashReportSinkVictory (in test.dwarf) + 0

0x00000001000946e0: __OBJC_$_INSTANCE_METHODS_KSCrashMailProcess (in test.dwarf) + 0

0x0000000100094770: __OBJC_$_INSTANCE_METHODS_KSCrashReportSinkConsole (in test.dwarf) + 0

0x0000000100094790: __OBJC_$_INSTANCE_METHODS_KSCrashReportSinkEMail (in test.dwarf) + 0

0x0000000100094838: __OBJC_$_INSTANCE_METHODS_KSCrashReportSinkHockey (in test.dwarf) + 0

0x0000000100094888: __OBJC_$_INSTANCE_METHODS_KSCrashReportSinkQuincy (in test.dwarf) + 0

0x00000001000949d8: __OBJC_$_INSTANCE_METHODS_KSCrashReportSinkStandard (in test.dwarf) + 0

0x0000000100094a40: __OBJC_$_INSTANCE_METHODS_KSCrashReportSinkVictory (in test.dwarf) + 0

0x0000000100094ad8: __OBJC_$_CLASS_METHODS_NSDate(Rollbar) (in test.dwarf) + 0

0x0000000100094af0: __OBJC_$_CLASS_METHODS_NSJSONSerialization(Rollbar) (in test.dwarf) + 0

0x0000000100094b20: __OBJC_$_CLASS_METHODS_RollbarBundleUtil (in test.dwarf) + 0

0x0000000100094b38: __OBJC_$_CLASS_METHODS_RollbarCachesDirectory (in test.dwarf) + 0

0x0000000100094b70: __OBJC_$_CLASS_METHODS_RollbarCrashReportUtil (in test.dwarf) + 0

0x0000000100094ba0: __OBJC_$_CLASS_METHODS_RollbarDTO(CustomData|Protected) (in test.dwarf) + 0

0x0000000100094be8: __OBJC_$_CLASS_METHODS_RollbarFileIOUtil (in test.dwarf) + 0

0x0000000100094c18: __OBJC_$_CLASS_METHODS_RollbarFileReader (in test.dwarf) + 0

0x0000000100094c30: __OBJC_$_CLASS_METHODS_RollbarFileWriter (in test.dwarf) + 0

0x0000000100094c60: __OBJC_$_CLASS_METHODS_RollbarHostingProcessUtil (in test.dwarf) + 0

0x0000000100094c80: __OBJC_$_CLASS_METHODS_RollbarMemoryStatsDescriptors (in test.dwarf) + 0

0x0000000100094ca0: __OBJC_$_CLASS_METHODS_RollbarMemoryUtil (in test.dwarf) + 0

0x0000000100094d18: __OBJC_$_CLASS_METHODS_RollbarOsUtil (in test.dwarf) + 0

0x0000000100094d50: __OBJC_$_CLASS_METHODS_RollbarPredicateBuilder (in test.dwarf) + 0

0x0000000100094db8: __OBJC_$_CLASS_METHODS_RollbarReceptionist (in test.dwarf) + 0

0x0000000100094dd0: __OBJC_$_CLASS_METHODS_RollbarTaskDispatcher (in test.dwarf) + 0

0x0000000100094de8: __OBJC_$_CLASS_METHODS_RollbarTriStateFlagUtil (in test.dwarf) + 0

0x0000000100094e08: __OBJC_$_INSTANCE_METHODS_NSDate(Rollbar) (in test.dwarf) + 0

0x0000000100094e20: __OBJC_$_INSTANCE_METHODS_NSObject(Rollbar) (in test.dwarf) + 0

0x0000000100094e38: __OBJC_$_INSTANCE_METHODS_RollbarDTO(CustomData|Protected) (in test.dwarf) + 0

0x00000001000950c0: __OBJC_$_INSTANCE_METHODS_RollbarEntity (in test.dwarf) + 0

0x00000001000950f0: __OBJC_$_INSTANCE_METHODS_RollbarEntityBuilder (in test.dwarf) + 0

0x0000000100095128: __OBJC_$_INSTANCE_METHODS_RollbarFileReader (in test.dwarf) + 0

0x00000001000951a8: __OBJC_$_INSTANCE_METHODS_RollbarMemoryStatsDescriptors (in test.dwarf) + 0

0x00000001000951e0: __OBJC_$_INSTANCE_METHODS_RollbarReceptionist (in test.dwarf) + 0

0x0000000100095210: __OBJC_$_INSTANCE_METHODS_RollbarTaskDispatcher (in test.dwarf) + 0

0x0000000100095264: module descriptor  (in test.dwarf) + 0

0x00000001000952a4: nominal type descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000952cc: module descriptor  (in test.dwarf) + 0

0x00000001000952d8: protocol conformance descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x0000000100095304: protocol conformance descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x0000000100095340: protocol conformance descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x0000000100095374: protocol conformance descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000953a0: protocol conformance descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000953ec: protocol conformance descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x0000000100095430: ___swift_reflection_version (in test.dwarf) + 0

0x0000000100095478: module descriptor  (in test.dwarf) + 0

0x0000000100095490: nominal type descriptor for ContentView (in test.dwarf) + 0

0x00000001000954ac: protocol conformance descriptor for ContentView (in test.dwarf) + 0

0x0000000100095600: nominal type descriptor for ExampleError (in test.dwarf) + 0

0x0000000100095624: nominal type descriptor for Example (in test.dwarf) + 0

0x0000000100095640: opaque type descriptor for <<opaque return type of ContentView.body>> (in test.dwarf) + 0

0x0000000100095668: protocol conformance descriptor for ExampleError (in test.dwarf) + 0

0x00000001000956a8: protocol conformance descriptor for ExampleError (in test.dwarf) + 0

0x00000001000956d0: protocol conformance descriptor for ExampleError (in test.dwarf) + 0

0x0000000100095724: nominal type descriptor for AppDelegate (in test.dwarf) + 0

0x0000000100095758: method descriptor for AppDelegate.accessToken.getter (in test.dwarf) + 0

0x0000000100095760: method descriptor for AppDelegate.accessToken.setter (in test.dwarf) + 0

0x0000000100095768: method descriptor for AppDelegate.accessToken.modify (in test.dwarf) + 0

0x0000000100095770: method descriptor for AppDelegate.$accessToken.getter (in test.dwarf) + 0

0x0000000100095778: method descriptor for AppDelegate.application(_:didFinishLaunchingWithOptions:) (in test.dwarf) + 0

0x0000000100095790: nominal type descriptor for iosAppSwiftApp (in test.dwarf) + 0

0x00000001000957b8: protocol conformance descriptor for iosAppSwiftApp (in test.dwarf) + 0

0x00000001000957f8: opaque type descriptor for <<opaque return type of iosAppSwiftApp.body>> (in test.dwarf) + 0

0x0000000100095910: protocol conformance descriptor for Diagnostic (in test.dwarf) + 0

0x0000000100095954: module descriptor  (in test.dwarf) + 0

0x000000010009596c: nominal type descriptor for Diagnostic (in test.dwarf) + 0

0x0000000100095988: protocol conformance descriptor for Diagnostic (in test.dwarf) + 0

0x00000001000959c0: ___swift_reflection_version (in test.dwarf) + 0

0x0000000100095a00: nominal type descriptor for RollbarCrashDiagnosticFilter (in test.dwarf) + 0

0x0000000100095a34: method descriptor for RollbarCrashDiagnosticFilter.filterReports(_:onCompletion:) (in test.dwarf) + 0

0x0000000100095a68: nominal type descriptor for SwiftDiagnosisFormatter (in test.dwarf) + 0

0x0000000100095afc: nominal type descriptor for Formatted (in test.dwarf) + 0

0x0000000100095b38: generic type metadata pattern for Formatted (in test.dwarf) + 0

0x0000000100095b48: protocol conformance descriptor for Formatted<A> (in test.dwarf) + 0

0x0000000100095b90: nominal type descriptor for RollbarCrashFormattingFilter (in test.dwarf) + 0

0x0000000100095bc4: method descriptor for RollbarCrashFormattingFilter.filterReports(_:onCompletion:) (in test.dwarf) + 0

0x0000000100095c28: property descriptor for Result.isSuccess (in test.dwarf) + 0

0x0000000100095c28: property descriptor for Result.isSuccess (in test.dwarf) + 0

0x0000000100095c28: property descriptor for Result.isSuccess (in test.dwarf) + 0

0x0000000100095c28: property descriptor for Result.isSuccess (in test.dwarf) + 0

0x0000000100095c28: property descriptor for Result.isSuccess (in test.dwarf) + 0

0x0000000100095c44: protocol conformance descriptor for Address (in test.dwarf) + 0

0x0000000100095c6c: protocol conformance descriptor for Address (in test.dwarf) + 0

0x0000000100095c94: protocol conformance descriptor for Address (in test.dwarf) + 0

0x0000000100095cdc: protocol conformance descriptor for Address (in test.dwarf) + 0

0x0000000100095d1c: protocol conformance descriptor for Address (in test.dwarf) + 0

0x0000000100095d44: protocol conformance descriptor for Address (in test.dwarf) + 0

0x0000000100095d6c: property descriptor for Address.description (in test.dwarf) + 0

0x0000000100095d6c: property descriptor for Address.description (in test.dwarf) + 0

0x0000000100095d6c: property descriptor for Address.description (in test.dwarf) + 0

0x0000000100095d6c: property descriptor for Address.description (in test.dwarf) + 0

0x0000000100095d78: nominal type descriptor for Address (in test.dwarf) + 0

0x0000000100095d94: anonymous descriptor Address.CodingKeys (in test.dwarf) + 0

0x0000000100095da8: nominal type descriptor for Address.CodingKeys (in test.dwarf) + 0

0x0000000100095dc4: anonymous descriptor Address.MemoryCodingKeys (in test.dwarf) + 0

0x0000000100095de4: nominal type descriptor for Address.MemoryCodingKeys (in test.dwarf) + 0

0x0000000100095e00: anonymous descriptor Address.BinaryCodingKeys (in test.dwarf) + 0

0x0000000100095e24: nominal type descriptor for Address.BinaryCodingKeys (in test.dwarf) + 0

0x0000000100095e40: protocol conformance descriptor for Address.BinaryCodingKeys (in test.dwarf) + 0

0x0000000100095e68: protocol conformance descriptor for Address.BinaryCodingKeys (in test.dwarf) + 0

0x0000000100095e90: protocol conformance descriptor for Address.BinaryCodingKeys (in test.dwarf) + 0

0x0000000100095ed0: protocol conformance descriptor for Address.BinaryCodingKeys (in test.dwarf) + 0

0x0000000100095ef8: protocol conformance descriptor for Address.MemoryCodingKeys (in test.dwarf) + 0

0x0000000100095f20: protocol conformance descriptor for Address.MemoryCodingKeys (in test.dwarf) + 0

0x0000000100095f48: protocol conformance descriptor for Address.MemoryCodingKeys (in test.dwarf) + 0

0x0000000100095f88: protocol conformance descriptor for Address.MemoryCodingKeys (in test.dwarf) + 0

0x0000000100095fb0: protocol conformance descriptor for Address.CodingKeys (in test.dwarf) + 0

0x0000000100095fd8: protocol conformance descriptor for Address.CodingKeys (in test.dwarf) + 0

0x0000000100096000: protocol conformance descriptor for Address.CodingKeys (in test.dwarf) + 0

0x0000000100096040: protocol conformance descriptor for Address.CodingKeys (in test.dwarf) + 0

0x0000000100096068: protocol conformance descriptor for Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000960b8: protocol conformance descriptor for Address.BinaryCodingKeys (in test.dwarf) + 0

0x0000000100096108: protocol conformance descriptor for Address.CodingKeys (in test.dwarf) + 0

0x000000010009616c: nominal type descriptor for BinaryImage (in test.dwarf) + 0

0x00000001000961f8: protocol conformance descriptor for BinaryImage (in test.dwarf) + 0

0x0000000100096230: protocol conformance descriptor for CPU (in test.dwarf) + 0

0x0000000100096264: nominal type descriptor for CPU (in test.dwarf) + 0

0x0000000100096288: nominal type descriptor for Frame (in test.dwarf) + 0

0x00000001000962a4: protocol conformance descriptor for Frame (in test.dwarf) + 0

0x00000001000962ec: nominal type descriptor for Frame.Unsymbolicated (in test.dwarf) + 0

0x0000000100096318: nominal type descriptor for Frame.Symbolicated (in test.dwarf) + 0

0x000000010009633c: property descriptor for Dictionary<>.description (in test.dwarf) + 0

0x0000000100096350: anonymous descriptor ISO8601Formatter (in test.dwarf) + 0

0x0000000100096374: nominal type descriptor for ISO8601Formatter (in test.dwarf) + 0

0x00000001000963a0: anonymous descriptor RFC3339Formatter (in test.dwarf) + 0

0x00000001000963c4: nominal type descriptor for RFC3339Formatter (in test.dwarf) + 0

0x00000001000963f0: protocol conformance descriptor for Timestamp (in test.dwarf) + 0

0x0000000100096418: protocol conformance descriptor for Timestamp (in test.dwarf) + 0

0x0000000100096440: protocol conformance descriptor for Timestamp (in test.dwarf) + 0

0x0000000100096480: protocol conformance descriptor for Timestamp (in test.dwarf) + 0

0x00000001000964c8: protocol conformance descriptor for Timestamp (in test.dwarf) + 0

0x00000001000964f0: anonymous descriptor Timestamp.CodingKeys (in test.dwarf) + 0

0x0000000100096504: nominal type descriptor for Timestamp.CodingKeys (in test.dwarf) + 0

0x000000010009652c: nominal type descriptor for Timestamp (in test.dwarf) + 0

0x0000000100096554: protocol conformance descriptor for Timestamp (in test.dwarf) + 0

0x000000010009658c: protocol conformance descriptor for Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000965b4: protocol conformance descriptor for Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000965dc: protocol conformance descriptor for Timestamp.CodingKeys (in test.dwarf) + 0

0x000000010009661c: protocol conformance descriptor for Timestamp.CodingKeys (in test.dwarf) + 0

0x0000000100096644: protocol conformance descriptor for Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000966d0: _g_hexNybbles (in test.dwarf) + 0

0x0000000100096746: _g_hexNybbles (in test.dwarf) + 0

0x0000000100096758: _g_hexConversion (in test.dwarf) + 0

0x0000000100096b78: _g_nameChars (in test.dwarf) + 0

0x0000000100096f78: _g_fatalSignals (in test.dwarf) + 0

0x0000000100096f98: _g_continuationByteCount (in test.dwarf) + 0

0x0000000100097098: _g_hexConversion (in test.dwarf) + 0

0x0000000100097498: _g_printableControlChars (in test.dwarf) + 0

0x00000001000978c0: swift::MANGLING_MODULE_OBJC (in test.dwarf) + 0

0x00000001000978c4: swift::MANGLING_MODULE_CLANG_IMPORTER (in test.dwarf) + 0

0x00000001000978d4: swift::BUILTIN_TYPE_NAME_BRIDGEOBJECT (in test.dwarf) + 0

0x00000001000978e9: swift::BUILTIN_TYPE_NAME_UNSAFEVALUEBUFFER (in test.dwarf) + 0

0x0000000100097903: swift::BUILTIN_TYPE_NAME_FLOAT (in test.dwarf) + 0

0x0000000100097912: swift::BUILTIN_TYPE_NAME_INT (in test.dwarf) + 0

0x000000010009791e: swift::BUILTIN_TYPE_NAME_INTLITERAL (in test.dwarf) + 0

0x0000000100097932: swift::BUILTIN_TYPE_NAME_VEC (in test.dwarf) + 0

0x000000010009793e: swift::BUILTIN_TYPE_NAME_UNKNOWNOBJECT (in test.dwarf) + 0

0x0000000100097954: swift::BUILTIN_TYPE_NAME_NATIVEOBJECT (in test.dwarf) + 0

0x0000000100097969: swift::BUILTIN_TYPE_NAME_RAWPOINTER (in test.dwarf) + 0

0x000000010009797c: swift::BUILTIN_TYPE_NAME_SILTOKEN (in test.dwarf) + 0

0x000000010009798d: swift::BUILTIN_TYPE_NAME_WORD (in test.dwarf) + 0

0x00000001000979a0: typeinfo name for swift::Demangle::NodeFactory (in test.dwarf) + 0

0x00000001000979bf: typeinfo name for swift::Demangle::Demangler (in test.dwarf) + 0

0x00000001000979db: typeinfo name for std::__1::bad_function_call (in test.dwarf) + 0

0x0000000100097ce3: (anonymous namespace)::operator<<(swift::Demangle::DemanglerPrinter&, (anonymous namespace)::QuotedString const&)::Hexdigit (in test.dwarf) + 0

0x0000000100097e01: swift::STDLIB_NAME (in test.dwarf) + 0

0x0000000100097e07: swift::MANGLING_MODULE_OBJC (in test.dwarf) + 0

0x0000000100097e0b: swift::MANGLING_MODULE_CLANG_IMPORTER (in test.dwarf) + 0

0x0000000100097e60: _symbolic _____ So29UIApplicationLaunchOptionsKeya (in test.dwarf) + 0

0x0000000100097e66: _symbolic So8NSStringC (in test.dwarf) + 0

0x0000000100097e74: _symbolic SS (in test.dwarf) + 0

0x0000000100097e78: _symbolic $sSY (in test.dwarf) + 0

0x0000000100097e7e: _associated conformance So29UIApplicationLaunchOptionsKeyas20_SwiftNewtypeWrapperSCSY (in test.dwarf) + 0

0x0000000100097e86: _associated conformance So29UIApplicationLaunchOptionsKeyas20_SwiftNewtypeWrapperSCs35_HasCustomAnyHashableRepresentation (in test.dwarf) + 0

0x0000000100097e8e: _symbolic $ss21_ObjectiveCBridgeableP (in test.dwarf) + 0

0x0000000100097eaa: _associated conformance So29UIApplicationLaunchOptionsKeyaSHSCSQ (in test.dwarf) + 0

0x0000000100097eb2: _symbolic _____ 12Rollbar_Demo11ContentViewV (in test.dwarf) + 0

0x0000000100097eb8: _symbolic _____ySSG 7SwiftUI10AppStorageV (in test.dwarf) + 0

0x0000000100097ec2: _symbolic _____ 12Rollbar_Demo7ExampleV (in test.dwarf) + 0

0x0000000100097ec8: _associated conformance 12Rollbar_Demo11ContentViewV7SwiftUI0D0AA4BodyAdEP_AdE (in test.dwarf) + 0

0x0000000100097ed0: _symbolic _____y_____y_____yAAy__________G_AAyAAyAAyAAyAAy_____yAAy_____yADG_____y_____SgGG______Qo_AIy_____GGAIy_____SgGGAIySiSgGG_____ySSGGAEG_____yAAyAByACy_____yACyAAy_____y_____yADG______Qo_ALG_AAyA8_AEGA8_A9_tGG_A3_yACyA8__A8_A9_A8_A8_A9_A8_A8_A8_A9_tGGtGGAEGGtGGAEG 7SwiftUI15ModifiedContentV AA6VStackV AA9TupleViewV AA4TextV AA14_PaddingLayoutV AA0G0PAAE14textFieldStyleyQrqd__AA0hlM0Rd__lFQO AA0hL0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA013RoundedBorderhlM0V AA0H9AlignmentO AI4CaseO AA012_ValueActionQ0V AA06ScrollG0V AA5GroupV AmAE06buttonM0yQrqd__AA015PrimitiveButtonM0Rd__lFQO AA6ButtonV AA014BorderedButtonM0V (in test.dwarf) + 0

0x0000000100097fd8: _symbolic $s7SwiftUI4ViewP (in test.dwarf) + 0

0x0000000100097fea: _symbolic _____y_____y_____y__________G_ACyACyACyACyACy_____yACy_____yADG_____y_____SgGG______Qo_AIy_____GGAIy_____SgGGAIySiSgGG_____ySSGGAEG_____yACyAAyABy_____yAByACy_____y_____yADG______Qo_ALG_ACyA8_AEGA8_A9_tGG_A3_yAByA8__A8_A9_A8_A8_A9_A8_A8_A8_A9_tGGtGGAEGGtGG 7SwiftUI6VStackV AA9TupleViewV AA15ModifiedContentV AA4TextV AA14_PaddingLayoutV AA0E0PAAE14textFieldStyleyQrqd__AA0hlM0Rd__lFQO AA0hL0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA013RoundedBorderhlM0V AA0H9AlignmentO AI4CaseO AA012_ValueActionQ0V AA06ScrollE0V AA5GroupV AmAE06buttonM0yQrqd__AA015PrimitiveButtonM0Rd__lFQO AA6ButtonV AA014BorderedButtonM0V (in test.dwarf) + 0

0x00000001000980ec: _symbolic _____y___________y_____y__________G_ADyADyADyADyADy_____yADy_____yAEG_____y_____SgGG______Qo_AJy_____GGAJy_____SgGGAJySiSgGG_____ySSGGAFG_____yADy_____yACy_____yACyADy_____y_____yAEG______Qo_AMG_ADyA10_AFGA10_A11_tGG_A5_yACyA10__A10_A11_A10_A10_A11_A10_A10_A10_A11_tGGtGGAFGGtGG 7SwiftUI13_VariadicViewO4TreeV AA13_VStackLayoutV AA05TupleD0V AA15ModifiedContentV AA4TextV AA08_PaddingG0V AA0D0PAAE14textFieldStyleyQrqd__AA0knO0Rd__lFQO AA0kN0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA013RoundedBorderknO0V AA0K9AlignmentO AM4CaseO AA012_ValueActionS0V AA06ScrollD0V AA0F0V AA5GroupV AqAE06buttonO0yQrqd__AA015PrimitiveButtonO0Rd__lFQO AA6ButtonV AA014BorderedButtonO0V (in test.dwarf) + 0

0x0000000100098204: _symbolic _____y_____y_____y_____y_____yADyABy_____y_____y_____G______Qo______y_____SgGG_AByAO_____GAoQtGG_AEyADyAO_Aoq2oq3oQtGGtGGAPGG 7SwiftUI10ScrollViewV AA15ModifiedContentV AA6VStackV AA05TupleD0V AA5GroupV AA0D0PAAE11buttonStyleyQrqd__AA015PrimitiveButtonK0Rd__lFQO AA0M0V AA4TextV AA08BorderedmK0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA14_PaddingLayoutV (in test.dwarf) + 0

0x0000000100098282: _symbolic _____Sg 7SwiftUI4TextV4CaseO (in test.dwarf) + 0

0x000000010009828a: _symbolic _____y_____G 7SwiftUI9TextFieldV AA0C0V (in test.dwarf) + 0

0x0000000100098298: _symbolic _____y_____y_____G_____y_____SgGG 7SwiftUI15ModifiedContentV AA9TextFieldV AA0E0V AA30_EnvironmentKeyWritingModifierV AA5ColorV (in test.dwarf) + 0

0x00000001000982ba: _symbolic _____y_____y_____y_____G_____y_____SgGG______Qo_ 7SwiftUI4ViewPAAE14textFieldStyleyQrqd__AA04TexteF0Rd__lFQO AA15ModifiedContentV AA0gE0V AA0G0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA013RoundedBordergeF0V (in test.dwarf) + 0

0x00000001000982ec: _symbolic _____y_____yAAy_____y_____G_____y_____SgGG______Qo_AEy_____GG 7SwiftUI15ModifiedContentV AA4ViewPAAE14textFieldStyleyQrqd__AA04TextgH0Rd__lFQO AA0iG0V AA0I0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA013RoundedBorderigH0V AA0I9AlignmentO (in test.dwarf) + 0

0x000000010009832a: _symbolic _____yAAy_____yAAy_____y_____G_____y_____SgGG______Qo_AEy_____GGAEy_____SgGG 7SwiftUI15ModifiedContentV AA4ViewPAAE14textFieldStyleyQrqd__AA04TextgH0Rd__lFQO AA0iG0V AA0I0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA013RoundedBorderigH0V AA0I9AlignmentO AK4CaseO (in test.dwarf) + 0

0x0000000100098378: _symbolic _____yAAyAAy_____yAAy_____y_____G_____y_____SgGG______Qo_AEy_____GGAEy_____SgGGAEySiSgGG 7SwiftUI15ModifiedContentV AA4ViewPAAE14textFieldStyleyQrqd__AA04TextgH0Rd__lFQO AA0iG0V AA0I0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA013RoundedBorderigH0V AA0I9AlignmentO AK4CaseO (in test.dwarf) + 0

0x00000001000983d2: _symbolic _____yAAyAAyAAy_____yAAy_____y_____G_____y_____SgGG______Qo_AEy_____GGAEy_____SgGGAEySiSgGG_____ySSGG 7SwiftUI15ModifiedContentV AA4ViewPAAE14textFieldStyleyQrqd__AA04TextgH0Rd__lFQO AA0iG0V AA0I0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA013RoundedBorderigH0V AA0I9AlignmentO AK4CaseO AA012_ValueActionM0V (in test.dwarf) + 0

0x0000000100098438: _symbolic _____yAAyAAyAAyAAy_____yAAy_____y_____G_____y_____SgGG______Qo_AEy_____GGAEy_____SgGGAEySiSgGG_____ySSGG_____G 7SwiftUI15ModifiedContentV AA4ViewPAAE14textFieldStyleyQrqd__AA04TextgH0Rd__lFQO AA0iG0V AA0I0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA013RoundedBorderigH0V AA0I9AlignmentO AK4CaseO AA012_ValueActionM0V AA14_PaddingLayoutV (in test.dwarf) + 0

0x00000001000984a8: _symbolic _____ 7SwiftUI17EnvironmentValuesV (in test.dwarf) + 0

0x00000001000984ae: _symbolic _____Sg 7SwiftUI5ColorV (in test.dwarf) + 0

0x00000001000984b6: _symbolic _____y_____SgG 7SwiftUI30_EnvironmentKeyWritingModifierV AA5ColorV (in test.dwarf) + 0

0x00000001000984c6: _symbolic _____ 7SwiftUI13TextAlignmentO (in test.dwarf) + 0

0x00000001000984cc: _symbolic _____y_____SgG 7SwiftUI30_EnvironmentKeyWritingModifierV AA4TextV4CaseO (in test.dwarf) + 0

0x00000001000984dc: _symbolic SiSg (in test.dwarf) + 0

0x00000001000984e2: _symbolic SSIegg_ (in test.dwarf) + 0

0x00000001000984ea: _symbolic _____y_____y_____y_____yACyAAy_____y_____y_____G______Qo______y_____SgGG_AAyAN_____GAnPtGG_ADyACyAN_Anp2np3nPtGGtGGAOG 7SwiftUI15ModifiedContentV AA6VStackV AA9TupleViewV AA5GroupV AA0G0PAAE11buttonStyleyQrqd__AA015PrimitiveButtonJ0Rd__lFQO AA0L0V AA4TextV AA08BorderedlJ0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA14_PaddingLayoutV (in test.dwarf) + 0

0x0000000100098562: _symbolic _____y_____y_____yABy_____y_____y_____y_____G______Qo______y_____SgGG_ADyAN_____GAnPtGG_ACyAByAN_Anp2np3nPtGGtGG 7SwiftUI6VStackV AA9TupleViewV AA5GroupV AA15ModifiedContentV AA0E0PAAE11buttonStyleyQrqd__AA015PrimitiveButtonJ0Rd__lFQO AA0L0V AA4TextV AA08BorderedlJ0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA14_PaddingLayoutV (in test.dwarf) + 0

0x00000001000985d4: _symbolic _____y__________G_AAyAAyAAyAAyAAy_____yAAy_____yABG_____y_____SgGG______Qo_AGy_____GGAGy_____SgGGAGySiSgGG_____ySSGGACG_____yAAy_____y_____y_____yA2_yAAy_____y_____yABG______Qo_AJG_AAyA8_ACGA8_A9_tGG_A3_yA2_yA8__A8_A9_A8_A8_A9_A8_A8_A8_A9_tGGtGGACGGt 7SwiftUI15ModifiedContentV AA4TextV AA14_PaddingLayoutV AA4ViewPAAE14textFieldStyleyQrqd__AA0ejK0Rd__lFQO AA0eJ0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA013RoundedBorderejK0V AA0E9AlignmentO AE4CaseO AA012_ValueActionO0V AA06ScrollH0V AA6VStackV AA05TupleH0V AA5GroupV AiAE06buttonK0yQrqd__AA015PrimitiveButtonK0Rd__lFQO AA6ButtonV AA014BorderedButtonK0V (in test.dwarf) + 0

0x00000001000986d0: _symbolic _____y_____y_____y_____y_____y_____G______Qo______y_____SgGG_AmCyAM_____GA2mo3mOtGG 7SwiftUI5GroupV AA9TupleViewV AA15ModifiedContentV AA0E0PAAE11buttonStyleyQrqd__AA015PrimitiveButtonI0Rd__lFQO AA0K0V AA4TextV AA08BorderedkI0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA14_PaddingLayoutV (in test.dwarf) + 0

0x0000000100098724: _symbolic _____y_____y_____y_____y_____y_____G______Qo______y_____SgGG_ACyAM_____GAmOtGG 7SwiftUI5GroupV AA9TupleViewV AA15ModifiedContentV AA0E0PAAE11buttonStyleyQrqd__AA015PrimitiveButtonI0Rd__lFQO AA0K0V AA4TextV AA08BorderedkI0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA14_PaddingLayoutV (in test.dwarf) + 0

0x0000000100098774: _symbolic _____y___________y_____yACy_____y_____y_____y_____G______Qo______y_____SgGG_AEyAO_____GAoQtGG_ADyACyAO_Aoq2oq3oQtGGtGG 7SwiftUI13_VariadicViewO4TreeV AA13_VStackLayoutV AA05TupleD0V AA5GroupV AA15ModifiedContentV AA0D0PAAE11buttonStyleyQrqd__AA015PrimitiveButtonM0Rd__lFQO AA0O0V AA4TextV AA08BorderedoM0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA08_PaddingG0V (in test.dwarf) + 0

0x00000001000987ec: _symbolic _____y_____y_____y_____y_____y_____G______Qo______y_____SgGG_ACyAM_____GAmOtGG_AAyAByAM_Amo2mo3mOtGGt 7SwiftUI5GroupV AA9TupleViewV AA15ModifiedContentV AA0E0PAAE11buttonStyleyQrqd__AA015PrimitiveButtonI0Rd__lFQO AA0K0V AA4TextV AA08BorderedkI0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA14_PaddingLayoutV (in test.dwarf) + 0

0x0000000100098852: _symbolic _____yAAy_____y_____y_____G______Qo______y_____SgGG_____G 7SwiftUI15ModifiedContentV AA4ViewPAAE11buttonStyleyQrqd__AA015PrimitiveButtonG0Rd__lFQO AA0I0V AA4TextV AA08BorderediG0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA14_PaddingLayoutV (in test.dwarf) + 0

0x000000010009888c: _symbolic _____y_____G 7SwiftUI6ButtonV AA4TextV (in test.dwarf) + 0

0x000000010009889a: _symbolic _____y_____y_____G______Qo_ 7SwiftUI4ViewPAAE11buttonStyleyQrqd__AA015PrimitiveButtonE0Rd__lFQO AA0G0V AA4TextV AA08BorderedgE0V (in test.dwarf) + 0

0x00000001000988b6: _symbolic _____y_____y_____y_____G______Qo______y_____SgGG 7SwiftUI15ModifiedContentV AA4ViewPAAE11buttonStyleyQrqd__AA015PrimitiveButtonG0Rd__lFQO AA0I0V AA4TextV AA08BorderediG0V AA30_EnvironmentKeyWritingModifierV AA5ColorV (in test.dwarf) + 0

0x00000001000988e8: _symbolic _____y_____y_____y_____G______Qo______y_____SgGG_AkAyAK_____GA2km3kMt 7SwiftUI15ModifiedContentV AA4ViewPAAE11buttonStyleyQrqd__AA015PrimitiveButtonG0Rd__lFQO AA0I0V AA4TextV AA08BorderediG0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA14_PaddingLayoutV (in test.dwarf) + 0

0x000000010009892e: _symbolic _____yypG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098938: _symbolic Si_Sit (in test.dwarf) + 0

0x0000000100098940: _symbolic _____ySS_SitG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x000000010009894e: _symbolic SS_Sit (in test.dwarf) + 0

0x0000000100098956: _symbolic _____ySSSiG s18_DictionaryStorageC (in test.dwarf) + 0

0x0000000100098962: _symbolic _____ySSG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x000000010009896c: _symbolic _____ySdG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098976: _symbolic _____y_____y_____y_____G______Qo______y_____SgGG_AAyAK_____GAkMt 7SwiftUI15ModifiedContentV AA4ViewPAAE11buttonStyleyQrqd__AA015PrimitiveButtonG0Rd__lFQO AA0I0V AA4TextV AA08BorderediG0V AA30_EnvironmentKeyWritingModifierV AA5ColorV AA14_PaddingLayoutV (in test.dwarf) + 0

0x00000001000989b8: _symbolic SSSg (in test.dwarf) + 0

0x00000001000989be: _symbolic _____ySS_SStG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x00000001000989cc: _symbolic _____ySSypG s18_DictionaryStorageC (in test.dwarf) + 0

0x00000001000989d8: _symbolic SS3key_yp5valuetSg (in test.dwarf) + 0

0x00000001000989ec: _symbolic _____yS2SG s18_DictionaryStorageC (in test.dwarf) + 0

0x00000001000989f8: _symbolic _____ySS_yptG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098a06: _symbolic SS_ypt (in test.dwarf) + 0

0x0000000100098a0e: _symbolic Sny_____G SS5IndexV (in test.dwarf) + 0

0x0000000100098a18: _symbolic _____ySsG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098a22: _symbolic x (in test.dwarf) + 0

0x0000000100098a24: _get_witness_table 7SwiftUI15ModifiedContentVyAA6VStackVyAA9TupleViewVyACyAA4TextVAA14_PaddingLayoutVG_ACyACyACyACyACyAA0G0PAAE14textFieldStyleyQrqd__AA0hlM0Rd__lFQOyACyAA0hL0VyAIGAA30_EnvironmentKeyWritingModifierVyAA5ColorVSgGG_AA013RoundedBorderhlM0VQo_AUyAA0H9AlignmentOGGAUyAI4CaseOSgGGAUySiSgGGAA012_ValueActionQ0VySSGGAKGAA06ScrollG0VyACyAEyAGyAA5GroupVyAGyACyAnAE06buttonM0yQrqd__AA015PrimitiveButtonM0Rd__lFQOyAA6ButtonVyAIG_AA014BorderedButtonM0VQo_AYG_ACyA31_AKGA31_A32_tGG_A22_yAGyA31__A31_A32_A31_A31_A32_A31_A31_A31_A32_tGGtGGAKGGtGGAKGAaMHPA42_AaMHPyHC_AkA0gQ0HPyHCHC.62 (in test.dwarf) + 0

0x0000000100098a2c: _symbolic _____ 12Rollbar_Demo12ExampleErrorO (in test.dwarf) + 0

0x0000000100098a32: _symbolic So13RollbarLoggerC (in test.dwarf) + 0

0x0000000100098a46: _associated conformance 12Rollbar_Demo12ExampleErrorOSHAASQ (in test.dwarf) + 0

0x0000000100098a4e: _symbolic So8NSObjectC (in test.dwarf) + 0

0x0000000100098a5c: _symbolic _____ 12Rollbar_Demo11AppDelegateC (in test.dwarf) + 0

0x0000000100098a62: _symbolic _____y_____G 7SwiftUI28UIApplicationDelegateAdaptorV 12Rollbar_Demo03AppD0C (in test.dwarf) + 0

0x0000000100098a70: _symbolic _____ 12Rollbar_Demo011iosAppSwiftD0V (in test.dwarf) + 0

0x0000000100098a76: _associated conformance 12Rollbar_Demo011iosAppSwiftD0V0E2UI0D0AA4BodyAdEP_AD5Scene (in test.dwarf) + 0

0x0000000100098a7e: _symbolic _____y_____G 7SwiftUI11WindowGroupV 12Rollbar_Demo11ContentViewV (in test.dwarf) + 0

0x0000000100098a8c: _symbolic $s7SwiftUI3AppP (in test.dwarf) + 0

0x0000000100098a9c: _symbolic _____yyp_yptG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098aaa: _get_witness_table 7SwiftUI11WindowGroupVy12Rollbar_Demo11ContentViewVGAA5SceneHPyHC.2 (in test.dwarf) + 0

0x0000000100098ac0: _symbolic _____ 18RollbarCrashReport10DiagnosticV (in test.dwarf) + 0

0x0000000100098ac6: _symbolic SDySSypG (in test.dwarf) + 0

0x0000000100098ad0: _symbolic $sSY (in test.dwarf) + 0

0x0000000100098ad6: _symbolic _____ySS_yptG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098ae4: _symbolic SS_ypt (in test.dwarf) + 0

0x0000000100098aec: _symbolic _____ 18RollbarCrashReport0aB16DiagnosticFilterC (in test.dwarf) + 0

0x0000000100098af2: _symbolic So11NSFormatterC (in test.dwarf) + 0

0x0000000100098b04: _symbolic _____ 18RollbarCrashReport23SwiftDiagnosisFormatterC (in test.dwarf) + 0

0x0000000100098b0a: _symbolic Sny_____G SS5IndexV (in test.dwarf) + 0

0x0000000100098b14: _symbolic _____ySsG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098b1e: _symbolic _____ySSSgG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098b2a: _symbolic SSSg (in test.dwarf) + 0

0x0000000100098b30: _symbolic _____y_____ySSGG s23_ContiguousArrayStorageC s0B5SliceV (in test.dwarf) + 0

0x0000000100098b42: _symbolic _____ySSG s10ArraySliceV (in test.dwarf) + 0

0x0000000100098b4c: _symbolic _____y_____G s23_ContiguousArrayStorageC 18RollbarCrashReport11BinaryImageV (in test.dwarf) + 0

0x0000000100098b5a: _symbolic _____y_____G s23_ContiguousArrayStorageC 18RollbarCrashReport5FrameO (in test.dwarf) + 0

0x0000000100098b68: _symbolic _____yypG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098b72: _symbolic _____y_____y_____ySSGSo7NSErrorCGG s23_ContiguousArrayStorageC s6ResultO 18RollbarCrashReport9FormattedV (in test.dwarf) + 0

0x0000000100098b96: _symbolic _____y_____ySSGSo7NSErrorCG s6ResultO 18RollbarCrashReport9FormattedV (in test.dwarf) + 0

0x0000000100098bb2: _symbolic _____ 18RollbarCrashReport11BinaryImageV (in test.dwarf) + 0

0x0000000100098bb8: _symbolic Sb (in test.dwarf) + 0

0x0000000100098bbc: _get_witness_table SaySSGSlHPyHC.2 (in test.dwarf) + 0

0x0000000100098bc4: _symbolic SaySDySSypGG (in test.dwarf) + 0

0x0000000100098bd2: _symbolic _____y_____G s23_ContiguousArrayStorageC s12StaticStringV (in test.dwarf) + 0

0x0000000100098be0: _symbolic _____ySSypG s18_DictionaryStorageC (in test.dwarf) + 0

0x0000000100098bec: _symbolic _____ySDySSypGG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098bfc: _symbolic _____y_____G s23_ContiguousArrayStorageC 18RollbarCrashReport10DiagnosticV (in test.dwarf) + 0

0x0000000100098c0a: _symbolic _____y_____ySDySSypGSo7NSErrorCGG s23_ContiguousArrayStorageC s6ResultO (in test.dwarf) + 0

0x0000000100098c2c: _symbolic _____ySDySSypGSo7NSErrorCG s6ResultO (in test.dwarf) + 0

0x0000000100098c48: _symbolic _____ySSG 18RollbarCrashReport9FormattedV (in test.dwarf) + 0

0x0000000100098c52: _symbolic _____ 18RollbarCrashReport9FormattedV (in test.dwarf) + 0

0x0000000100098c58: _symbolic xSg (in test.dwarf) + 0

0x0000000100098c60: _symbolic So8NSObjectC (in test.dwarf) + 0

0x0000000100098c6e: _symbolic _____ 18RollbarCrashReport0aB16FormattingFilterC (in test.dwarf) + 0

0x0000000100098c74: _symbolic So7NSArrayCSg_____So7NSErrorCSgIeyByyy_ 10ObjectiveC8ObjCBoolV (in test.dwarf) + 0

0x0000000100098c9c: _symbolic _____ySSGSg 18RollbarCrashReport9FormattedV (in test.dwarf) + 0

0x0000000100098ca8: _symbolic _____y_____ySSGSgG s23_ContiguousArrayStorageC 18RollbarCrashReport9FormattedV (in test.dwarf) + 0

0x0000000100098cbc: _symbolic x (in test.dwarf) + 0

0x0000000100098cbe: _symbolic qd__ (in test.dwarf) + 0

0x0000000100098cc4: _symbolic _____yqd__G 18RollbarCrashReport9FormattedV (in test.dwarf) + 0

0x0000000100098cd0: _symbolic 7ElementSTQz (in test.dwarf) + 0

0x0000000100098ce0: _generic environment SlRzSyRd__18RollbarCrashReport9FormattedVyqd__G7ElementRtzr__l (in test.dwarf) + 0

0x0000000100098d10: _symbolic qd__Sg (in test.dwarf) + 0

0x0000000100098d18: _symbolic Say_____ySSGG 18RollbarCrashReport9FormattedV (in test.dwarf) + 0

0x0000000100098d26: _symbolic _____ySaySSGG s14JoinedSequenceV (in test.dwarf) + 0

0x0000000100098d34: _symbolic SaySSG (in test.dwarf) + 0

0x0000000100098d3c: _symbolic _____ySJG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098d46: _symbolic _____ySSG s8RepeatedV (in test.dwarf) + 0

0x0000000100098d50: _symbolic _____y__________G s18_DictionaryStorageC s11AnyHashableV 18RollbarCrashReport7AddressO (in test.dwarf) + 0

0x0000000100098d62: _symbolic _____3key______5valuetSg s11AnyHashableV 18RollbarCrashReport7AddressO (in test.dwarf) + 0

0x0000000100098d7c: _symbolic _____ySS_____G s18_DictionaryStorageC 18RollbarCrashReport7AddressO (in test.dwarf) + 0

0x0000000100098d8c: _symbolic ypSg (in test.dwarf) + 0

0x0000000100098d92: _symbolic _____Sg_ABt 10Foundation3URLV (in test.dwarf) + 0

0x0000000100098d9e: _symbolic _____Sg 10Foundation3URLV (in test.dwarf) + 0

0x0000000100098da6: _symbolic _____ySnySiGG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098dc0: _generic environment SyRzs23CustomStringConvertibleRd__r__l (in test.dwarf) + 0

0x0000000100098de4: _symbolic SS (in test.dwarf) + 0

0x0000000100098de8: _symbolic SS3key_yp5valuet (in test.dwarf) + 0

0x0000000100098e04: _symbolic _____ySS3key_yp5valuetG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098e1c: _symbolic _____Sg 18RollbarCrashReport9TimestampV (in test.dwarf) + 0

0x0000000100098e24: _symbolic _____ySSG s23_ContiguousArrayStorageC (in test.dwarf) + 0

0x0000000100098e2e: _symbolic xSbIegnd_ (in test.dwarf) + 0

0x0000000100098e38: _symbolic B0 (in test.dwarf) + 0

0x0000000100098e3c: _symbolic xq_Iegnr_ (in test.dwarf) + 0

0x0000000100098e46: _symbolic q_ (in test.dwarf) + 0

0x0000000100098e4a: _symbolic B1 (in test.dwarf) + 0

0x0000000100098e4e: _symbolic SaySsG (in test.dwarf) + 0

0x0000000100098e56: _symbolic _____ SS5IndexV (in test.dwarf) + 0

0x0000000100098e5c: _symbolic _____Sg 10Foundation4UUIDV (in test.dwarf) + 0

0x0000000100098e64: _symbolic _____y_____ySSGG s23_ContiguousArrayStorageC 18RollbarCrashReport9FormattedV (in test.dwarf) + 0

0x0000000100098e76: _symbolic _____y_____G s22KeyedEncodingContainerV 18RollbarCrashReport7AddressO16BinaryCodingKeys33_03DBA4DA685E2E355C38405C78A77835LLO (in test.dwarf) + 0

0x0000000100098e84: _symbolic _____y_____G s22KeyedEncodingContainerV 18RollbarCrashReport7AddressO16MemoryCodingKeys33_03DBA4DA685E2E355C38405C78A77835LLO (in test.dwarf) + 0

0x0000000100098e92: _symbolic _____y_____G s22KeyedEncodingContainerV 18RollbarCrashReport7AddressO10CodingKeys33_03DBA4DA685E2E355C38405C78A77835LLO (in test.dwarf) + 0

0x0000000100098ea0: _associated conformance 18RollbarCrashReport7AddressOSLAASQ (in test.dwarf) + 0

0x0000000100098ea8: _associated conformance 18RollbarCrashReport7AddressOSHAASQ (in test.dwarf) + 0

0x0000000100098eb0: _symbolic _____ 18RollbarCrashReport7AddressO (in test.dwarf) + 0

0x0000000100098eb6: _symbolic Su (in test.dwarf) + 0

0x0000000100098eba: _symbolic _____ 18RollbarCrashReport7AddressO16BinaryCodingKeys33_03DBA4DA685E2E355C38405C78A77835LLO (in test.dwarf) + 0

0x0000000100098ec0: _symbolic _____ 18RollbarCrashReport7AddressO16MemoryCodingKeys33_03DBA4DA685E2E355C38405C78A77835LLO (in test.dwarf) + 0

0x0000000100098ec6: _symbolic _____ 18RollbarCrashReport7AddressO10CodingKeys33_03DBA4DA685E2E355C38405C78A77835LLO (in test.dwarf) + 0

0x0000000100098ecc: _associated conformance 18RollbarCrashReport7AddressO16BinaryCodingKeys33_03DBA4DA685E2E355C38405C78A77835LLOSHAASQ (in test.dwarf) + 0

0x0000000100098ed4: _associated conformance 18RollbarCrashReport7AddressO16MemoryCodingKeys33_03DBA4DA685E2E355C38405C78A77835LLOSHAASQ (in test.dwarf) + 0

0x0000000100098edc: _associated conformance 18RollbarCrashReport7AddressO10CodingKeys33_03DBA4DA685E2E355C38405C78A77835LLOSHAASQ (in test.dwarf) + 0

0x0000000100098ee4: _associated conformance 18RollbarCrashReport7AddressO16MemoryCodingKeys33_03DBA4DA685E2E355C38405C78A77835LLOs0F3KeyAAs28CustomDebugStringConvertible (in test.dwarf) + 0

0x0000000100098eec: _associated conformance 18RollbarCrashReport7AddressO16MemoryCodingKeys33_03DBA4DA685E2E355C38405C78A77835LLOs0F3KeyAAs23CustomStringConvertible (in test.dwarf) + 0

0x0000000100098ef4: _associated conformance 18RollbarCrashReport7AddressO16BinaryCodingKeys33_03DBA4DA685E2E355C38405C78A77835LLOs0F3KeyAAs28CustomDebugStringConvertible (in test.dwarf) + 0

0x0000000100098efc: _associated conformance 18RollbarCrashReport7AddressO16BinaryCodingKeys33_03DBA4DA685E2E355C38405C78A77835LLOs0F3KeyAAs23CustomStringConvertible (in test.dwarf) + 0

0x0000000100098f04: _associated conformance 18RollbarCrashReport7AddressO10CodingKeys33_03DBA4DA685E2E355C38405C78A77835LLOs0E3KeyAAs28CustomDebugStringConvertible (in test.dwarf) + 0

0x0000000100098f0c: _associated conformance 18RollbarCrashReport7AddressO10CodingKeys33_03DBA4DA685E2E355C38405C78A77835LLOs0E3KeyAAs23CustomStringConvertible (in test.dwarf) + 0

0x0000000100098f14: _symbolic _____y_____G s22KeyedDecodingContainerV 18RollbarCrashReport7AddressO16BinaryCodingKeys33_03DBA4DA685E2E355C38405C78A77835LLO (in test.dwarf) + 0

0x0000000100098f22: _symbolic _____y_____G s22KeyedDecodingContainerV 18RollbarCrashReport7AddressO16MemoryCodingKeys33_03DBA4DA685E2E355C38405C78A77835LLO (in test.dwarf) + 0

0x0000000100098f30: _symbolic _____y_____G s22KeyedDecodingContainerV 18RollbarCrashReport7AddressO10CodingKeys33_03DBA4DA685E2E355C38405C78A77835LLO (in test.dwarf) + 0

0x0000000100098f3e: _symbolic ypXmT______t s13DecodingErrorO7ContextV (in test.dwarf) + 0

0x0000000100098f4c: _symbolic _____ 10Foundation3URLV (in test.dwarf) + 0

0x0000000100098f52: _symbolic _____ 10Foundation4UUIDV (in test.dwarf) + 0

0x0000000100098f58: _symbolic Si5major_Si5minorSi8revisiont (in test.dwarf) + 0

0x0000000100098f76: _symbolic _____ 18RollbarCrashReport3CPUV (in test.dwarf) + 0

0x0000000100098f7c: _symbolic _____5start_AA3endt 18RollbarCrashReport7AddressO (in test.dwarf) + 0

0x0000000100098f90: _symbolic _____y_____4mask_SS4nametG s23_ContiguousArrayStorageC s5Int32V (in test.dwarf) + 0

0x0000000100098fac: _symbolic _____4mask_SS4namet s5Int32V (in test.dwarf) + 0

0x0000000100098fc0: _symbolic _____ s5Int32V (in test.dwarf) + 0

0x0000000100098fc6: _symbolic _____ 18RollbarCrashReport5FrameO (in test.dwarf) + 0

0x0000000100098fcc: _symbolic _____ 18RollbarCrashReport5FrameO12SymbolicatedV (in test.dwarf) + 0

0x0000000100098fd2: _symbolic _____ 18RollbarCrashReport5FrameO14UnsymbolicatedV (in test.dwarf) + 0

0x0000000100098fd8: _symbolic SS4name______4addrt 18RollbarCrashReport7AddressO (in test.dwarf) + 0

0x0000000100098fec: _symbolic So15NSDateFormatterC (in test.dwarf) + 0

0x0000000100099002: _symbolic _____ 18RollbarCrashReport16ISO8601Formatter33_7FFAE222EEA03028C0A0EA7AEC39C837LLC (in test.dwarf) + 0

0x0000000100099008: _symbolic _____ 18RollbarCrashReport16RFC3339Formatter33_7FFAE222EEA03028C0A0EA7AEC39C837LLC (in test.dwarf) + 0

0x000000010009900e: _associated conformance 18RollbarCrashReport9TimestampVSHAASQ (in test.dwarf) + 0

0x0000000100099016: _associated conformance 18RollbarCrashReport9TimestampVSLAASQ (in test.dwarf) + 0

0x000000010009901e: _symbolic _____y_____G s22KeyedDecodingContainerV 18RollbarCrashReport9TimestampV10CodingKeys33_7FFAE222EEA03028C0A0EA7AEC39C837LLO (in test.dwarf) + 0

0x000000010009902c: _symbolic _____y_____G s22KeyedEncodingContainerV 18RollbarCrashReport9TimestampV10CodingKeys33_7FFAE222EEA03028C0A0EA7AEC39C837LLO (in test.dwarf) + 0

0x000000010009903a: _symbolic _____Sg 10Foundation8TimeZoneV (in test.dwarf) + 0

0x0000000100099042: _symbolic _____ 18RollbarCrashReport9TimestampV (in test.dwarf) + 0

0x0000000100099048: _symbolic _____ 10Foundation4DateV (in test.dwarf) + 0

0x000000010009904e: _symbolic _____ 18RollbarCrashReport9TimestampV10CodingKeys33_7FFAE222EEA03028C0A0EA7AEC39C837LLO (in test.dwarf) + 0

0x0000000100099054: _associated conformance 18RollbarCrashReport9TimestampV10CodingKeys33_7FFAE222EEA03028C0A0EA7AEC39C837LLOSHAASQ (in test.dwarf) + 0

0x000000010009905c: _associated conformance 18RollbarCrashReport9TimestampV10CodingKeys33_7FFAE222EEA03028C0A0EA7AEC39C837LLOs0E3KeyAAs28CustomDebugStringConvertible (in test.dwarf) + 0

0x0000000100099064: _associated conformance 18RollbarCrashReport9TimestampV10CodingKeys33_7FFAE222EEA03028C0A0EA7AEC39C837LLOs0E3KeyAAs23CustomStringConvertible (in test.dwarf) + 0

0x000000010009906c: reflection metadata builtin descriptor UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x0000000100099080: reflection metadata builtin descriptor Address (in test.dwarf) + 0

0x0000000100099094: reflection metadata builtin descriptor Frame (in test.dwarf) + 0

0x0000000100099250: reflection metadata field descriptor UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x000000010009926c: reflection metadata field descriptor ContentView (in test.dwarf) + 0

0x0000000100099294: reflection metadata field descriptor ExampleError (in test.dwarf) + 0

0x00000001000992c8: reflection metadata field descriptor Example (in test.dwarf) + 0

0x00000001000992e4: reflection metadata field descriptor AppDelegate (in test.dwarf) + 0

0x0000000100099300: reflection metadata field descriptor iosAppSwiftApp (in test.dwarf) + 0

0x000000010009931c: reflection metadata field descriptor Diagnostic (in test.dwarf) + 0

0x0000000100099344: reflection metadata field descriptor RollbarCrashDiagnosticFilter (in test.dwarf) + 0

0x0000000100099354: reflection metadata field descriptor SwiftDiagnosisFormatter (in test.dwarf) + 0

0x0000000100099364: reflection metadata field descriptor Formatted (in test.dwarf) + 0

0x0000000100099380: reflection metadata field descriptor RollbarCrashFormattingFilter (in test.dwarf) + 0

0x0000000100099390: reflection metadata field descriptor Address (in test.dwarf) + 0

0x00000001000993b8: reflection metadata field descriptor Address.BinaryCodingKeys (in test.dwarf) + 0

0x00000001000993d4: reflection metadata field descriptor Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000993f0: reflection metadata field descriptor Address.CodingKeys (in test.dwarf) + 0

0x0000000100099418: reflection metadata field descriptor BinaryImage (in test.dwarf) + 0

0x0000000100099494: reflection metadata field descriptor CPU (in test.dwarf) + 0

0x00000001000994bc: reflection metadata field descriptor Frame (in test.dwarf) + 0

0x00000001000994f0: reflection metadata field descriptor Frame.Symbolicated (in test.dwarf) + 0

0x0000000100099524: reflection metadata field descriptor Frame.Unsymbolicated (in test.dwarf) + 0

0x0000000100099558: reflection metadata field descriptor ISO8601Formatter (in test.dwarf) + 0

0x0000000100099568: reflection metadata field descriptor RFC3339Formatter (in test.dwarf) + 0

0x0000000100099578: reflection metadata field descriptor Timestamp (in test.dwarf) + 0

0x0000000100099594: reflection metadata field descriptor Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000995b0: reflection metadata associated type descriptor UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000995c8: reflection metadata associated type descriptor UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000995e0: reflection metadata associated type descriptor ContentView (in test.dwarf) + 0

0x00000001000995f8: reflection metadata associated type descriptor iosAppSwiftApp (in test.dwarf) + 0

0x0000000100099610: reflection metadata associated type descriptor Diagnostic (in test.dwarf) + 0

0x0000000100099628: reflection metadata associated type descriptor BinaryImage (in test.dwarf) + 0

0x0000000100099640: reflection metadata associated type descriptor Frame (in test.dwarf) + 0

0x0000000100099658: reflection metadata associated type descriptor Timestamp (in test.dwarf) + 0

0x00000001000ab206: swift::Demangle::Demangler::demangleOperatorIdentifier()::op_char_table (in test.dwarf) + 0

0x00000001000acf1a: (anonymous namespace)::OldDemangler::demangleIdentifier(llvm::Optional<swift::Demangle::Node::Kind>)::op_char_table (in test.dwarf) + 0

0x00000001000afd1c: GCC_except_table4 (in test.dwarf) + 0

0x00000001000afd7c: GCC_except_table9 (in test.dwarf) + 0

0x00000001000afdb8: GCC_except_table11 (in test.dwarf) + 0

0x00000001000afde0: GCC_except_table2 (in test.dwarf) + 0

0x00000001000afe20: GCC_except_table13 (in test.dwarf) + 0

0x00000001000afe58: GCC_except_table0 (in test.dwarf) + 0

0x00000001000afe80: GCC_except_table8 (in test.dwarf) + 0

0x00000001000afeb8: GCC_except_table9 (in test.dwarf) + 0

0x00000001000afee8: GCC_except_table14 (in test.dwarf) + 0

0x00000001000aff30: GCC_except_table19 (in test.dwarf) + 0

0x00000001000aff5c: GCC_except_table17 (in test.dwarf) + 0

0x00000001000aff70: GCC_except_table22 (in test.dwarf) + 0

0x00000001000aff90: GCC_except_table25 (in test.dwarf) + 0

0x00000001000affa0: GCC_except_table26 (in test.dwarf) + 0

0x00000001000affb0: GCC_except_table27 (in test.dwarf) + 0

0x00000001000affc0: GCC_except_table7 (in test.dwarf) + 0

0x00000001000afff4: GCC_except_table42 (in test.dwarf) + 0

0x00000001000b0080: GCC_except_table6 (in test.dwarf) + 0

0x00000001000b00f8: GCC_except_table2 (in test.dwarf) + 0

0x00000001000b010c: GCC_except_table0 (in test.dwarf) + 0

0x00000001000b0120: GCC_except_table3 (in test.dwarf) + 0

0x00000001000b0130: GCC_except_table15 (in test.dwarf) + 0

0x00000001000b0150: GCC_except_table3 (in test.dwarf) + 0

0x00000001000b0164: GCC_except_table9 (in test.dwarf) + 0

0x00000001000b0190: GCC_except_table34 (in test.dwarf) + 0

0x00000001000b01bc: GCC_except_table20 (in test.dwarf) + 0

0x00000001000b01d0: GCC_except_table7 (in test.dwarf) + 0

0x00000001000b01e4: GCC_except_table13 (in test.dwarf) + 0

0x00000001000b0204: GCC_except_table16 (in test.dwarf) + 0

0x00000001000b0214: GCC_except_table63 (in test.dwarf) + 0

0x00000001000b022c: GCC_except_table70 (in test.dwarf) + 0

0x00000001000b02a0: GCC_except_table124 (in test.dwarf) + 0

0x00000001000b02b8: GCC_except_table3 (in test.dwarf) + 0

0x00000001000b02cc: GCC_except_table4 (in test.dwarf) + 0

0x00000001000b02e4: GCC_except_table5 (in test.dwarf) + 0

0x00000001000b0324: GCC_except_table13 (in test.dwarf) + 0

0x00000001000b0340: GCC_except_table26 (in test.dwarf) + 0

0x00000001000b0358: GCC_except_table0 (in test.dwarf) + 0

0x00000001000b03e8: GCC_except_table8 (in test.dwarf) + 0

0x00000001000b0438: GCC_except_table22 (in test.dwarf) + 0

0x00000001000b0454: GCC_except_table29 (in test.dwarf) + 0

0x00000001000b0480: GCC_except_table32 (in test.dwarf) + 0

0x00000001000b04d0: GCC_except_table2 (in test.dwarf) + 0

0x00000001000b04e8: GCC_except_table4 (in test.dwarf) + 0

0x00000001000b5338: __swift_FORCE_LOAD_$_swiftFoundation_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b5340: __swift_FORCE_LOAD_$_swiftObjectiveC_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b5348: __swift_FORCE_LOAD_$_swiftDarwin_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b5350: __swift_FORCE_LOAD_$_swiftCoreFoundation_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b5358: __swift_FORCE_LOAD_$_swiftDispatch_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b5360: __swift_FORCE_LOAD_$_swiftos_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b5368: __swift_FORCE_LOAD_$_swiftUniformTypeIdentifiers_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b5370: __swift_FORCE_LOAD_$_swiftUIKit_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b5378: __swift_FORCE_LOAD_$_swiftCoreGraphics_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b5380: __swift_FORCE_LOAD_$_swiftCoreImage_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b5388: __swift_FORCE_LOAD_$_swiftMetal_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b5390: __swift_FORCE_LOAD_$_swiftQuartzCore_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b5398: __swift_FORCE_LOAD_$_swiftFileProvider_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b53a0: __swift_FORCE_LOAD_$_swiftDataDetection_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b53a8: __swift_FORCE_LOAD_$_swiftOSLog_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b53b0: __swift_FORCE_LOAD_$_swiftCompatibility56_$_Rollbar_Demo (in test.dwarf) + 0

0x00000001000b53b8: full type metadata for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000b5488: value witness table for ContentView (in test.dwarf) + 0

0x00000001000b54e0: full type metadata for ContentView (in test.dwarf) + 0

0x00000001000b54e8: type metadata for ContentView (in test.dwarf) + 0

0x00000001000b5780: value witness table for ExampleError (in test.dwarf) + 0

0x00000001000b57f0: full type metadata for ExampleError (in test.dwarf) + 0

0x00000001000b57f8: type metadata for ExampleError (in test.dwarf) + 0

0x00000001000b5808: full type metadata for Example (in test.dwarf) + 0

0x00000001000b5810: type metadata for Example (in test.dwarf) + 0

0x00000001000b58e8: _block_descriptor (in test.dwarf) + 0

0x00000001000b5a48: ___block_descriptor_32_e32_v28?0"NSArray"8B16"NSError"20l (in test.dwarf) + 0

0x00000001000b5a68: ___block_literal_global (in test.dwarf) + 0

0x00000001000b5a88: ___block_descriptor_32_e5_v8?0l (in test.dwarf) + 0

0x00000001000b5aa8: ___block_literal_global.59 (in test.dwarf) + 0

0x00000001000b5ac8: ___block_literal_global (in test.dwarf) + 0

0x00000001000b5ae8: ___block_descriptor_40_e8_32s_e25_v32?0"NSString"8Q16^B24l (in test.dwarf) + 0

0x00000001000b5b18: ___block_descriptor_40_e15_v32?08Q16^B24l (in test.dwarf) + 0

0x00000001000b5b38: ___block_descriptor_48_e15_v32?08Q16^B24l (in test.dwarf) + 0

0x00000001000b5b58: ___block_descriptor_48_e8_32s_e15_v32?0816^B24l (in test.dwarf) + 0

0x00000001000b5b88: ___block_descriptor_40_e12_v24?08^B16l (in test.dwarf) + 0

0x00000001000b5ba8: ___block_descriptor_40_e8_32s_e5_v8?0l (in test.dwarf) + 0

0x00000001000b5bd8: ___block_descriptor_56_e8_32s40s48r_e46_v32?0"NSData"8"NSURLResponse"16"NSError"24l (in test.dwarf) + 0

0x00000001000b5c08: ___block_literal_global (in test.dwarf) + 0

0x00000001000b5c28: ___block_descriptor_33_e5_v8?0l (in test.dwarf) + 0

0x00000001000b5c48: ___block_descriptor_48_e8_32s_e5_v8?0l (in test.dwarf) + 0

0x00000001000b5c78: ___block_descriptor_48_e8_32s40r_e12_v24?08^B16l (in test.dwarf) + 0

0x00000001000b5ca8: ___block_descriptor_48_e8_32s40s_e5_v8?0l (in test.dwarf) + 0

0x00000001000b5cd8: ___block_descriptor_48_e8_32s40r_e5_v8?0l (in test.dwarf) + 0

0x00000001000b5d08: ___block_descriptor_40_e5_v8?0l (in test.dwarf) + 0

0x00000001000b5d28: ___block_descriptor_48_e8_32s40w_e29_v16?0"RollbarReachability"8l (in test.dwarf) + 0

0x00000001000b5d58: __swift_FORCE_LOAD_$_swiftFoundation_$_RollbarCrashReport (in test.dwarf) + 0

0x00000001000b5d60: __swift_FORCE_LOAD_$_swiftObjectiveC_$_RollbarCrashReport (in test.dwarf) + 0

0x00000001000b5d68: __swift_FORCE_LOAD_$_swiftDarwin_$_RollbarCrashReport (in test.dwarf) + 0

0x00000001000b5d70: __swift_FORCE_LOAD_$_swiftCoreFoundation_$_RollbarCrashReport (in test.dwarf) + 0

0x00000001000b5d78: __swift_FORCE_LOAD_$_swiftDispatch_$_RollbarCrashReport (in test.dwarf) + 0

0x00000001000b5d80: __swift_FORCE_LOAD_$_swiftCompatibilityConcurrency_$_RollbarCrashReport (in test.dwarf) + 0

0x00000001000b5d88: __swift_FORCE_LOAD_$_swiftCompatibility56_$_RollbarCrashReport (in test.dwarf) + 0

0x00000001000b5d90: value witness table for Diagnostic (in test.dwarf) + 0

0x00000001000b5de8: full type metadata for Diagnostic (in test.dwarf) + 0

0x00000001000b5df0: type metadata for Diagnostic (in test.dwarf) + 0

0x00000001000b5e68: value witness table for Formatted (in test.dwarf) + 0

0x00000001000b6008: value witness table for Address (in test.dwarf) + 0

0x00000001000b6078: full type metadata for Address (in test.dwarf) + 0

0x00000001000b6080: type metadata for Address (in test.dwarf) + 0

0x00000001000b6090: value witness table for Address.CodingKeys (in test.dwarf) + 0

0x00000001000b6100: full type metadata for Address.CodingKeys (in test.dwarf) + 0

0x00000001000b6118: value witness table for Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000b6188: full type metadata for Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000b61a0: value witness table for Address.BinaryCodingKeys (in test.dwarf) + 0

0x00000001000b6210: full type metadata for Address.BinaryCodingKeys (in test.dwarf) + 0

0x00000001000b6328: value witness table for CPU (in test.dwarf) + 0

0x00000001000b6380: full type metadata for CPU (in test.dwarf) + 0

0x00000001000b6388: type metadata for CPU (in test.dwarf) + 0

0x00000001000b63b0: value witness table for Frame (in test.dwarf) + 0

0x00000001000b6420: full type metadata for Frame (in test.dwarf) + 0

0x00000001000b6428: type metadata for Frame (in test.dwarf) + 0

0x00000001000b6438: value witness table for Frame.Unsymbolicated (in test.dwarf) + 0

0x00000001000b6490: full type metadata for Frame.Unsymbolicated (in test.dwarf) + 0

0x00000001000b6498: type metadata for Frame.Unsymbolicated (in test.dwarf) + 0

0x00000001000b64b8: value witness table for Frame.Symbolicated (in test.dwarf) + 0

0x00000001000b6510: full type metadata for Frame.Symbolicated (in test.dwarf) + 0

0x00000001000b6518: type metadata for Frame.Symbolicated (in test.dwarf) + 0

0x00000001000b6558: value witness table for Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000b65c8: full type metadata for Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000b66e0: ___block_descriptor_32_e5_v8?0l (in test.dwarf) + 0

0x00000001000b6700: ___block_literal_global (in test.dwarf) + 0

0x00000001000b6720: ___block_literal_global (in test.dwarf) + 0

0x00000001000b6740: ___block_literal_global (in test.dwarf) + 0

0x00000001000b6760: ___block_literal_global.99 (in test.dwarf) + 0

0x00000001000b6780: ___block_literal_global (in test.dwarf) + 0

0x00000001000b67a0: ___block_literal_global (in test.dwarf) + 0

0x00000001000b67c0: ___block_descriptor_32_e5_v8?0l (in test.dwarf) + 0

0x00000001000b67e0: ___block_literal_global (in test.dwarf) + 0

0x00000001000b6800: ___block_descriptor_48_e8_32s40bs_e32_v28?0"NSArray"8B16"NSError"20l (in test.dwarf) + 0

0x00000001000b6830: ___block_descriptor_40_e8_32bs_e32_v28?0"NSArray"8B16"NSError"20l (in test.dwarf) + 0

0x00000001000b6908: _g_monitors (in test.dwarf) + 0

0x00000001000b6998: ___block_descriptor_40_e8_32r_e5_v8?0l (in test.dwarf) + 0

0x00000001000b69c8: ___block_descriptor_32_e5_v8?0l (in test.dwarf) + 0

0x00000001000b69e8: ___block_literal_global (in test.dwarf) + 0

0x00000001000b6a40: _g_registerNames (in test.dwarf) + 0

0x00000001000b6b58: _g_exceptionRegisterNames (in test.dwarf) + 0

0x00000001000b6dc8: _g_taggedClassData (in test.dwarf) + 0

0x00000001000b6f48: _g_fatalSignalData (in test.dwarf) + 0

0x00000001000b7048: _g_sigBusCodes (in test.dwarf) + 0

0x00000001000b7088: _g_sigFPECodes (in test.dwarf) + 0

0x00000001000b7118: _g_sigIllCodes (in test.dwarf) + 0

0x00000001000b71a8: _g_sigSegVCodes (in test.dwarf) + 0

0x00000001000b71d8: _g_sigTrapCodes (in test.dwarf) + 0

0x00000001000b7208: ___block_descriptor_40_e8_32r_e5_v8?0l (in test.dwarf) + 0

0x00000001000b7238: ___block_descriptor_48_e8_32bs40r_e32_v28?0"NSArray"8B16"NSError"20l (in test.dwarf) + 0

0x00000001000b7268: ___block_descriptor_56_e8_32s40s48bs_e5_v8?0l (in test.dwarf) + 0

0x00000001000b7298: ___block_descriptor_32_e11_q24?0816l (in test.dwarf) + 0

0x00000001000b72b8: ___block_literal_global (in test.dwarf) + 0

0x00000001000b7310: ___block_descriptor_56_e8_32s40s48r_e8_v16?08l (in test.dwarf) + 0

0x00000001000b7340: ___block_descriptor_112_e8_32s40s48s56s64s72bs80bs88r96r_e32_v28?0"NSArray"8B16"NSError"20l (in test.dwarf) + 0

0x00000001000b7370: ___block_descriptor_40_e8_32s_e8_v16?08l (in test.dwarf) + 0

0x00000001000b73a0: ___block_descriptor_88_e8_32s40s48bs56bs64r72r_e32_v28?0"NSArray"8B16"NSError"20l (in test.dwarf) + 0

0x00000001000b73d0: ___block_descriptor_56_e8_32s40s48bs_e5_v8?0l (in test.dwarf) + 0

0x00000001000b7400: ___block_descriptor_48_e8_32s40bs_e5_v8?0l (in test.dwarf) + 0

0x00000001000b7430: ___block_descriptor_64_e8_32s40bs48bs56bs_e46_v32?0"NSData"8"NSURLResponse"16"NSError"24l (in test.dwarf) + 0

0x00000001000b7460: ___block_descriptor_44_e8_32s_e5_v8?0l (in test.dwarf) + 0

0x00000001000b7490: ___block_descriptor_40_e8_32s_e5_v8?0l (in test.dwarf) + 0

0x00000001000b74c0: ___block_descriptor_49_e8_32bs_e31_v16?0"KSReachabilityKSCrash"8lu40l8 (in test.dwarf) + 0

0x00000001000b74f0: ___block_descriptor_40_e8_32s_e5_v8?0l (in test.dwarf) + 0

0x00000001000b7520: ___block_descriptor_40_e8_32r_e5_v8?0l (in test.dwarf) + 0

0x00000001000b7550: ___block_descriptor_48_e8_32bs40r_e32_v28?0"NSArray"8B16"NSError"20l (in test.dwarf) + 0

0x00000001000b7580: ___block_descriptor_64_e8_32s40s48s56bs_e5_v8?0l (in test.dwarf) + 0

0x00000001000b75b0: ___block_descriptor_32_e5_v8?0l (in test.dwarf) + 0

0x00000001000b75d0: ___block_literal_global (in test.dwarf) + 0

0x00000001000b75f0: ___block_descriptor_48_e8_32s40bs_e38_v24?0"NSHTTPURLResponse"8"NSData"16l (in test.dwarf) + 0

0x00000001000b7620: ___block_descriptor_56_e8_32s40s48bs_e38_v24?0"NSHTTPURLResponse"8"NSData"16l (in test.dwarf) + 0

0x00000001000b7650: ___block_descriptor_48_e8_32s40bs_e17_v16?0"NSError"8l (in test.dwarf) + 0

0x00000001000b76b0: {vtable(swift::Demangle::NodeFactory)} (in test.dwarf) + 0

0x00000001000b76d8: typeinfo for swift::Demangle::NodeFactory (in test.dwarf) + 0

0x00000001000b76e8: {vtable(swift::Demangle::Demangler)} (in test.dwarf) + 0

0x00000001000b7710: typeinfo for swift::Demangle::Demangler (in test.dwarf) + 0

0x00000001000b7728: typeinfo for std::__1::bad_function_call (in test.dwarf) + 0

0x00000001000b7740: {vtable(std::__1::bad_function_call)} (in test.dwarf) + 0

0x00000001000b7798: ___block_descriptor_64_e8_32s40s48s56s_e5_v8?0l (in test.dwarf) + 0

0x00000001000b77c8: ___block_descriptor_40_e8_32s_e5_v8?0l (in test.dwarf) + 0

0x00000001000b77f8: ___block_descriptor_48_e8_32s_e15_v32?0816^B24l (in test.dwarf) + 0

0x00000001000b7828: ___block_descriptor_40_e5_v8?0l (in test.dwarf) + 0

0x00000001000bdee8: __OBJC_LABEL_PROTOCOL_$_UIApplicationDelegate (in test.dwarf) + 0

0x00000001000bdef8: __OBJC_LABEL_PROTOCOL_$_NSObject (in test.dwarf) + 0

0x00000001000bdf00: __OBJC_LABEL_PROTOCOL_$_RollbarFacadeInitialization (in test.dwarf) + 0

0x00000001000bdf08: __OBJC_LABEL_PROTOCOL_$_RollbarFacadeConfiguration (in test.dwarf) + 0

0x00000001000bdf10: __OBJC_LABEL_PROTOCOL_$_RollbarFacadeLogging (in test.dwarf) + 0

0x00000001000bdf18: __OBJC_LABEL_PROTOCOL_$_RollbarFacadeTelemetry (in test.dwarf) + 0

0x00000001000bdf20: __OBJC_LABEL_PROTOCOL_$_NSObject (in test.dwarf) + 0

0x00000001000bdf28: __OBJC_LABEL_PROTOCOL_$_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000bdf30: __OBJC_LABEL_PROTOCOL_$_RollbarLogger (in test.dwarf) + 0

0x00000001000bdf40: __OBJC_LABEL_PROTOCOL_$_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000bdf50: __OBJC_LABEL_PROTOCOL_$_NSObject (in test.dwarf) + 0

0x00000001000bdf58: __OBJC_LABEL_PROTOCOL_$_NSObject (in test.dwarf) + 0

0x00000001000bdf60: __OBJC_LABEL_PROTOCOL_$_UIAlertViewDelegate (in test.dwarf) + 0

0x00000001000bdf68: __OBJC_LABEL_PROTOCOL_$_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000bdf70: __OBJC_LABEL_PROTOCOL_$_NSObject (in test.dwarf) + 0

0x00000001000bdf78: __OBJC_LABEL_PROTOCOL_$_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000bdf80: __OBJC_LABEL_PROTOCOL_$_MFMailComposeViewControllerDelegate (in test.dwarf) + 0

0x00000001000bdf88: __OBJC_LABEL_PROTOCOL_$_NSObject (in test.dwarf) + 0

0x00000001000bdf90: __OBJC_LABEL_PROTOCOL_$_RollbarJSONSupport (in test.dwarf) + 0

0x00000001000bdf98: __OBJC_LABEL_PROTOCOL_$_NSCopying (in test.dwarf) + 0

0x00000001000bdfa0: __OBJC_LABEL_PROTOCOL_$_NSMutableCopying (in test.dwarf) + 0

0x00000001000bdfb0: __unnamed_array_storage (in test.dwarf) + 0

0x00000001000c0000: __PROTOCOLS__TtC12Rollbar_Demo11AppDelegate (in test.dwarf) + 0

0x00000001000c0010: __METACLASS_DATA__TtC12Rollbar_Demo11AppDelegate (in test.dwarf) + 0

0x00000001000c0058: __PROTOCOLS__TtC12Rollbar_Demo11AppDelegate.1 (in test.dwarf) + 0

0x00000001000c0068: __IVARS__TtC12Rollbar_Demo11AppDelegate (in test.dwarf) + 0

0x00000001000c0090: __OBJC_$_PROTOCOL_REFS_UIApplicationDelegate (in test.dwarf) + 0

0x00000001000c00a8: __OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_UIApplicationDelegate (in test.dwarf) + 0

0x00000001000c05d8: __OBJC_$_PROP_LIST_UIApplicationDelegate (in test.dwarf) + 0

0x00000001000c05f0: __OBJC_$_PROTOCOL_METHOD_TYPES_UIApplicationDelegate (in test.dwarf) + 0

0x00000001000c07a8: __OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject (in test.dwarf) + 0

0x00000001000c0978: __OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject (in test.dwarf) + 0

0x00000001000c0998: __OBJC_$_PROP_LIST_NSObject (in test.dwarf) + 0

0x00000001000c09e0: __OBJC_$_PROTOCOL_METHOD_TYPES_NSObject (in test.dwarf) + 0

0x00000001000c0a80: __OBJC_METACLASS_RO_$_RollbarAppLanguageUtil (in test.dwarf) + 0

0x00000001000c0ac8: __OBJC_CLASS_RO_$_RollbarAppLanguageUtil (in test.dwarf) + 0

0x00000001000c0b10: __OBJC_METACLASS_RO_$_RollbarBody (in test.dwarf) + 0

0x00000001000c0b58: __OBJC_$_PROP_LIST_RollbarBody (in test.dwarf) + 0

0x00000001000c0bb0: __OBJC_CLASS_RO_$_RollbarBody (in test.dwarf) + 0

0x00000001000c0bf8: __OBJC_METACLASS_RO_$_RollbarCallStackFrame (in test.dwarf) + 0

0x00000001000c0c40: __OBJC_$_PROP_LIST_RollbarCallStackFrame (in test.dwarf) + 0

0x00000001000c0cf8: __OBJC_CLASS_RO_$_RollbarCallStackFrame (in test.dwarf) + 0

0x00000001000c0d40: __OBJC_METACLASS_RO_$_RollbarCallStackFrameContext (in test.dwarf) + 0

0x00000001000c0d88: __OBJC_$_PROP_LIST_RollbarCallStackFrameContext (in test.dwarf) + 0

0x00000001000c0db0: __OBJC_CLASS_RO_$_RollbarCallStackFrameContext (in test.dwarf) + 0

0x00000001000c0df8: __OBJC_METACLASS_RO_$_RollbarCaptureIpTypeUtil (in test.dwarf) + 0

0x00000001000c0e40: __OBJC_CLASS_RO_$_RollbarCaptureIpTypeUtil (in test.dwarf) + 0

0x00000001000c0e88: __OBJC_METACLASS_RO_$_RollbarConfig (in test.dwarf) + 0

0x00000001000c0ed0: __OBJC_$_INSTANCE_VARIABLES_RollbarConfig (in test.dwarf) + 0

0x00000001000c0f38: __OBJC_$_PROP_LIST_RollbarConfig (in test.dwarf) + 0

0x00000001000c1010: __OBJC_CLASS_RO_$_RollbarConfig (in test.dwarf) + 0

0x00000001000c1058: __OBJC_METACLASS_RO_$_RollbarMutableConfig (in test.dwarf) + 0

0x00000001000c10a0: __OBJC_$_PROP_LIST_RollbarMutableConfig (in test.dwarf) + 0

0x00000001000c1178: __OBJC_CLASS_RO_$_RollbarMutableConfig (in test.dwarf) + 0

0x00000001000c11c0: __OBJC_METACLASS_RO_$_RollbarCrashReport (in test.dwarf) + 0

0x00000001000c1208: __OBJC_$_PROP_LIST_RollbarCrashReport (in test.dwarf) + 0

0x00000001000c1220: __OBJC_CLASS_RO_$_RollbarCrashReport (in test.dwarf) + 0

0x00000001000c1268: __OBJC_METACLASS_RO_$_RollbarData (in test.dwarf) + 0

0x00000001000c12b0: __OBJC_$_PROP_LIST_RollbarData (in test.dwarf) + 0

0x00000001000c13d8: __OBJC_CLASS_RO_$_RollbarData (in test.dwarf) + 0

0x00000001000c1420: __OBJC_METACLASS_RO_$_RollbarDestination (in test.dwarf) + 0

0x00000001000c1468: __OBJC_$_PROP_LIST_RollbarDestination (in test.dwarf) + 0

0x00000001000c14a0: __OBJC_CLASS_RO_$_RollbarDestination (in test.dwarf) + 0

0x00000001000c14e8: __OBJC_METACLASS_RO_$_RollbarMutableDestination (in test.dwarf) + 0

0x00000001000c1530: __OBJC_$_PROP_LIST_RollbarMutableDestination (in test.dwarf) + 0

0x00000001000c1568: __OBJC_CLASS_RO_$_RollbarMutableDestination (in test.dwarf) + 0

0x00000001000c15b0: __OBJC_METACLASS_RO_$_RollbarDeveloperOptions (in test.dwarf) + 0

0x00000001000c15f8: __OBJC_$_PROP_LIST_RollbarDeveloperOptions (in test.dwarf) + 0

0x00000001000c1690: __OBJC_CLASS_RO_$_RollbarDeveloperOptions (in test.dwarf) + 0

0x00000001000c16d8: __OBJC_METACLASS_RO_$_RollbarMutableDeveloperOptions (in test.dwarf) + 0

0x00000001000c1720: __OBJC_$_PROP_LIST_RollbarMutableDeveloperOptions (in test.dwarf) + 0

0x00000001000c17b8: __OBJC_CLASS_RO_$_RollbarMutableDeveloperOptions (in test.dwarf) + 0

0x00000001000c1800: __OBJC_METACLASS_RO_$_RollbarException (in test.dwarf) + 0

0x00000001000c1848: __OBJC_$_PROP_LIST_RollbarException (in test.dwarf) + 0

0x00000001000c1880: __OBJC_CLASS_RO_$_RollbarException (in test.dwarf) + 0

0x00000001000c18c8: __OBJC_METACLASS_RO_$_RollbarHttpMethodUtil (in test.dwarf) + 0

0x00000001000c1910: __OBJC_CLASS_RO_$_RollbarHttpMethodUtil (in test.dwarf) + 0

0x00000001000c1958: __OBJC_METACLASS_RO_$_RollbarLevelUtil (in test.dwarf) + 0

0x00000001000c19a0: __OBJC_CLASS_RO_$_RollbarLevelUtil (in test.dwarf) + 0

0x00000001000c19e8: __OBJC_METACLASS_RO_$_RollbarLoggingOptions (in test.dwarf) + 0

0x00000001000c1a30: __OBJC_$_PROP_LIST_RollbarLoggingOptions (in test.dwarf) + 0

0x00000001000c1ab8: __OBJC_CLASS_RO_$_RollbarLoggingOptions (in test.dwarf) + 0

0x00000001000c1b00: __OBJC_METACLASS_RO_$_RollbarMutableLoggingOptions (in test.dwarf) + 0

0x00000001000c1b48: __OBJC_$_PROP_LIST_RollbarMutableLoggingOptions (in test.dwarf) + 0

0x00000001000c1bd0: __OBJC_CLASS_RO_$_RollbarMutableLoggingOptions (in test.dwarf) + 0

0x00000001000c1c18: __OBJC_METACLASS_RO_$_RollbarMessage (in test.dwarf) + 0

0x00000001000c1c60: __OBJC_$_PROP_LIST_RollbarMessage (in test.dwarf) + 0

0x00000001000c1c78: __OBJC_CLASS_RO_$_RollbarMessage (in test.dwarf) + 0

0x00000001000c1cc0: __OBJC_METACLASS_RO_$_RollbarModule (in test.dwarf) + 0

0x00000001000c1d08: __OBJC_$_PROP_LIST_RollbarModule (in test.dwarf) + 0

0x00000001000c1d30: __OBJC_CLASS_RO_$_RollbarModule (in test.dwarf) + 0

0x00000001000c1d78: __OBJC_METACLASS_RO_$_RollbarMutableModule (in test.dwarf) + 0

0x00000001000c1dc0: __OBJC_$_PROP_LIST_RollbarMutableModule (in test.dwarf) + 0

0x00000001000c1de8: __OBJC_CLASS_RO_$_RollbarMutableModule (in test.dwarf) + 0

0x00000001000c1e30: __OBJC_METACLASS_RO_$_RollbarPayload (in test.dwarf) + 0

0x00000001000c1e78: __OBJC_$_PROP_LIST_RollbarPayload (in test.dwarf) + 0

0x00000001000c1ea0: __OBJC_CLASS_RO_$_RollbarPayload (in test.dwarf) + 0

0x00000001000c1ee8: __OBJC_METACLASS_RO_$_RollbarPerson (in test.dwarf) + 0

0x00000001000c1f30: __OBJC_$_PROP_LIST_RollbarPerson (in test.dwarf) + 0

0x00000001000c1f68: __OBJC_CLASS_RO_$_RollbarPerson (in test.dwarf) + 0

0x00000001000c1fb0: __OBJC_METACLASS_RO_$_RollbarMutablePerson (in test.dwarf) + 0

0x00000001000c1ff8: __OBJC_$_PROP_LIST_RollbarMutablePerson (in test.dwarf) + 0

0x00000001000c2030: __OBJC_CLASS_RO_$_RollbarMutablePerson (in test.dwarf) + 0

0x00000001000c2078: __OBJC_METACLASS_RO_$_RollbarProxy (in test.dwarf) + 0

0x00000001000c20c0: __OBJC_$_PROP_LIST_RollbarProxy (in test.dwarf) + 0

0x00000001000c20f8: __OBJC_CLASS_RO_$_RollbarProxy (in test.dwarf) + 0

0x00000001000c2140: __OBJC_METACLASS_RO_$_RollbarMutableProxy (in test.dwarf) + 0

0x00000001000c2188: __OBJC_$_PROP_LIST_RollbarMutableProxy (in test.dwarf) + 0

0x00000001000c21c0: __OBJC_CLASS_RO_$_RollbarMutableProxy (in test.dwarf) + 0

0x00000001000c2208: __OBJC_METACLASS_RO_$_RollbarRequest (in test.dwarf) + 0

0x00000001000c2250: __OBJC_$_PROP_LIST_RollbarRequest (in test.dwarf) + 0

0x00000001000c22e8: __OBJC_CLASS_RO_$_RollbarRequest (in test.dwarf) + 0

0x00000001000c2330: __OBJC_METACLASS_RO_$_RollbarScrubbingOptions (in test.dwarf) + 0

0x00000001000c2378: __OBJC_$_PROP_LIST_RollbarScrubbingOptions (in test.dwarf) + 0

0x00000001000c23b0: __OBJC_CLASS_RO_$_RollbarScrubbingOptions (in test.dwarf) + 0

0x00000001000c23f8: __OBJC_METACLASS_RO_$_RollbarMutableScrubbingOptions (in test.dwarf) + 0

0x00000001000c2440: __OBJC_$_PROP_LIST_RollbarMutableScrubbingOptions (in test.dwarf) + 0

0x00000001000c2478: __OBJC_CLASS_RO_$_RollbarMutableScrubbingOptions (in test.dwarf) + 0

0x00000001000c24c0: __OBJC_METACLASS_RO_$_RollbarServer (in test.dwarf) + 0

0x00000001000c2508: __OBJC_$_PROP_LIST_RollbarServer (in test.dwarf) + 0

0x00000001000c2520: __OBJC_CLASS_RO_$_RollbarServer (in test.dwarf) + 0

0x00000001000c2568: __OBJC_METACLASS_RO_$_RollbarServerConfig (in test.dwarf) + 0

0x00000001000c25b0: __OBJC_$_PROP_LIST_RollbarServerConfig (in test.dwarf) + 0

0x00000001000c25f8: __OBJC_CLASS_RO_$_RollbarServerConfig (in test.dwarf) + 0

0x00000001000c2640: __OBJC_METACLASS_RO_$_RollbarMutableServerConfig (in test.dwarf) + 0

0x00000001000c2688: __OBJC_$_PROP_LIST_RollbarMutableServerConfig (in test.dwarf) + 0

0x00000001000c26d0: __OBJC_CLASS_RO_$_RollbarMutableServerConfig (in test.dwarf) + 0

0x00000001000c2718: __OBJC_METACLASS_RO_$_RollbarSourceUtil (in test.dwarf) + 0

0x00000001000c2760: __OBJC_CLASS_RO_$_RollbarSourceUtil (in test.dwarf) + 0

0x00000001000c27a8: __OBJC_METACLASS_RO_$_RollbarTelemetryBody (in test.dwarf) + 0

0x00000001000c27f0: __OBJC_CLASS_RO_$_RollbarTelemetryBody (in test.dwarf) + 0

0x00000001000c2838: __OBJC_METACLASS_RO_$_RollbarTelemetryConnectivityBody (in test.dwarf) + 0

0x00000001000c2880: __OBJC_$_PROP_LIST_RollbarTelemetryConnectivityBody (in test.dwarf) + 0

0x00000001000c2898: __OBJC_CLASS_RO_$_RollbarTelemetryConnectivityBody (in test.dwarf) + 0

0x00000001000c28e0: __OBJC_METACLASS_RO_$_RollbarTelemetryErrorBody (in test.dwarf) + 0

0x00000001000c2928: __OBJC_CLASS_RO_$_RollbarTelemetryErrorBody (in test.dwarf) + 0

0x00000001000c2970: __OBJC_METACLASS_RO_$_RollbarTelemetryEvent (in test.dwarf) + 0

0x00000001000c29b8: __OBJC_$_PROP_LIST_RollbarTelemetryEvent (in test.dwarf) + 0

0x00000001000c2a10: __OBJC_CLASS_RO_$_RollbarTelemetryEvent (in test.dwarf) + 0

0x00000001000c2a58: __OBJC_METACLASS_RO_$_RollbarTelemetryLogBody (in test.dwarf) + 0

0x00000001000c2aa0: __OBJC_$_PROP_LIST_RollbarTelemetryLogBody (in test.dwarf) + 0

0x00000001000c2ab8: __OBJC_CLASS_RO_$_RollbarTelemetryLogBody (in test.dwarf) + 0

0x00000001000c2b00: __OBJC_METACLASS_RO_$_RollbarTelemetryManualBody (in test.dwarf) + 0

0x00000001000c2b48: __OBJC_CLASS_RO_$_RollbarTelemetryManualBody (in test.dwarf) + 0

0x00000001000c2b90: __OBJC_METACLASS_RO_$_RollbarTelemetryNavigationBody (in test.dwarf) + 0

0x00000001000c2bd8: __OBJC_$_PROP_LIST_RollbarTelemetryNavigationBody (in test.dwarf) + 0

0x00000001000c2c00: __OBJC_CLASS_RO_$_RollbarTelemetryNavigationBody (in test.dwarf) + 0

0x00000001000c2c48: __OBJC_METACLASS_RO_$_RollbarTelemetryNetworkBody (in test.dwarf) + 0

0x00000001000c2c90: __OBJC_$_PROP_LIST_RollbarTelemetryNetworkBody (in test.dwarf) + 0

0x00000001000c2cc8: __OBJC_CLASS_RO_$_RollbarTelemetryNetworkBody (in test.dwarf) + 0

0x00000001000c2d10: __OBJC_METACLASS_RO_$_RollbarTelemetryOptions (in test.dwarf) + 0

0x00000001000c2d58: __OBJC_$_PROP_LIST_RollbarTelemetryOptions (in test.dwarf) + 0

0x00000001000c2dc0: __OBJC_CLASS_RO_$_RollbarTelemetryOptions (in test.dwarf) + 0

0x00000001000c2e08: __OBJC_METACLASS_RO_$_RollbarMutableTelemetryOptions (in test.dwarf) + 0

0x00000001000c2e50: __OBJC_$_PROP_LIST_RollbarMutableTelemetryOptions (in test.dwarf) + 0

0x00000001000c2eb8: __OBJC_CLASS_RO_$_RollbarMutableTelemetryOptions (in test.dwarf) + 0

0x00000001000c2f00: __OBJC_METACLASS_RO_$_RollbarTelemetryTypeUtil (in test.dwarf) + 0

0x00000001000c2f48: __OBJC_CLASS_RO_$_RollbarTelemetryTypeUtil (in test.dwarf) + 0

0x00000001000c2f90: __OBJC_METACLASS_RO_$_RollbarTelemetryViewBody (in test.dwarf) + 0

0x00000001000c2fd8: __OBJC_$_PROP_LIST_RollbarTelemetryViewBody (in test.dwarf) + 0

0x00000001000c2ff0: __OBJC_CLASS_RO_$_RollbarTelemetryViewBody (in test.dwarf) + 0

0x00000001000c3038: __OBJC_METACLASS_RO_$_RollbarTrace (in test.dwarf) + 0

0x00000001000c3080: __OBJC_$_PROP_LIST_RollbarTrace (in test.dwarf) + 0

0x00000001000c30a8: __OBJC_CLASS_RO_$_RollbarTrace (in test.dwarf) + 0

0x00000001000c30f0: __OBJC_$_PROTOCOL_CLASS_METHODS_RollbarFacadeInitialization (in test.dwarf) + 0

0x00000001000c3110: __OBJC_$_PROTOCOL_METHOD_TYPES_RollbarFacadeInitialization (in test.dwarf) + 0

0x00000001000c3118: __OBJC_$_PROTOCOL_CLASS_METHODS_RollbarFacadeConfiguration (in test.dwarf) + 0

0x00000001000c3150: __OBJC_$_PROTOCOL_METHOD_TYPES_RollbarFacadeConfiguration (in test.dwarf) + 0

0x00000001000c3160: __OBJC_$_PROTOCOL_CLASS_METHODS_RollbarFacadeLogging (in test.dwarf) + 0

0x00000001000c3258: __OBJC_$_PROTOCOL_CLASS_METHODS_OPT_RollbarFacadeLogging (in test.dwarf) + 0

0x00000001000c3698: __OBJC_$_PROTOCOL_METHOD_TYPES_RollbarFacadeLogging (in test.dwarf) + 0

0x00000001000c3850: __OBJC_$_PROTOCOL_CLASS_METHODS_RollbarFacadeTelemetry (in test.dwarf) + 0

0x00000001000c3978: __OBJC_$_PROTOCOL_METHOD_TYPES_RollbarFacadeTelemetry (in test.dwarf) + 0

0x00000001000c39d8: __OBJC_CLASS_PROTOCOLS_$_Rollbar (in test.dwarf) + 0

0x00000001000c3a08: __OBJC_METACLASS_RO_$_Rollbar (in test.dwarf) + 0

0x00000001000c3a50: __OBJC_CLASS_RO_$_Rollbar (in test.dwarf) + 0

0x00000001000c3a98: __OBJC_METACLASS_RO_$_RollbarConfigUtil (in test.dwarf) + 0

0x00000001000c3ae0: __OBJC_CLASS_RO_$_RollbarConfigUtil (in test.dwarf) + 0

0x00000001000c3b28: __OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject (in test.dwarf) + 0

0x00000001000c3cf8: __OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject (in test.dwarf) + 0

0x00000001000c3d18: __OBJC_$_PROP_LIST_NSObject (in test.dwarf) + 0

0x00000001000c3d60: __OBJC_$_PROTOCOL_METHOD_TYPES_NSObject (in test.dwarf) + 0

0x00000001000c3e00: __OBJC_$_PROTOCOL_REFS_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000c3e18: __OBJC_$_PROTOCOL_INSTANCE_METHODS_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000c3e38: __OBJC_$_PROTOCOL_METHOD_TYPES_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000c3e40: __OBJC_CLASS_PROTOCOLS_$_RollbarCrashLoggingFilter (in test.dwarf) + 0

0x00000001000c3e58: __OBJC_METACLASS_RO_$_RollbarCrashLoggingFilter (in test.dwarf) + 0

0x00000001000c3ea0: __OBJC_$_PROP_LIST_RollbarCrashLoggingFilter (in test.dwarf) + 0

0x00000001000c3ee8: __OBJC_CLASS_RO_$_RollbarCrashLoggingFilter (in test.dwarf) + 0

0x00000001000c3f30: __OBJC_METACLASS_RO_$_RollbarCrashCollector (in test.dwarf) + 0

0x00000001000c3f78: __OBJC_CLASS_RO_$_RollbarCrashCollector (in test.dwarf) + 0

0x00000001000c3fc0: __OBJC_METACLASS_RO_$_RollbarDestinationRecord (in test.dwarf) + 0

0x00000001000c4008: __OBJC_$_INSTANCE_VARIABLES_RollbarDestinationRecord (in test.dwarf) + 0

0x00000001000c4110: __OBJC_$_PROP_LIST_RollbarDestinationRecord (in test.dwarf) + 0

0x00000001000c4198: __OBJC_CLASS_RO_$_RollbarDestinationRecord (in test.dwarf) + 0

0x00000001000c41e0: __OBJC_METACLASS_RO_$_RollbarInfrastructure (in test.dwarf) + 0

0x00000001000c4228: __OBJC_$_INSTANCE_VARIABLES_RollbarInfrastructure (in test.dwarf) + 0

0x00000001000c4290: __OBJC_$_PROP_LIST_RollbarInfrastructure (in test.dwarf) + 0

0x00000001000c42c8: __OBJC_CLASS_RO_$_RollbarInfrastructure (in test.dwarf) + 0

0x00000001000c4310: __OBJC_$_PROTOCOL_INSTANCE_METHODS_RollbarLogger (in test.dwarf) + 0

0x00000001000c43a8: __OBJC_$_PROP_LIST_RollbarLogger (in test.dwarf) + 0

0x00000001000c43c0: __OBJC_$_PROTOCOL_METHOD_TYPES_RollbarLogger (in test.dwarf) + 0

0x00000001000c43f0: __OBJC_CLASS_PROTOCOLS_$_RollbarLogger (in test.dwarf) + 0

0x00000001000c4408: __OBJC_METACLASS_RO_$_RollbarLogger (in test.dwarf) + 0

0x00000001000c4450: __OBJC_$_INSTANCE_VARIABLES_RollbarLogger (in test.dwarf) + 0

0x00000001000c4498: __OBJC_$_PROP_LIST_RollbarLogger.40 (in test.dwarf) + 0

0x00000001000c44b0: __OBJC_CLASS_RO_$_RollbarLogger (in test.dwarf) + 0

0x00000001000c44f8: __OBJC_METACLASS_RO_$_RollbarNotifierFiles (in test.dwarf) + 0

0x00000001000c4540: __OBJC_CLASS_RO_$_RollbarNotifierFiles (in test.dwarf) + 0

0x00000001000c4588: __OBJC_METACLASS_RO_$_RollbarPayloadFactory (in test.dwarf) + 0

0x00000001000c45d0: __OBJC_$_INSTANCE_VARIABLES_RollbarPayloadFactory (in test.dwarf) + 0

0x00000001000c4618: __OBJC_$_PROP_LIST_RollbarPayloadFactory (in test.dwarf) + 0

0x00000001000c4630: __OBJC_CLASS_RO_$_RollbarPayloadFactory (in test.dwarf) + 0

0x00000001000c4678: __OBJC_METACLASS_RO_$_RollbarPayloadPostReply (in test.dwarf) + 0

0x00000001000c46c0: __OBJC_$_INSTANCE_VARIABLES_RollbarPayloadPostReply (in test.dwarf) + 0

0x00000001000c4768: __OBJC_$_PROP_LIST_RollbarPayloadPostReply (in test.dwarf) + 0

0x00000001000c47c0: __OBJC_CLASS_RO_$_RollbarPayloadPostReply (in test.dwarf) + 0

0x00000001000c4808: __OBJC_METACLASS_RO_$_RollbarPayloadRepository (in test.dwarf) + 0

0x00000001000c4850: __OBJC_$_INSTANCE_VARIABLES_RollbarPayloadRepository (in test.dwarf) + 0

0x00000001000c48b8: __OBJC_CLASS_RO_$_RollbarPayloadRepository (in test.dwarf) + 0

0x00000001000c4900: __OBJC_METACLASS_RO_$_RollbarPayloadTruncator (in test.dwarf) + 0

0x00000001000c4948: __OBJC_CLASS_RO_$_RollbarPayloadTruncator (in test.dwarf) + 0

0x00000001000c4990: __OBJC_METACLASS_RO_$_RollbarReachability (in test.dwarf) + 0

0x00000001000c49d8: __OBJC_$_INSTANCE_VARIABLES_RollbarReachability (in test.dwarf) + 0

0x00000001000c4aa0: __OBJC_$_PROP_LIST_RollbarReachability (in test.dwarf) + 0

0x00000001000c4b08: __OBJC_CLASS_RO_$_RollbarReachability (in test.dwarf) + 0

0x00000001000c4b50: __OBJC_METACLASS_RO_$_RollbarRegistry (in test.dwarf) + 0

0x00000001000c4b98: __OBJC_$_INSTANCE_VARIABLES_RollbarRegistry (in test.dwarf) + 0

0x00000001000c4bc0: __OBJC_CLASS_RO_$_RollbarRegistry (in test.dwarf) + 0

0x00000001000c4c08: __OBJC_METACLASS_RO_$_RollbarSender (in test.dwarf) + 0

0x00000001000c4c50: __OBJC_CLASS_RO_$_RollbarSender (in test.dwarf) + 0

0x00000001000c4c98: __OBJC_METACLASS_RO_$_RollbarTelemetry (in test.dwarf) + 0

0x00000001000c4ce0: __OBJC_$_INSTANCE_VARIABLES_RollbarTelemetry (in test.dwarf) + 0

0x00000001000c4da8: __OBJC_$_PROP_LIST_RollbarTelemetry (in test.dwarf) + 0

0x00000001000c4df0: __OBJC_CLASS_RO_$_RollbarTelemetry (in test.dwarf) + 0

0x00000001000c4e38: __OBJC_METACLASS_RO_$_RollbarTelemetryOptionsObserver (in test.dwarf) + 0

0x00000001000c4e80: __OBJC_CLASS_RO_$_RollbarTelemetryOptionsObserver (in test.dwarf) + 0

0x00000001000c4ec8: __OBJC_METACLASS_RO_$_RollbarTelemetryThread (in test.dwarf) + 0

0x00000001000c4f10: __OBJC_$_INSTANCE_VARIABLES_RollbarTelemetryThread (in test.dwarf) + 0

0x00000001000c4f98: __OBJC_$_PROP_LIST_RollbarTelemetryThread (in test.dwarf) + 0

0x00000001000c4fc0: __OBJC_CLASS_RO_$_RollbarTelemetryThread (in test.dwarf) + 0

0x00000001000c5008: __OBJC_METACLASS_RO_$_RollbarThread (in test.dwarf) + 0

0x00000001000c5050: __OBJC_$_INSTANCE_VARIABLES_RollbarThread (in test.dwarf) + 0

0x00000001000c5178: __OBJC_$_PROP_LIST_RollbarThread (in test.dwarf) + 0

0x00000001000c5190: __OBJC_CLASS_RO_$_RollbarThread (in test.dwarf) + 0

0x00000001000c51d8: __PROTOCOLS__TtC18RollbarCrashReport28RollbarCrashDiagnosticFilter (in test.dwarf) + 0

0x00000001000c51e8: __METACLASS_DATA__TtC18RollbarCrashReport28RollbarCrashDiagnosticFilter (in test.dwarf) + 0

0x00000001000c5230: __PROTOCOLS__TtC18RollbarCrashReport28RollbarCrashDiagnosticFilter.1 (in test.dwarf) + 0

0x00000001000c5240: __METACLASS_DATA__TtC18RollbarCrashReport23SwiftDiagnosisFormatter (in test.dwarf) + 0

0x00000001000c5288: __OBJC_$_PROTOCOL_REFS_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000c52a0: __OBJC_$_PROTOCOL_INSTANCE_METHODS_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000c52c0: __OBJC_$_PROTOCOL_METHOD_TYPES_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000c52c8: __OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject (in test.dwarf) + 0

0x00000001000c5498: __OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject (in test.dwarf) + 0

0x00000001000c54b8: __OBJC_$_PROP_LIST_NSObject (in test.dwarf) + 0

0x00000001000c5500: __OBJC_$_PROTOCOL_METHOD_TYPES_NSObject (in test.dwarf) + 0

0x00000001000c55a0: __PROTOCOLS__TtC18RollbarCrashReport28RollbarCrashFormattingFilter (in test.dwarf) + 0

0x00000001000c55b0: __METACLASS_DATA__TtC18RollbarCrashReport28RollbarCrashFormattingFilter (in test.dwarf) + 0

0x00000001000c55f8: __PROTOCOLS__TtC18RollbarCrashReport28RollbarCrashFormattingFilter.1 (in test.dwarf) + 0

0x00000001000c5608: __METACLASS_DATA__TtC18RollbarCrashReportP33_7FFAE222EEA03028C0A0EA7AEC39C83716ISO8601Formatter (in test.dwarf) + 0

0x00000001000c5650: __METACLASS_DATA__TtC18RollbarCrashReportP33_7FFAE222EEA03028C0A0EA7AEC39C83716RFC3339Formatter (in test.dwarf) + 0

0x00000001000c5698: __OBJC_METACLASS_RO_$_KSCrashInstReportField (in test.dwarf) + 0

0x00000001000c56e0: __OBJC_$_INSTANCE_VARIABLES_KSCrashInstReportField (in test.dwarf) + 0

0x00000001000c57a8: __OBJC_$_PROP_LIST_KSCrashInstReportField (in test.dwarf) + 0

0x00000001000c5820: __OBJC_CLASS_RO_$_KSCrashInstReportField (in test.dwarf) + 0

0x00000001000c5868: __OBJC_METACLASS_RO_$_KSCrashInstallation (in test.dwarf) + 0

0x00000001000c58b0: __OBJC_$_INSTANCE_VARIABLES_KSCrashInstallation (in test.dwarf) + 0

0x00000001000c5958: __OBJC_$_PROP_LIST_KSCrashInstallation (in test.dwarf) + 0

0x00000001000c59d0: __OBJC_CLASS_RO_$_KSCrashInstallation (in test.dwarf) + 0

0x00000001000c5a18: __OBJC_METACLASS_RO_$_KSCrashInstallationConsole (in test.dwarf) + 0

0x00000001000c5a60: __OBJC_$_INSTANCE_VARIABLES_KSCrashInstallationConsole (in test.dwarf) + 0

0x00000001000c5a88: __OBJC_$_PROP_LIST_KSCrashInstallationConsole (in test.dwarf) + 0

0x00000001000c5aa0: __OBJC_CLASS_RO_$_KSCrashInstallationConsole (in test.dwarf) + 0

0x00000001000c5ae8: __OBJC_METACLASS_RO_$_KSCrashInstallationEmail (in test.dwarf) + 0

0x00000001000c5b30: __OBJC_$_INSTANCE_VARIABLES_KSCrashInstallationEmail (in test.dwarf) + 0

0x00000001000c5bf8: __OBJC_$_PROP_LIST_KSCrashInstallationEmail (in test.dwarf) + 0

0x00000001000c5c60: __OBJC_CLASS_RO_$_KSCrashInstallationEmail (in test.dwarf) + 0

0x00000001000c5ca8: __OBJC_METACLASS_RO_$_KSCrashInstallationBaseQuincyHockey (in test.dwarf) + 0

0x00000001000c5cf0: __OBJC_$_INSTANCE_VARIABLES_KSCrashInstallationBaseQuincyHockey (in test.dwarf) + 0

0x00000001000c5e38: __OBJC_$_PROP_LIST_KSCrashInstallationBaseQuincyHockey (in test.dwarf) + 0

0x00000001000c5ee0: __OBJC_CLASS_RO_$_KSCrashInstallationBaseQuincyHockey (in test.dwarf) + 0

0x00000001000c5f28: __OBJC_METACLASS_RO_$_KSCrashInstallationQuincy (in test.dwarf) + 0

0x00000001000c5f70: __OBJC_$_INSTANCE_VARIABLES_KSCrashInstallationQuincy (in test.dwarf) + 0

0x00000001000c5f98: __OBJC_$_PROP_LIST_KSCrashInstallationQuincy (in test.dwarf) + 0

0x00000001000c5fb0: __OBJC_CLASS_RO_$_KSCrashInstallationQuincy (in test.dwarf) + 0

0x00000001000c5ff8: __OBJC_METACLASS_RO_$_KSCrashInstallationHockey (in test.dwarf) + 0

0x00000001000c6040: __OBJC_$_INSTANCE_VARIABLES_KSCrashInstallationHockey (in test.dwarf) + 0

0x00000001000c6068: __OBJC_$_PROP_LIST_KSCrashInstallationHockey (in test.dwarf) + 0

0x00000001000c6080: __OBJC_CLASS_RO_$_KSCrashInstallationHockey (in test.dwarf) + 0

0x00000001000c60c8: __OBJC_METACLASS_RO_$_KSCrashInstallationStandard (in test.dwarf) + 0

0x00000001000c6110: __OBJC_$_INSTANCE_VARIABLES_KSCrashInstallationStandard (in test.dwarf) + 0

0x00000001000c6138: __OBJC_$_PROP_LIST_KSCrashInstallationStandard (in test.dwarf) + 0

0x00000001000c6150: __OBJC_CLASS_RO_$_KSCrashInstallationStandard (in test.dwarf) + 0

0x00000001000c6198: __OBJC_METACLASS_RO_$_KSCrashInstallationVictory (in test.dwarf) + 0

0x00000001000c61e0: __OBJC_$_INSTANCE_VARIABLES_KSCrashInstallationVictory (in test.dwarf) + 0

0x00000001000c6248: __OBJC_$_PROP_LIST_KSCrashInstallationVictory (in test.dwarf) + 0

0x00000001000c6280: __OBJC_CLASS_RO_$_KSCrashInstallationVictory (in test.dwarf) + 0

0x00000001000c62c8: __OBJC_METACLASS_RO_$_KSCrash (in test.dwarf) + 0

0x00000001000c6310: __OBJC_$_INSTANCE_VARIABLES_KSCrash (in test.dwarf) + 0

0x00000001000c6538: __OBJC_$_PROP_LIST_KSCrash (in test.dwarf) + 0

0x00000001000c6700: __OBJC_CLASS_RO_$_KSCrash (in test.dwarf) + 0

0x00000001000c6748: __OBJC_METACLASS_RO_$_KSCrashDoctorParam (in test.dwarf) + 0

0x00000001000c6790: __OBJC_$_INSTANCE_VARIABLES_KSCrashDoctorParam (in test.dwarf) + 0

0x00000001000c6858: __OBJC_$_PROP_LIST_KSCrashDoctorParam (in test.dwarf) + 0

0x00000001000c68c0: __OBJC_CLASS_RO_$_KSCrashDoctorParam (in test.dwarf) + 0

0x00000001000c6908: __OBJC_METACLASS_RO_$_KSCrashDoctorFunctionCall (in test.dwarf) + 0

0x00000001000c6950: __OBJC_$_INSTANCE_VARIABLES_KSCrashDoctorFunctionCall (in test.dwarf) + 0

0x00000001000c6998: __OBJC_$_PROP_LIST_KSCrashDoctorFunctionCall (in test.dwarf) + 0

0x00000001000c69c0: __OBJC_CLASS_RO_$_KSCrashDoctorFunctionCall (in test.dwarf) + 0

0x00000001000c6a08: __OBJC_METACLASS_RO_$_KSCrashDoctor (in test.dwarf) + 0

0x00000001000c6a50: __OBJC_CLASS_RO_$_KSCrashDoctor (in test.dwarf) + 0

0x00000001000c6a98: __OBJC_METACLASS_RO_$_KSCrashDeadlockMonitor (in test.dwarf) + 0

0x00000001000c6ae0: __OBJC_$_INSTANCE_VARIABLES_KSCrashDeadlockMonitor (in test.dwarf) + 0

0x00000001000c6b28: __OBJC_$_PROP_LIST_KSCrashDeadlockMonitor (in test.dwarf) + 0

0x00000001000c6b50: __OBJC_CLASS_RO_$_KSCrashDeadlockMonitor (in test.dwarf) + 0

0x00000001000c6b98: __OBJC_METACLASS_RO_$_KSJSONCodec (in test.dwarf) + 0

0x00000001000c6be0: __OBJC_$_INSTANCE_VARIABLES_KSJSONCodec (in test.dwarf) + 0

0x00000001000c6d28: __OBJC_$_PROP_LIST_KSJSONCodec (in test.dwarf) + 0

0x00000001000c6dd0: __OBJC_CLASS_RO_$_KSJSONCodec (in test.dwarf) + 0

0x00000001000c6e18: __OBJC_$_CATEGORY_NSError_$_SimpleConstructor (in test.dwarf) + 0

0x00000001000c6e58: __OBJC_METACLASS_RO_$_NSError_SimpleConstructor_AOG8G (in test.dwarf) + 0

0x00000001000c6ea0: __OBJC_CLASS_RO_$_NSError_SimpleConstructor_AOG8G (in test.dwarf) + 0

0x00000001000c6ee8: __OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject (in test.dwarf) + 0

0x00000001000c70b8: __OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject (in test.dwarf) + 0

0x00000001000c70d8: __OBJC_$_PROP_LIST_NSObject (in test.dwarf) + 0

0x00000001000c7120: __OBJC_$_PROTOCOL_METHOD_TYPES_NSObject (in test.dwarf) + 0

0x00000001000c71c0: __OBJC_$_PROTOCOL_REFS_UIAlertViewDelegate (in test.dwarf) + 0

0x00000001000c71d8: __OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_UIAlertViewDelegate (in test.dwarf) + 0

0x00000001000c7288: __OBJC_$_PROTOCOL_METHOD_TYPES_UIAlertViewDelegate (in test.dwarf) + 0

0x00000001000c72c0: __OBJC_CLASS_PROTOCOLS_$_KSCrashAlertViewProcess (in test.dwarf) + 0

0x00000001000c72d8: __OBJC_METACLASS_RO_$_KSCrashAlertViewProcess (in test.dwarf) + 0

0x00000001000c7320: __OBJC_$_INSTANCE_VARIABLES_KSCrashAlertViewProcess (in test.dwarf) + 0

0x00000001000c73a8: __OBJC_$_PROP_LIST_KSCrashAlertViewProcess (in test.dwarf) + 0

0x00000001000c7430: __OBJC_CLASS_RO_$_KSCrashAlertViewProcess (in test.dwarf) + 0

0x00000001000c7478: __OBJC_$_PROTOCOL_REFS_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000c7490: __OBJC_$_PROTOCOL_INSTANCE_METHODS_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000c74b0: __OBJC_$_PROTOCOL_METHOD_TYPES_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000c74b8: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterAlert (in test.dwarf) + 0

0x00000001000c74d0: __OBJC_METACLASS_RO_$_KSCrashReportFilterAlert (in test.dwarf) + 0

0x00000001000c7518: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportFilterAlert (in test.dwarf) + 0

0x00000001000c75a0: __OBJC_$_PROP_LIST_KSCrashReportFilterAlert (in test.dwarf) + 0

0x00000001000c7628: __OBJC_CLASS_RO_$_KSCrashReportFilterAlert (in test.dwarf) + 0

0x00000001000c7670: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterAppleFmt (in test.dwarf) + 0

0x00000001000c7688: __OBJC_METACLASS_RO_$_KSCrashReportFilterAppleFmt (in test.dwarf) + 0

0x00000001000c76d0: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportFilterAppleFmt (in test.dwarf) + 0

0x00000001000c76f8: __OBJC_$_PROP_LIST_KSCrashReportFilterAppleFmt (in test.dwarf) + 0

0x00000001000c7750: __OBJC_CLASS_RO_$_KSCrashReportFilterAppleFmt (in test.dwarf) + 0

0x00000001000c7798: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterPassthrough (in test.dwarf) + 0

0x00000001000c77b0: __OBJC_METACLASS_RO_$_KSCrashReportFilterPassthrough (in test.dwarf) + 0

0x00000001000c77f8: __OBJC_$_PROP_LIST_KSCrashReportFilterPassthrough (in test.dwarf) + 0

0x00000001000c7840: __OBJC_CLASS_RO_$_KSCrashReportFilterPassthrough (in test.dwarf) + 0

0x00000001000c7888: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterCombine (in test.dwarf) + 0

0x00000001000c78a0: __OBJC_METACLASS_RO_$_KSCrashReportFilterCombine (in test.dwarf) + 0

0x00000001000c78e8: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportFilterCombine (in test.dwarf) + 0

0x00000001000c7930: __OBJC_$_PROP_LIST_KSCrashReportFilterCombine (in test.dwarf) + 0

0x00000001000c7998: __OBJC_CLASS_RO_$_KSCrashReportFilterCombine (in test.dwarf) + 0

0x00000001000c79e0: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterPipeline (in test.dwarf) + 0

0x00000001000c79f8: __OBJC_METACLASS_RO_$_KSCrashReportFilterPipeline (in test.dwarf) + 0

0x00000001000c7a40: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportFilterPipeline (in test.dwarf) + 0

0x00000001000c7a68: __OBJC_$_PROP_LIST_KSCrashReportFilterPipeline (in test.dwarf) + 0

0x00000001000c7ac0: __OBJC_CLASS_RO_$_KSCrashReportFilterPipeline (in test.dwarf) + 0

0x00000001000c7b08: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterObjectForKey (in test.dwarf) + 0

0x00000001000c7b20: __OBJC_METACLASS_RO_$_KSCrashReportFilterObjectForKey (in test.dwarf) + 0

0x00000001000c7b68: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportFilterObjectForKey (in test.dwarf) + 0

0x00000001000c7bb0: __OBJC_$_PROP_LIST_KSCrashReportFilterObjectForKey (in test.dwarf) + 0

0x00000001000c7c18: __OBJC_CLASS_RO_$_KSCrashReportFilterObjectForKey (in test.dwarf) + 0

0x00000001000c7c60: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterConcatenate (in test.dwarf) + 0

0x00000001000c7c78: __OBJC_METACLASS_RO_$_KSCrashReportFilterConcatenate (in test.dwarf) + 0

0x00000001000c7cc0: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportFilterConcatenate (in test.dwarf) + 0

0x00000001000c7d08: __OBJC_$_PROP_LIST_KSCrashReportFilterConcatenate (in test.dwarf) + 0

0x00000001000c7d70: __OBJC_CLASS_RO_$_KSCrashReportFilterConcatenate (in test.dwarf) + 0

0x00000001000c7db8: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterSubset (in test.dwarf) + 0

0x00000001000c7dd0: __OBJC_METACLASS_RO_$_KSCrashReportFilterSubset (in test.dwarf) + 0

0x00000001000c7e18: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportFilterSubset (in test.dwarf) + 0

0x00000001000c7e40: __OBJC_$_PROP_LIST_KSCrashReportFilterSubset (in test.dwarf) + 0

0x00000001000c7e98: __OBJC_CLASS_RO_$_KSCrashReportFilterSubset (in test.dwarf) + 0

0x00000001000c7ee0: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterDataToString (in test.dwarf) + 0

0x00000001000c7ef8: __OBJC_METACLASS_RO_$_KSCrashReportFilterDataToString (in test.dwarf) + 0

0x00000001000c7f40: __OBJC_$_PROP_LIST_KSCrashReportFilterDataToString (in test.dwarf) + 0

0x00000001000c7f88: __OBJC_CLASS_RO_$_KSCrashReportFilterDataToString (in test.dwarf) + 0

0x00000001000c7fd0: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterStringToData (in test.dwarf) + 0

0x00000001000c7fe8: __OBJC_METACLASS_RO_$_KSCrashReportFilterStringToData (in test.dwarf) + 0

0x00000001000c8030: __OBJC_$_PROP_LIST_KSCrashReportFilterStringToData (in test.dwarf) + 0

0x00000001000c8078: __OBJC_CLASS_RO_$_KSCrashReportFilterStringToData (in test.dwarf) + 0

0x00000001000c80c0: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterGZipCompress (in test.dwarf) + 0

0x00000001000c80d8: __OBJC_METACLASS_RO_$_KSCrashReportFilterGZipCompress (in test.dwarf) + 0

0x00000001000c8120: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportFilterGZipCompress (in test.dwarf) + 0

0x00000001000c8148: __OBJC_$_PROP_LIST_KSCrashReportFilterGZipCompress (in test.dwarf) + 0

0x00000001000c81a0: __OBJC_CLASS_RO_$_KSCrashReportFilterGZipCompress (in test.dwarf) + 0

0x00000001000c81e8: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterGZipDecompress (in test.dwarf) + 0

0x00000001000c8200: __OBJC_METACLASS_RO_$_KSCrashReportFilterGZipDecompress (in test.dwarf) + 0

0x00000001000c8248: __OBJC_$_PROP_LIST_KSCrashReportFilterGZipDecompress (in test.dwarf) + 0

0x00000001000c8290: __OBJC_CLASS_RO_$_KSCrashReportFilterGZipDecompress (in test.dwarf) + 0

0x00000001000c82d8: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterJSONEncode (in test.dwarf) + 0

0x00000001000c82f0: __OBJC_METACLASS_RO_$_KSCrashReportFilterJSONEncode (in test.dwarf) + 0

0x00000001000c8338: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportFilterJSONEncode (in test.dwarf) + 0

0x00000001000c8360: __OBJC_$_PROP_LIST_KSCrashReportFilterJSONEncode (in test.dwarf) + 0

0x00000001000c83b8: __OBJC_CLASS_RO_$_KSCrashReportFilterJSONEncode (in test.dwarf) + 0

0x00000001000c8400: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterJSONDecode (in test.dwarf) + 0

0x00000001000c8418: __OBJC_METACLASS_RO_$_KSCrashReportFilterJSONDecode (in test.dwarf) + 0

0x00000001000c8460: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportFilterJSONDecode (in test.dwarf) + 0

0x00000001000c8488: __OBJC_$_PROP_LIST_KSCrashReportFilterJSONDecode (in test.dwarf) + 0

0x00000001000c84e0: __OBJC_CLASS_RO_$_KSCrashReportFilterJSONDecode (in test.dwarf) + 0

0x00000001000c8528: __OBJC_METACLASS_RO_$_KSCrashFilterSets (in test.dwarf) + 0

0x00000001000c8570: __OBJC_CLASS_RO_$_KSCrashFilterSets (in test.dwarf) + 0

0x00000001000c85b8: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportFilterStringify (in test.dwarf) + 0

0x00000001000c85d0: __OBJC_METACLASS_RO_$_KSCrashReportFilterStringify (in test.dwarf) + 0

0x00000001000c8618: __OBJC_$_PROP_LIST_KSCrashReportFilterStringify (in test.dwarf) + 0

0x00000001000c8660: __OBJC_CLASS_RO_$_KSCrashReportFilterStringify (in test.dwarf) + 0

0x00000001000c86a8: __OBJC_$_CATEGORY_NSDictionary_$_DeepSearch (in test.dwarf) + 0

0x00000001000c86e8: __OBJC_$_CATEGORY_NSArray_$_DeepSearch (in test.dwarf) + 0

0x00000001000c8728: __OBJC_METACLASS_RO_$_DeepSearchP5EM1B9 (in test.dwarf) + 0

0x00000001000c8770: __OBJC_CLASS_RO_$_DeepSearchP5EM1B9 (in test.dwarf) + 0

0x00000001000c87b8: __OBJC_$_CATEGORY_NSData_$_KSGZip (in test.dwarf) + 0

0x00000001000c87f8: __OBJC_METACLASS_RO_$_NSData_GZip_A0THJ4 (in test.dwarf) + 0

0x00000001000c8840: __OBJC_CLASS_RO_$_NSData_GZip_A0THJ4 (in test.dwarf) + 0

0x00000001000c8888: __OBJC_METACLASS_RO_$_KSCString (in test.dwarf) + 0

0x00000001000c88d0: __OBJC_$_INSTANCE_VARIABLES_KSCString (in test.dwarf) + 0

0x00000001000c8918: __OBJC_$_PROP_LIST_KSCString (in test.dwarf) + 0

0x00000001000c8940: __OBJC_CLASS_RO_$_KSCString (in test.dwarf) + 0

0x00000001000c8988: __OBJC_METACLASS_RO_$_KSHTTPPostField (in test.dwarf) + 0

0x00000001000c89d0: __OBJC_$_INSTANCE_VARIABLES_KSHTTPPostField (in test.dwarf) + 0

0x00000001000c8a58: __OBJC_$_PROP_LIST_KSHTTPPostField (in test.dwarf) + 0

0x00000001000c8aa0: __OBJC_CLASS_RO_$_KSHTTPPostField (in test.dwarf) + 0

0x00000001000c8ae8: __OBJC_METACLASS_RO_$_KSHTTPMultipartPostBody (in test.dwarf) + 0

0x00000001000c8b30: __OBJC_$_INSTANCE_VARIABLES_KSHTTPMultipartPostBody (in test.dwarf) + 0

0x00000001000c8b98: __OBJC_$_PROP_LIST_KSHTTPMultipartPostBody (in test.dwarf) + 0

0x00000001000c8bd0: __OBJC_CLASS_RO_$_KSHTTPMultipartPostBody (in test.dwarf) + 0

0x00000001000c8c18: __OBJC_METACLASS_RO_$_KSHTTPRequestSender (in test.dwarf) + 0

0x00000001000c8c60: __OBJC_CLASS_RO_$_KSHTTPRequestSender (in test.dwarf) + 0

0x00000001000c8ca8: __OBJC_METACLASS_RO_$_KSReachabilityKSCrash (in test.dwarf) + 0

0x00000001000c8cf0: __OBJC_$_INSTANCE_VARIABLES_KSReachabilityKSCrash (in test.dwarf) + 0

0x00000001000c8dd8: __OBJC_$_PROP_LIST_KSReachabilityKSCrash (in test.dwarf) + 0

0x00000001000c8e50: __OBJC_CLASS_RO_$_KSReachabilityKSCrash (in test.dwarf) + 0

0x00000001000c8e98: __OBJC_METACLASS_RO_$_KSReachableOperationKSCrash (in test.dwarf) + 0

0x00000001000c8ee0: __OBJC_$_INSTANCE_VARIABLES_KSReachableOperationKSCrash (in test.dwarf) + 0

0x00000001000c8f08: __OBJC_$_PROP_LIST_KSReachableOperationKSCrash (in test.dwarf) + 0

0x00000001000c8f20: __OBJC_CLASS_RO_$_KSReachableOperationKSCrash (in test.dwarf) + 0

0x00000001000c8f68: __OBJC_$_CATEGORY_NSMutableData_$_AppendUTF8 (in test.dwarf) + 0

0x00000001000c8fa8: __OBJC_METACLASS_RO_$_NSMutableData_AppendUTF8_GHO92D (in test.dwarf) + 0

0x00000001000c8ff0: __OBJC_CLASS_RO_$_NSMutableData_AppendUTF8_GHO92D (in test.dwarf) + 0

0x00000001000c9038: __OBJC_$_CATEGORY_NSString_$_URLEncode (in test.dwarf) + 0

0x00000001000c9078: __OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject (in test.dwarf) + 0

0x00000001000c9248: __OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject (in test.dwarf) + 0

0x00000001000c9268: __OBJC_$_PROP_LIST_NSObject (in test.dwarf) + 0

0x00000001000c92b0: __OBJC_$_PROTOCOL_METHOD_TYPES_NSObject (in test.dwarf) + 0

0x00000001000c9350: __OBJC_$_PROTOCOL_REFS_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000c9368: __OBJC_$_PROTOCOL_INSTANCE_METHODS_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000c9388: __OBJC_$_PROTOCOL_METHOD_TYPES_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000c9390: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportSinkConsole (in test.dwarf) + 0

0x00000001000c93a8: __OBJC_METACLASS_RO_$_KSCrashReportSinkConsole (in test.dwarf) + 0

0x00000001000c93f0: __OBJC_$_PROP_LIST_KSCrashReportSinkConsole (in test.dwarf) + 0

0x00000001000c9438: __OBJC_CLASS_RO_$_KSCrashReportSinkConsole (in test.dwarf) + 0

0x00000001000c9480: __OBJC_$_PROTOCOL_REFS_MFMailComposeViewControllerDelegate (in test.dwarf) + 0

0x00000001000c9498: __OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_MFMailComposeViewControllerDelegate (in test.dwarf) + 0

0x00000001000c94b8: __OBJC_$_PROTOCOL_METHOD_TYPES_MFMailComposeViewControllerDelegate (in test.dwarf) + 0

0x00000001000c94c0: __OBJC_CLASS_PROTOCOLS_$_KSCrashMailProcess (in test.dwarf) + 0

0x00000001000c94d8: __OBJC_METACLASS_RO_$_KSCrashMailProcess (in test.dwarf) + 0

0x00000001000c9520: __OBJC_$_INSTANCE_VARIABLES_KSCrashMailProcess (in test.dwarf) + 0

0x00000001000c9588: __OBJC_$_PROP_LIST_KSCrashMailProcess (in test.dwarf) + 0

0x00000001000c9600: __OBJC_CLASS_RO_$_KSCrashMailProcess (in test.dwarf) + 0

0x00000001000c9648: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportSinkEMail (in test.dwarf) + 0

0x00000001000c9660: __OBJC_METACLASS_RO_$_KSCrashReportSinkEMail (in test.dwarf) + 0

0x00000001000c96a8: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportSinkEMail (in test.dwarf) + 0

0x00000001000c9730: __OBJC_$_PROP_LIST_KSCrashReportSinkEMail (in test.dwarf) + 0

0x00000001000c97b8: __OBJC_CLASS_RO_$_KSCrashReportSinkEMail (in test.dwarf) + 0

0x00000001000c9800: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportSinkQuincy (in test.dwarf) + 0

0x00000001000c9818: __OBJC_METACLASS_RO_$_KSCrashReportSinkQuincy (in test.dwarf) + 0

0x00000001000c9860: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportSinkQuincy (in test.dwarf) + 0

0x00000001000c9948: __OBJC_$_PROP_LIST_KSCrashReportSinkQuincy (in test.dwarf) + 0

0x00000001000c9a00: __OBJC_CLASS_RO_$_KSCrashReportSinkQuincy (in test.dwarf) + 0

0x00000001000c9a48: __OBJC_METACLASS_RO_$_KSCrashReportSinkHockey (in test.dwarf) + 0

0x00000001000c9a90: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportSinkHockey (in test.dwarf) + 0

0x00000001000c9ab8: __OBJC_$_PROP_LIST_KSCrashReportSinkHockey (in test.dwarf) + 0

0x00000001000c9ad0: __OBJC_CLASS_RO_$_KSCrashReportSinkHockey (in test.dwarf) + 0

0x00000001000c9b18: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportSinkStandard (in test.dwarf) + 0

0x00000001000c9b30: __OBJC_METACLASS_RO_$_KSCrashReportSinkStandard (in test.dwarf) + 0

0x00000001000c9b78: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportSinkStandard (in test.dwarf) + 0

0x00000001000c9bc0: __OBJC_$_PROP_LIST_KSCrashReportSinkStandard (in test.dwarf) + 0

0x00000001000c9c28: __OBJC_CLASS_RO_$_KSCrashReportSinkStandard (in test.dwarf) + 0

0x00000001000c9c70: __OBJC_CLASS_PROTOCOLS_$_KSCrashReportSinkVictory (in test.dwarf) + 0

0x00000001000c9c88: __OBJC_METACLASS_RO_$_KSCrashReportSinkVictory (in test.dwarf) + 0

0x00000001000c9cd0: __OBJC_$_INSTANCE_VARIABLES_KSCrashReportSinkVictory (in test.dwarf) + 0

0x00000001000c9d58: __OBJC_$_PROP_LIST_KSCrashReportSinkVictory (in test.dwarf) + 0

0x00000001000c9de0: __OBJC_CLASS_RO_$_KSCrashReportSinkVictory (in test.dwarf) + 0

0x00000001000c9eb0: __OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject (in test.dwarf) + 0

0x00000001000ca080: __OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject (in test.dwarf) + 0

0x00000001000ca0a0: __OBJC_$_PROP_LIST_NSObject (in test.dwarf) + 0

0x00000001000ca0e8: __OBJC_$_PROTOCOL_METHOD_TYPES_NSObject (in test.dwarf) + 0

0x00000001000ca188: __OBJC_$_PROTOCOL_REFS_RollbarJSONSupport (in test.dwarf) + 0

0x00000001000ca1a0: __OBJC_$_PROTOCOL_INSTANCE_METHODS_RollbarJSONSupport (in test.dwarf) + 0

0x00000001000ca280: __OBJC_$_PROP_LIST_RollbarJSONSupport (in test.dwarf) + 0

0x00000001000ca298: __OBJC_$_PROTOCOL_METHOD_TYPES_RollbarJSONSupport (in test.dwarf) + 0

0x00000001000ca2e0: __OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying (in test.dwarf) + 0

0x00000001000ca300: __OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying (in test.dwarf) + 0

0x00000001000ca308: __OBJC_$_PROTOCOL_INSTANCE_METHODS_NSMutableCopying (in test.dwarf) + 0

0x00000001000ca328: __OBJC_$_PROTOCOL_METHOD_TYPES_NSMutableCopying (in test.dwarf) + 0

0x00000001000ca330: __OBJC_CLASS_PROTOCOLS_$_RollbarDTO (in test.dwarf) + 0

0x00000001000ca358: __OBJC_METACLASS_RO_$_RollbarDTO (in test.dwarf) + 0

0x00000001000ca3a0: __OBJC_$_INSTANCE_VARIABLES_RollbarDTO (in test.dwarf) + 0

0x00000001000ca408: __OBJC_CLASS_RO_$_RollbarDTO (in test.dwarf) + 0

0x00000001000ca450: __OBJC_METACLASS_RO_$_RollbarEntity (in test.dwarf) + 0

0x00000001000ca498: __OBJC_$_INSTANCE_VARIABLES_RollbarEntity (in test.dwarf) + 0

0x00000001000ca4c0: __OBJC_$_PROP_LIST_RollbarEntity (in test.dwarf) + 0

0x00000001000ca4d8: __OBJC_CLASS_RO_$_RollbarEntity (in test.dwarf) + 0

0x00000001000ca520: __OBJC_METACLASS_RO_$_RollbarEntityBuilder (in test.dwarf) + 0

0x00000001000ca568: __OBJC_$_INSTANCE_VARIABLES_RollbarEntityBuilder (in test.dwarf) + 0

0x00000001000ca590: __OBJC_$_PROP_LIST_RollbarEntityBuilder (in test.dwarf) + 0

0x00000001000ca5a8: __OBJC_CLASS_RO_$_RollbarEntityBuilder (in test.dwarf) + 0

0x00000001000ca5f0: __OBJC_METACLASS_RO_$_RollbarReceptionist (in test.dwarf) + 0

0x00000001000ca638: __OBJC_$_INSTANCE_VARIABLES_RollbarReceptionist (in test.dwarf) + 0

0x00000001000ca6c0: __OBJC_CLASS_RO_$_RollbarReceptionist (in test.dwarf) + 0

0x00000001000ca708: __OBJC_METACLASS_RO_$_RollbarTaskDispatcher (in test.dwarf) + 0

0x00000001000ca750: __OBJC_$_INSTANCE_VARIABLES_RollbarTaskDispatcher (in test.dwarf) + 0

0x00000001000ca7b8: __OBJC_CLASS_RO_$_RollbarTaskDispatcher (in test.dwarf) + 0

0x00000001000ca800: __OBJC_$_CATEGORY_NSDate_$_Rollbar (in test.dwarf) + 0

0x00000001000ca840: __OBJC_$_CATEGORY_NSJSONSerialization_$_Rollbar (in test.dwarf) + 0

0x00000001000ca880: __OBJC_$_CATEGORY_NSObject_$_Rollbar (in test.dwarf) + 0

0x00000001000ca8c0: __OBJC_METACLASS_RO_$_RollbarBundleUtil (in test.dwarf) + 0

0x00000001000ca908: __OBJC_CLASS_RO_$_RollbarBundleUtil (in test.dwarf) + 0

0x00000001000ca950: __OBJC_METACLASS_RO_$_RollbarCachesDirectory (in test.dwarf) + 0

0x00000001000ca998: __OBJC_CLASS_RO_$_RollbarCachesDirectory (in test.dwarf) + 0

0x00000001000ca9e0: __OBJC_METACLASS_RO_$_RollbarCrashReportUtil (in test.dwarf) + 0

0x00000001000caa28: __OBJC_CLASS_RO_$_RollbarCrashReportUtil (in test.dwarf) + 0

0x00000001000caa70: __OBJC_METACLASS_RO_$_RollbarFileIOUtil (in test.dwarf) + 0

0x00000001000caab8: __OBJC_CLASS_RO_$_RollbarFileIOUtil (in test.dwarf) + 0

0x00000001000cab00: __OBJC_METACLASS_RO_$_RollbarFileReader (in test.dwarf) + 0

0x00000001000cab48: __OBJC_$_INSTANCE_VARIABLES_RollbarFileReader (in test.dwarf) + 0

0x00000001000cabf0: __OBJC_$_PROP_LIST_RollbarFileReader (in test.dwarf) + 0

0x00000001000cac18: __OBJC_CLASS_RO_$_RollbarFileReader (in test.dwarf) + 0

0x00000001000cac60: __OBJC_METACLASS_RO_$_RollbarFileWriter (in test.dwarf) + 0

0x00000001000caca8: __OBJC_CLASS_RO_$_RollbarFileWriter (in test.dwarf) + 0

0x00000001000cacf0: __OBJC_METACLASS_RO_$_RollbarHostingProcessUtil (in test.dwarf) + 0

0x00000001000cad38: __OBJC_CLASS_RO_$_RollbarHostingProcessUtil (in test.dwarf) + 0

0x00000001000cad80: __OBJC_METACLASS_RO_$_RollbarMemoryStatsDescriptors (in test.dwarf) + 0

0x00000001000cadc8: __OBJC_$_INSTANCE_VARIABLES_RollbarMemoryStatsDescriptors (in test.dwarf) + 0

0x00000001000cae30: __OBJC_CLASS_RO_$_RollbarMemoryStatsDescriptors (in test.dwarf) + 0

0x00000001000cae78: __OBJC_METACLASS_RO_$_RollbarMemoryUtil (in test.dwarf) + 0

0x00000001000caec0: __OBJC_CLASS_RO_$_RollbarMemoryUtil (in test.dwarf) + 0

0x00000001000caf08: __OBJC_METACLASS_RO_$_RollbarOsUtil (in test.dwarf) + 0

0x00000001000caf50: __OBJC_CLASS_RO_$_RollbarOsUtil (in test.dwarf) + 0

0x00000001000caf98: __OBJC_METACLASS_RO_$_RollbarPredicateBuilder (in test.dwarf) + 0

0x00000001000cafe0: __OBJC_CLASS_RO_$_RollbarPredicateBuilder (in test.dwarf) + 0

0x00000001000cb028: __OBJC_METACLASS_RO_$_RollbarTriStateFlagUtil (in test.dwarf) + 0

0x00000001000cb070: __OBJC_CLASS_RO_$_RollbarTriStateFlagUtil (in test.dwarf) + 0

0x00000001000cdc00: __OBJC_PROTOCOL_REFERENCE_$_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000ce3d8: _OBJC_IVAR_$_RollbarConfig._checkIgnoreRollbarData (in test.dwarf) + 0

0x00000001000ce3dc: _OBJC_IVAR_$_RollbarConfig._modifyRollbarData (in test.dwarf) + 0

0x00000001000ce3e0: _OBJC_IVAR_$_RollbarConfig._isRootConfiguration (in test.dwarf) + 0

0x00000001000ce3e4: _OBJC_IVAR_$_RollbarDestinationRecord._destinationID (in test.dwarf) + 0

0x00000001000ce3e8: _OBJC_IVAR_$_RollbarDestinationRecord._localWindowLimit (in test.dwarf) + 0

0x00000001000ce3ec: _OBJC_IVAR_$_RollbarDestinationRecord._localWindowCount (in test.dwarf) + 0

0x00000001000ce3f0: _OBJC_IVAR_$_RollbarDestinationRecord._serverWindowRemainingCount (in test.dwarf) + 0

0x00000001000ce3f4: _OBJC_IVAR_$_RollbarDestinationRecord._nextLocalWindowStart (in test.dwarf) + 0

0x00000001000ce3f8: _OBJC_IVAR_$_RollbarDestinationRecord._nextServerWindowStart (in test.dwarf) + 0

0x00000001000ce3fc: _OBJC_IVAR_$_RollbarDestinationRecord._nextEarliestPost (in test.dwarf) + 0

0x00000001000ce400: _OBJC_IVAR_$_RollbarDestinationRecord._registry (in test.dwarf) + 0

0x00000001000ce404: _OBJC_IVAR_$_RollbarInfrastructure._configuration (in test.dwarf) + 0

0x00000001000ce408: _OBJC_IVAR_$_RollbarInfrastructure._logger (in test.dwarf) + 0

0x00000001000ce40c: _OBJC_IVAR_$_RollbarInfrastructure._collector (in test.dwarf) + 0

0x00000001000ce410: _OBJC_IVAR_$_RollbarLogger.m_osData (in test.dwarf) + 0

0x00000001000ce414: _OBJC_IVAR_$_RollbarLogger.configuration (in test.dwarf) + 0

0x00000001000ce418: _OBJC_IVAR_$_RollbarPayloadFactory._config (in test.dwarf) + 0

0x00000001000ce41c: _OBJC_IVAR_$_RollbarPayloadFactory._osData (in test.dwarf) + 0

0x00000001000ce420: _OBJC_IVAR_$_RollbarPayloadPostReply._statusCode (in test.dwarf) + 0

0x00000001000ce424: _OBJC_IVAR_$_RollbarPayloadPostReply._rateLimit (in test.dwarf) + 0

0x00000001000ce428: _OBJC_IVAR_$_RollbarPayloadPostReply._remainingCount (in test.dwarf) + 0

0x00000001000ce42c: _OBJC_IVAR_$_RollbarPayloadPostReply._remainingSeconds (in test.dwarf) + 0

0x00000001000ce430: _OBJC_IVAR_$_RollbarPayloadPostReply._nextPostTime (in test.dwarf) + 0

0x00000001000ce434: _OBJC_IVAR_$_RollbarPayloadRepository._storePath (in test.dwarf) + 0

0x00000001000ce438: _OBJC_IVAR_$_RollbarPayloadRepository._db (in test.dwarf) + 0

0x00000001000ce43c: _OBJC_IVAR_$_RollbarPayloadRepository._sqliteErrorMessage (in test.dwarf) + 0

0x00000001000ce440: _OBJC_IVAR_$_RollbarReachability.reachableOnWWAN (in test.dwarf) + 0

0x00000001000ce444: _OBJC_IVAR_$_RollbarReachability.reachabilityRef (in test.dwarf) + 0

0x00000001000ce448: _OBJC_IVAR_$_RollbarReachability.reachabilitySerialQueue (in test.dwarf) + 0

0x00000001000ce44c: _OBJC_IVAR_$_RollbarReachability.reachableBlock (in test.dwarf) + 0

0x00000001000ce450: _OBJC_IVAR_$_RollbarReachability.unreachableBlock (in test.dwarf) + 0

0x00000001000ce454: _OBJC_IVAR_$_RollbarReachability.reachabilityObject (in test.dwarf) + 0

0x00000001000ce458: _OBJC_IVAR_$_RollbarRegistry._destinationRecords (in test.dwarf) + 0

0x00000001000ce45c: _OBJC_IVAR_$_RollbarTelemetry._dataArray (in test.dwarf) + 0

0x00000001000ce460: _OBJC_IVAR_$_RollbarTelemetry._limit (in test.dwarf) + 0

0x00000001000ce464: _OBJC_IVAR_$_RollbarTelemetry._dataFilePath (in test.dwarf) + 0

0x00000001000ce468: _OBJC_IVAR_$_RollbarTelemetry._enabled (in test.dwarf) + 0

0x00000001000ce46c: _OBJC_IVAR_$_RollbarTelemetry._scrubViewInputs (in test.dwarf) + 0

0x00000001000ce470: _OBJC_IVAR_$_RollbarTelemetry._viewInputsToScrub (in test.dwarf) + 0

0x00000001000ce474: _OBJC_IVAR_$_RollbarTelemetryThread._telemetryOptions (in test.dwarf) + 0

0x00000001000ce478: _OBJC_IVAR_$_RollbarTelemetryThread._collectionTimeInterval (in test.dwarf) + 0

0x00000001000ce47c: _OBJC_IVAR_$_RollbarTelemetryThread._timer (in test.dwarf) + 0

0x00000001000ce480: _OBJC_IVAR_$_RollbarTelemetryThread._active (in test.dwarf) + 0

0x00000001000ce484: _OBJC_IVAR_$_RollbarThread._maxReportsPerMinute (in test.dwarf) + 0

0x00000001000ce488: _OBJC_IVAR_$_RollbarThread._payloadLifetimeInSeconds (in test.dwarf) + 0

0x00000001000ce48c: _OBJC_IVAR_$_RollbarThread._registry (in test.dwarf) + 0

0x00000001000ce490: _OBJC_IVAR_$_RollbarThread._reachability (in test.dwarf) + 0

0x00000001000ce494: _OBJC_IVAR_$_RollbarThread._isNetworkReachable (in test.dwarf) + 0

0x00000001000ce498: _OBJC_IVAR_$_RollbarThread._payloadsRepoFilePath (in test.dwarf) + 0

0x00000001000ce49c: _OBJC_IVAR_$_RollbarThread._payloadsRepo (in test.dwarf) + 0

0x00000001000ce4a0: _OBJC_IVAR_$_RollbarThread._timer (in test.dwarf) + 0

0x00000001000ce4a4: _OBJC_IVAR_$_RollbarThread._active (in test.dwarf) + 0

0x00000001000ce4a8: _OBJC_IVAR_$_KSCrashInstReportField._index (in test.dwarf) + 0

0x00000001000ce4ac: _OBJC_IVAR_$_KSCrashInstReportField._key (in test.dwarf) + 0

0x00000001000ce4b0: _OBJC_IVAR_$_KSCrashInstReportField._value (in test.dwarf) + 0

0x00000001000ce4b4: _OBJC_IVAR_$_KSCrashInstReportField._fieldBacking (in test.dwarf) + 0

0x00000001000ce4b8: _OBJC_IVAR_$_KSCrashInstReportField._keyBacking (in test.dwarf) + 0

0x00000001000ce4bc: _OBJC_IVAR_$_KSCrashInstReportField._valueBacking (in test.dwarf) + 0

0x00000001000ce4c0: _OBJC_IVAR_$_KSCrashInstallation._nextFieldIndex (in test.dwarf) + 0

0x00000001000ce4c4: _OBJC_IVAR_$_KSCrashInstallation._crashHandlerDataBacking (in test.dwarf) + 0

0x00000001000ce4c8: _OBJC_IVAR_$_KSCrashInstallation._fields (in test.dwarf) + 0

0x00000001000ce4cc: _OBJC_IVAR_$_KSCrashInstallation._requiredProperties (in test.dwarf) + 0

0x00000001000ce4d0: _OBJC_IVAR_$_KSCrashInstallation._prependedFilters (in test.dwarf) + 0

0x00000001000ce4d4: _OBJC_IVAR_$_KSCrashInstallationConsole._printAppleFormat (in test.dwarf) + 0

0x00000001000ce4d8: _OBJC_IVAR_$_KSCrashInstallationEmail._recipients (in test.dwarf) + 0

0x00000001000ce4dc: _OBJC_IVAR_$_KSCrashInstallationEmail._subject (in test.dwarf) + 0

0x00000001000ce4e0: _OBJC_IVAR_$_KSCrashInstallationEmail._message (in test.dwarf) + 0

0x00000001000ce4e4: _OBJC_IVAR_$_KSCrashInstallationEmail._filenameFmt (in test.dwarf) + 0

0x00000001000ce4e8: _OBJC_IVAR_$_KSCrashInstallationEmail._reportStyle (in test.dwarf) + 0

0x00000001000ce4ec: _OBJC_IVAR_$_KSCrashInstallationEmail._defaultFilenameFormats (in test.dwarf) + 0

0x00000001000ce4f0: _OBJC_IVAR_$_KSCrashInstallationBaseQuincyHockey._userID (in test.dwarf) + 0

0x00000001000ce4f4: _OBJC_IVAR_$_KSCrashInstallationBaseQuincyHockey._userIDKey (in test.dwarf) + 0

0x00000001000ce4f8: _OBJC_IVAR_$_KSCrashInstallationBaseQuincyHockey._userName (in test.dwarf) + 0

0x00000001000ce4fc: _OBJC_IVAR_$_KSCrashInstallationBaseQuincyHockey._userNameKey (in test.dwarf) + 0

0x00000001000ce500: _OBJC_IVAR_$_KSCrashInstallationBaseQuincyHockey._contactEmail (in test.dwarf) + 0

0x00000001000ce504: _OBJC_IVAR_$_KSCrashInstallationBaseQuincyHockey._contactEmailKey (in test.dwarf) + 0

0x00000001000ce508: _OBJC_IVAR_$_KSCrashInstallationBaseQuincyHockey._crashDescription (in test.dwarf) + 0

0x00000001000ce50c: _OBJC_IVAR_$_KSCrashInstallationBaseQuincyHockey._crashDescriptionKey (in test.dwarf) + 0

0x00000001000ce510: _OBJC_IVAR_$_KSCrashInstallationBaseQuincyHockey._extraDescriptionKeys (in test.dwarf) + 0

0x00000001000ce514: _OBJC_IVAR_$_KSCrashInstallationBaseQuincyHockey._waitUntilReachable (in test.dwarf) + 0

0x00000001000ce518: _OBJC_IVAR_$_KSCrashInstallationQuincy._url (in test.dwarf) + 0

0x00000001000ce51c: _OBJC_IVAR_$_KSCrashInstallationHockey._appIdentifier (in test.dwarf) + 0

0x00000001000ce520: _OBJC_IVAR_$_KSCrashInstallationStandard._url (in test.dwarf) + 0

0x00000001000ce524: _OBJC_IVAR_$_KSCrashInstallationVictory._url (in test.dwarf) + 0

0x00000001000ce528: _OBJC_IVAR_$_KSCrashInstallationVictory._userName (in test.dwarf) + 0

0x00000001000ce52c: _OBJC_IVAR_$_KSCrashInstallationVictory._userEmail (in test.dwarf) + 0

0x00000001000ce530: _OBJC_IVAR_$_KSCrash._searchQueueNames (in test.dwarf) + 0

0x00000001000ce534: _OBJC_IVAR_$_KSCrash._introspectMemory (in test.dwarf) + 0

0x00000001000ce538: _OBJC_IVAR_$_KSCrash._addConsoleLogToReport (in test.dwarf) + 0

0x00000001000ce53c: _OBJC_IVAR_$_KSCrash._printPreviousLog (in test.dwarf) + 0

0x00000001000ce540: _OBJC_IVAR_$_KSCrash._deleteBehaviorAfterSendAll (in test.dwarf) + 0

0x00000001000ce544: _OBJC_IVAR_$_KSCrash._monitoring (in test.dwarf) + 0

0x00000001000ce548: _OBJC_IVAR_$_KSCrash._demangleLanguages (in test.dwarf) + 0

0x00000001000ce54c: _OBJC_IVAR_$_KSCrash._maxReportCount (in test.dwarf) + 0

0x00000001000ce550: _OBJC_IVAR_$_KSCrash._sink (in test.dwarf) + 0

0x00000001000ce554: _OBJC_IVAR_$_KSCrash._userInfo (in test.dwarf) + 0

0x00000001000ce558: _OBJC_IVAR_$_KSCrash._deadlockWatchdogInterval (in test.dwarf) + 0

0x00000001000ce55c: _OBJC_IVAR_$_KSCrash._onCrash (in test.dwarf) + 0

0x00000001000ce560: _OBJC_IVAR_$_KSCrash._bundleName (in test.dwarf) + 0

0x00000001000ce564: _OBJC_IVAR_$_KSCrash._basePath (in test.dwarf) + 0

0x00000001000ce568: _OBJC_IVAR_$_KSCrash._doNotIntrospectClasses (in test.dwarf) + 0

0x00000001000ce56c: _OBJC_IVAR_$_KSCrash._uncaughtExceptionHandler (in test.dwarf) + 0

0x00000001000ce570: _OBJC_IVAR_$_KSCrash._currentSnapshotUserReportedExceptionHandler (in test.dwarf) + 0

0x00000001000ce574: _OBJC_IVAR_$_KSCrashDoctorParam._isInstance (in test.dwarf) + 0

0x00000001000ce578: _OBJC_IVAR_$_KSCrashDoctorParam._className (in test.dwarf) + 0

0x00000001000ce57c: _OBJC_IVAR_$_KSCrashDoctorParam._previousClassName (in test.dwarf) + 0

0x00000001000ce580: _OBJC_IVAR_$_KSCrashDoctorParam._address (in test.dwarf) + 0

0x00000001000ce584: _OBJC_IVAR_$_KSCrashDoctorParam._value (in test.dwarf) + 0

0x00000001000ce588: _OBJC_IVAR_$_KSCrashDoctorParam._type (in test.dwarf) + 0

0x00000001000ce58c: _OBJC_IVAR_$_KSCrashDoctorFunctionCall._name (in test.dwarf) + 0

0x00000001000ce590: _OBJC_IVAR_$_KSCrashDoctorFunctionCall._params (in test.dwarf) + 0

0x00000001000ce594: _OBJC_IVAR_$_KSCrashDeadlockMonitor._awaitingResponse (in test.dwarf) + 0

0x00000001000ce598: _OBJC_IVAR_$_KSCrashDeadlockMonitor._monitorThread (in test.dwarf) + 0

0x00000001000ce59c: _OBJC_IVAR_$_KSJSONCodec._prettyPrint (in test.dwarf) + 0

0x00000001000ce5a0: _OBJC_IVAR_$_KSJSONCodec._sorted (in test.dwarf) + 0

0x00000001000ce5a4: _OBJC_IVAR_$_KSJSONCodec._ignoreNullsInArrays (in test.dwarf) + 0

0x00000001000ce5a8: _OBJC_IVAR_$_KSJSONCodec._ignoreNullsInObjects (in test.dwarf) + 0

0x00000001000ce5ac: _OBJC_IVAR_$_KSJSONCodec._topLevelContainer (in test.dwarf) + 0

0x00000001000ce5b0: _OBJC_IVAR_$_KSJSONCodec._currentContainer (in test.dwarf) + 0

0x00000001000ce5b4: _OBJC_IVAR_$_KSJSONCodec._containerStack (in test.dwarf) + 0

0x00000001000ce5b8: _OBJC_IVAR_$_KSJSONCodec._callbacks (in test.dwarf) + 0

0x00000001000ce5bc: _OBJC_IVAR_$_KSJSONCodec._serializedData (in test.dwarf) + 0

0x00000001000ce5c0: _OBJC_IVAR_$_KSJSONCodec._error (in test.dwarf) + 0

0x00000001000ce5c4: _OBJC_IVAR_$_KSCrashAlertViewProcess._reports (in test.dwarf) + 0

0x00000001000ce5c8: _OBJC_IVAR_$_KSCrashAlertViewProcess._onCompletion (in test.dwarf) + 0

0x00000001000ce5cc: _OBJC_IVAR_$_KSCrashAlertViewProcess._alertView (in test.dwarf) + 0

0x00000001000ce5d0: _OBJC_IVAR_$_KSCrashAlertViewProcess._expectedButtonIndex (in test.dwarf) + 0

0x00000001000ce5d4: _OBJC_IVAR_$_KSCrashReportFilterAlert._title (in test.dwarf) + 0

0x00000001000ce5d8: _OBJC_IVAR_$_KSCrashReportFilterAlert._message (in test.dwarf) + 0

0x00000001000ce5dc: _OBJC_IVAR_$_KSCrashReportFilterAlert._yesAnswer (in test.dwarf) + 0

0x00000001000ce5e0: _OBJC_IVAR_$_KSCrashReportFilterAlert._noAnswer (in test.dwarf) + 0

0x00000001000ce5e4: _OBJC_IVAR_$_KSCrashReportFilterAppleFmt._reportStyle (in test.dwarf) + 0

0x00000001000ce5e8: _OBJC_IVAR_$_KSCrashReportFilterCombine._filters (in test.dwarf) + 0

0x00000001000ce5ec: _OBJC_IVAR_$_KSCrashReportFilterCombine._keys (in test.dwarf) + 0

0x00000001000ce5f0: _OBJC_IVAR_$_KSCrashReportFilterPipeline._filters (in test.dwarf) + 0

0x00000001000ce5f4: _OBJC_IVAR_$_KSCrashReportFilterObjectForKey._allowNotFound (in test.dwarf) + 0

0x00000001000ce5f8: _OBJC_IVAR_$_KSCrashReportFilterObjectForKey._key (in test.dwarf) + 0

0x00000001000ce5fc: _OBJC_IVAR_$_KSCrashReportFilterConcatenate._separatorFmt (in test.dwarf) + 0

0x00000001000ce600: _OBJC_IVAR_$_KSCrashReportFilterConcatenate._keys (in test.dwarf) + 0

0x00000001000ce604: _OBJC_IVAR_$_KSCrashReportFilterSubset._keyPaths (in test.dwarf) + 0

0x00000001000ce608: _OBJC_IVAR_$_KSCrashReportFilterGZipCompress._compressionLevel (in test.dwarf) + 0

0x00000001000ce60c: _OBJC_IVAR_$_KSCrashReportFilterJSONEncode._encodeOptions (in test.dwarf) + 0

0x00000001000ce610: _OBJC_IVAR_$_KSCrashReportFilterJSONDecode._encodeOptions (in test.dwarf) + 0

0x00000001000ce614: _OBJC_IVAR_$_KSCString._length (in test.dwarf) + 0

0x00000001000ce618: _OBJC_IVAR_$_KSCString._bytes (in test.dwarf) + 0

0x00000001000ce61c: _OBJC_IVAR_$_KSHTTPPostField._data (in test.dwarf) + 0

0x00000001000ce620: _OBJC_IVAR_$_KSHTTPPostField._name (in test.dwarf) + 0

0x00000001000ce624: _OBJC_IVAR_$_KSHTTPPostField._contentType (in test.dwarf) + 0

0x00000001000ce628: _OBJC_IVAR_$_KSHTTPPostField._filename (in test.dwarf) + 0

0x00000001000ce62c: _OBJC_IVAR_$_KSHTTPMultipartPostBody._contentType (in test.dwarf) + 0

0x00000001000ce630: _OBJC_IVAR_$_KSHTTPMultipartPostBody._fields (in test.dwarf) + 0

0x00000001000ce634: _OBJC_IVAR_$_KSHTTPMultipartPostBody._boundary (in test.dwarf) + 0

0x00000001000ce638: _OBJC_IVAR_$_KSReachabilityKSCrash._reachable (in test.dwarf) + 0

0x00000001000ce63c: _OBJC_IVAR_$_KSReachabilityKSCrash._WWANOnly (in test.dwarf) + 0

0x00000001000ce640: _OBJC_IVAR_$_KSReachabilityKSCrash._flags (in test.dwarf) + 0

0x00000001000ce644: _OBJC_IVAR_$_KSReachabilityKSCrash._onReachabilityChanged (in test.dwarf) + 0

0x00000001000ce648: _OBJC_IVAR_$_KSReachabilityKSCrash._reachabilityRef (in test.dwarf) + 0

0x00000001000ce64c: _OBJC_IVAR_$_KSReachabilityKSCrash._hostname (in test.dwarf) + 0

0x00000001000ce650: _OBJC_IVAR_$_KSReachabilityKSCrash._notificationName (in test.dwarf) + 0

0x00000001000ce654: _OBJC_IVAR_$_KSReachableOperationKSCrash._reachability (in test.dwarf) + 0

0x00000001000ce658: _OBJC_IVAR_$_KSCrashMailProcess._reports (in test.dwarf) + 0

0x00000001000ce65c: _OBJC_IVAR_$_KSCrashMailProcess._onCompletion (in test.dwarf) + 0

0x00000001000ce660: _OBJC_IVAR_$_KSCrashMailProcess._dummyVC (in test.dwarf) + 0

0x00000001000ce664: _OBJC_IVAR_$_KSCrashReportSinkEMail._recipients (in test.dwarf) + 0

0x00000001000ce668: _OBJC_IVAR_$_KSCrashReportSinkEMail._subject (in test.dwarf) + 0

0x00000001000ce66c: _OBJC_IVAR_$_KSCrashReportSinkEMail._message (in test.dwarf) + 0

0x00000001000ce670: _OBJC_IVAR_$_KSCrashReportSinkEMail._filenameFmt (in test.dwarf) + 0

0x00000001000ce674: _OBJC_IVAR_$_KSCrashReportSinkQuincy._waitUntilReachable (in test.dwarf) + 0

0x00000001000ce678: _OBJC_IVAR_$_KSCrashReportSinkQuincy._url (in test.dwarf) + 0

0x00000001000ce67c: _OBJC_IVAR_$_KSCrashReportSinkQuincy._userIDKey (in test.dwarf) + 0

0x00000001000ce680: _OBJC_IVAR_$_KSCrashReportSinkQuincy._userNameKey (in test.dwarf) + 0

0x00000001000ce684: _OBJC_IVAR_$_KSCrashReportSinkQuincy._contactEmailKey (in test.dwarf) + 0

0x00000001000ce688: _OBJC_IVAR_$_KSCrashReportSinkQuincy._crashDescriptionKeys (in test.dwarf) + 0

0x00000001000ce68c: _OBJC_IVAR_$_KSCrashReportSinkQuincy._reachableOperation (in test.dwarf) + 0

0x00000001000ce690: _OBJC_IVAR_$_KSCrashReportSinkHockey._appIdentifier (in test.dwarf) + 0

0x00000001000ce694: _OBJC_IVAR_$_KSCrashReportSinkStandard._url (in test.dwarf) + 0

0x00000001000ce698: _OBJC_IVAR_$_KSCrashReportSinkStandard._reachableOperation (in test.dwarf) + 0

0x00000001000ce69c: _OBJC_IVAR_$_KSCrashReportSinkVictory._url (in test.dwarf) + 0

0x00000001000ce6a0: _OBJC_IVAR_$_KSCrashReportSinkVictory._userName (in test.dwarf) + 0

0x00000001000ce6a4: _OBJC_IVAR_$_KSCrashReportSinkVictory._userEmail (in test.dwarf) + 0

0x00000001000ce6a8: _OBJC_IVAR_$_KSCrashReportSinkVictory._reachableOperation (in test.dwarf) + 0

0x00000001000ce6ac: _OBJC_IVAR_$_RollbarDTO._data (in test.dwarf) + 0

0x00000001000ce6b0: _OBJC_IVAR_$_RollbarDTO._dataDictionary (in test.dwarf) + 0

0x00000001000ce6b4: _OBJC_IVAR_$_RollbarDTO._dataArray (in test.dwarf) + 0

0x00000001000ce6b8: _OBJC_IVAR_$_RollbarEntity._ID (in test.dwarf) + 0

0x00000001000ce6bc: _OBJC_IVAR_$_RollbarEntityBuilder._ID (in test.dwarf) + 0

0x00000001000ce6c0: _OBJC_IVAR_$_RollbarReceptionist._observedObject (in test.dwarf) + 0

0x00000001000ce6c4: _OBJC_IVAR_$_RollbarReceptionist._observedKeyPath (in test.dwarf) + 0

0x00000001000ce6c8: _OBJC_IVAR_$_RollbarReceptionist._task (in test.dwarf) + 0

0x00000001000ce6cc: _OBJC_IVAR_$_RollbarReceptionist._queue (in test.dwarf) + 0

0x00000001000ce6d0: _OBJC_IVAR_$_RollbarTaskDispatcher._task (in test.dwarf) + 0

0x00000001000ce6d4: _OBJC_IVAR_$_RollbarTaskDispatcher._queue (in test.dwarf) + 0

0x00000001000ce6d8: _OBJC_IVAR_$_RollbarTaskDispatcher._taskInput (in test.dwarf) + 0

0x00000001000ce6dc: _OBJC_IVAR_$_RollbarFileReader.filePath (in test.dwarf) + 0

0x00000001000ce6e0: _OBJC_IVAR_$_RollbarFileReader.fileHandle (in test.dwarf) + 0

0x00000001000ce6e4: _OBJC_IVAR_$_RollbarFileReader.currentOffset (in test.dwarf) + 0

0x00000001000ce6e8: _OBJC_IVAR_$_RollbarFileReader.lineDelimiter (in test.dwarf) + 0

0x00000001000ce6ec: _OBJC_IVAR_$_RollbarFileReader.chunkSize (in test.dwarf) + 0

0x00000001000ce6f0: _OBJC_IVAR_$_RollbarMemoryStatsDescriptors.memoryTypeIndex (in test.dwarf) + 0

0x00000001000ce6f4: _OBJC_IVAR_$_RollbarMemoryStatsDescriptors.physicalMemoryStatsIndex (in test.dwarf) + 0

0x00000001000ce6f8: _OBJC_IVAR_$_RollbarMemoryStatsDescriptors.virtualMemoryStatsIndex (in test.dwarf) + 0

0x00000001000ce700: __DATA__TtC12Rollbar_Demo11AppDelegate (in test.dwarf) + 0

0x00000001000ce748: full type metadata for AppDelegate (in test.dwarf) + 0

0x00000001000ce758: _OBJC_CLASS_$__TtC12Rollbar_Demo11AppDelegate (in test.dwarf) + 0

0x00000001000ce758: _OBJC_CLASS_$__TtC12Rollbar_Demo11AppDelegate (in test.dwarf) + 0

0x00000001000ce7d8: _OBJC_METACLASS_$_RollbarAppLanguageUtil (in test.dwarf) + 0

0x00000001000ce800: _OBJC_CLASS_$_RollbarAppLanguageUtil (in test.dwarf) + 0

0x00000001000ce828: _OBJC_CLASS_$_RollbarBody (in test.dwarf) + 0

0x00000001000ce850: _OBJC_METACLASS_$_RollbarBody (in test.dwarf) + 0

0x00000001000ce878: _OBJC_CLASS_$_RollbarCallStackFrame (in test.dwarf) + 0

0x00000001000ce8a0: _OBJC_METACLASS_$_RollbarCallStackFrame (in test.dwarf) + 0

0x00000001000ce8c8: _OBJC_CLASS_$_RollbarCallStackFrameContext (in test.dwarf) + 0

0x00000001000ce8f0: _OBJC_METACLASS_$_RollbarCallStackFrameContext (in test.dwarf) + 0

0x00000001000ce918: _OBJC_METACLASS_$_RollbarCaptureIpTypeUtil (in test.dwarf) + 0

0x00000001000ce940: _OBJC_CLASS_$_RollbarCaptureIpTypeUtil (in test.dwarf) + 0

0x00000001000ce968: _OBJC_CLASS_$_RollbarConfig (in test.dwarf) + 0

0x00000001000ce990: _OBJC_CLASS_$_RollbarMutableConfig (in test.dwarf) + 0

0x00000001000ce9b8: _OBJC_METACLASS_$_RollbarConfig (in test.dwarf) + 0

0x00000001000ce9e0: _OBJC_METACLASS_$_RollbarMutableConfig (in test.dwarf) + 0

0x00000001000cea08: _OBJC_CLASS_$_RollbarCrashReport (in test.dwarf) + 0

0x00000001000cea30: _OBJC_METACLASS_$_RollbarCrashReport (in test.dwarf) + 0

0x00000001000cea58: _OBJC_CLASS_$_RollbarData (in test.dwarf) + 0

0x00000001000cea80: _OBJC_METACLASS_$_RollbarData (in test.dwarf) + 0

0x00000001000ceaa8: _OBJC_CLASS_$_RollbarDestination (in test.dwarf) + 0

0x00000001000cead0: _OBJC_METACLASS_$_RollbarDestination (in test.dwarf) + 0

0x00000001000ceaf8: _OBJC_CLASS_$_RollbarMutableDestination (in test.dwarf) + 0

0x00000001000ceb20: _OBJC_METACLASS_$_RollbarMutableDestination (in test.dwarf) + 0

0x00000001000ceb48: _OBJC_CLASS_$_RollbarDeveloperOptions (in test.dwarf) + 0

0x00000001000ceb70: _OBJC_METACLASS_$_RollbarDeveloperOptions (in test.dwarf) + 0

0x00000001000ceb98: _OBJC_METACLASS_$_RollbarMutableDeveloperOptions (in test.dwarf) + 0

0x00000001000cebc0: _OBJC_CLASS_$_RollbarMutableDeveloperOptions (in test.dwarf) + 0

0x00000001000cebe8: _OBJC_CLASS_$_RollbarException (in test.dwarf) + 0

0x00000001000cec10: _OBJC_METACLASS_$_RollbarException (in test.dwarf) + 0

0x00000001000cec38: _OBJC_METACLASS_$_RollbarHttpMethodUtil (in test.dwarf) + 0

0x00000001000cec60: _OBJC_CLASS_$_RollbarHttpMethodUtil (in test.dwarf) + 0

0x00000001000cec88: _OBJC_METACLASS_$_RollbarLevelUtil (in test.dwarf) + 0

0x00000001000cecb0: _OBJC_CLASS_$_RollbarLevelUtil (in test.dwarf) + 0

0x00000001000cecd8: _OBJC_CLASS_$_RollbarLoggingOptions (in test.dwarf) + 0

0x00000001000ced00: _OBJC_METACLASS_$_RollbarLoggingOptions (in test.dwarf) + 0

0x00000001000ced28: _OBJC_CLASS_$_RollbarMutableLoggingOptions (in test.dwarf) + 0

0x00000001000ced50: _OBJC_METACLASS_$_RollbarMutableLoggingOptions (in test.dwarf) + 0

0x00000001000ced78: _OBJC_CLASS_$_RollbarMessage (in test.dwarf) + 0

0x00000001000ceda0: _OBJC_METACLASS_$_RollbarMessage (in test.dwarf) + 0

0x00000001000cedc8: _OBJC_CLASS_$_RollbarModule (in test.dwarf) + 0

0x00000001000cedf0: _OBJC_METACLASS_$_RollbarModule (in test.dwarf) + 0

0x00000001000cee18: _OBJC_CLASS_$_RollbarMutableModule (in test.dwarf) + 0

0x00000001000cee40: _OBJC_METACLASS_$_RollbarMutableModule (in test.dwarf) + 0

0x00000001000cee68: _OBJC_CLASS_$_RollbarPayload (in test.dwarf) + 0

0x00000001000cee90: _OBJC_METACLASS_$_RollbarPayload (in test.dwarf) + 0

0x00000001000ceeb8: _OBJC_CLASS_$_RollbarPerson (in test.dwarf) + 0

0x00000001000ceee0: _OBJC_METACLASS_$_RollbarPerson (in test.dwarf) + 0

0x00000001000cef08: _OBJC_CLASS_$_RollbarMutablePerson (in test.dwarf) + 0

0x00000001000cef30: _OBJC_METACLASS_$_RollbarMutablePerson (in test.dwarf) + 0

0x00000001000cef58: _OBJC_CLASS_$_RollbarProxy (in test.dwarf) + 0

0x00000001000cef80: _OBJC_METACLASS_$_RollbarProxy (in test.dwarf) + 0

0x00000001000cefa8: _OBJC_METACLASS_$_RollbarMutableProxy (in test.dwarf) + 0

0x00000001000cefd0: _OBJC_CLASS_$_RollbarMutableProxy (in test.dwarf) + 0

0x00000001000ceff8: _OBJC_CLASS_$_RollbarRequest (in test.dwarf) + 0

0x00000001000cf020: _OBJC_METACLASS_$_RollbarRequest (in test.dwarf) + 0

0x00000001000cf048: _OBJC_CLASS_$_RollbarScrubbingOptions (in test.dwarf) + 0

0x00000001000cf070: _OBJC_METACLASS_$_RollbarScrubbingOptions (in test.dwarf) + 0

0x00000001000cf098: _OBJC_CLASS_$_RollbarMutableScrubbingOptions (in test.dwarf) + 0

0x00000001000cf0c0: _OBJC_METACLASS_$_RollbarMutableScrubbingOptions (in test.dwarf) + 0

0x00000001000cf0e8: _OBJC_CLASS_$_RollbarServer (in test.dwarf) + 0

0x00000001000cf110: _OBJC_METACLASS_$_RollbarServer (in test.dwarf) + 0

0x00000001000cf138: _OBJC_CLASS_$_RollbarServerConfig (in test.dwarf) + 0

0x00000001000cf160: _OBJC_METACLASS_$_RollbarServerConfig (in test.dwarf) + 0

0x00000001000cf188: _OBJC_METACLASS_$_RollbarMutableServerConfig (in test.dwarf) + 0

0x00000001000cf1b0: _OBJC_CLASS_$_RollbarMutableServerConfig (in test.dwarf) + 0

0x00000001000cf1d8: _OBJC_METACLASS_$_RollbarSourceUtil (in test.dwarf) + 0

0x00000001000cf200: _OBJC_CLASS_$_RollbarSourceUtil (in test.dwarf) + 0

0x00000001000cf228: _OBJC_METACLASS_$_RollbarTelemetryBody (in test.dwarf) + 0

0x00000001000cf250: _OBJC_CLASS_$_RollbarTelemetryBody (in test.dwarf) + 0

0x00000001000cf278: _OBJC_CLASS_$_RollbarTelemetryConnectivityBody (in test.dwarf) + 0

0x00000001000cf2a0: _OBJC_METACLASS_$_RollbarTelemetryConnectivityBody (in test.dwarf) + 0

0x00000001000cf2c8: _OBJC_METACLASS_$_RollbarTelemetryErrorBody (in test.dwarf) + 0

0x00000001000cf2f0: _OBJC_CLASS_$_RollbarTelemetryErrorBody (in test.dwarf) + 0

0x00000001000cf318: _OBJC_CLASS_$_RollbarTelemetryEvent (in test.dwarf) + 0

0x00000001000cf340: _OBJC_METACLASS_$_RollbarTelemetryEvent (in test.dwarf) + 0

0x00000001000cf368: _OBJC_CLASS_$_RollbarTelemetryLogBody (in test.dwarf) + 0

0x00000001000cf390: _OBJC_METACLASS_$_RollbarTelemetryLogBody (in test.dwarf) + 0

0x00000001000cf3b8: _OBJC_METACLASS_$_RollbarTelemetryManualBody (in test.dwarf) + 0

0x00000001000cf3e0: _OBJC_CLASS_$_RollbarTelemetryManualBody (in test.dwarf) + 0

0x00000001000cf408: _OBJC_CLASS_$_RollbarTelemetryNavigationBody (in test.dwarf) + 0

0x00000001000cf430: _OBJC_METACLASS_$_RollbarTelemetryNavigationBody (in test.dwarf) + 0

0x00000001000cf458: _OBJC_CLASS_$_RollbarTelemetryNetworkBody (in test.dwarf) + 0

0x00000001000cf480: _OBJC_METACLASS_$_RollbarTelemetryNetworkBody (in test.dwarf) + 0

0x00000001000cf4a8: _OBJC_CLASS_$_RollbarTelemetryOptions (in test.dwarf) + 0

0x00000001000cf4d0: _OBJC_METACLASS_$_RollbarTelemetryOptions (in test.dwarf) + 0

0x00000001000cf4f8: _OBJC_CLASS_$_RollbarMutableTelemetryOptions (in test.dwarf) + 0

0x00000001000cf520: _OBJC_METACLASS_$_RollbarMutableTelemetryOptions (in test.dwarf) + 0

0x00000001000cf548: _OBJC_METACLASS_$_RollbarTelemetryTypeUtil (in test.dwarf) + 0

0x00000001000cf570: _OBJC_CLASS_$_RollbarTelemetryTypeUtil (in test.dwarf) + 0

0x00000001000cf598: _OBJC_CLASS_$_RollbarTelemetryViewBody (in test.dwarf) + 0

0x00000001000cf5c0: _OBJC_METACLASS_$_RollbarTelemetryViewBody (in test.dwarf) + 0

0x00000001000cf5e8: _OBJC_CLASS_$_RollbarTrace (in test.dwarf) + 0

0x00000001000cf610: _OBJC_METACLASS_$_RollbarTrace (in test.dwarf) + 0

0x00000001000cf638: _OBJC_CLASS_$_Rollbar (in test.dwarf) + 0

0x00000001000cf660: _OBJC_METACLASS_$_Rollbar (in test.dwarf) + 0

0x00000001000cf688: _OBJC_CLASS_$_RollbarConfigUtil (in test.dwarf) + 0

0x00000001000cf6b0: _OBJC_METACLASS_$_RollbarConfigUtil (in test.dwarf) + 0

0x00000001000cf6d8: _OBJC_METACLASS_$_RollbarCrashLoggingFilter (in test.dwarf) + 0

0x00000001000cf700: _OBJC_CLASS_$_RollbarCrashLoggingFilter (in test.dwarf) + 0

0x00000001000cf728: _OBJC_CLASS_$_RollbarCrashCollector (in test.dwarf) + 0

0x00000001000cf750: _OBJC_METACLASS_$_RollbarCrashCollector (in test.dwarf) + 0

0x00000001000cf778: _OBJC_CLASS_$_RollbarDestinationRecord (in test.dwarf) + 0

0x00000001000cf7a0: _OBJC_METACLASS_$_RollbarDestinationRecord (in test.dwarf) + 0

0x00000001000cf7c8: _OBJC_CLASS_$_RollbarInfrastructure (in test.dwarf) + 0

0x00000001000cf7f0: _OBJC_METACLASS_$_RollbarInfrastructure (in test.dwarf) + 0

0x00000001000cf818: _OBJC_CLASS_$_RollbarLogger (in test.dwarf) + 0

0x00000001000cf840: _OBJC_METACLASS_$_RollbarLogger (in test.dwarf) + 0

0x00000001000cf868: _OBJC_METACLASS_$_RollbarNotifierFiles (in test.dwarf) + 0

0x00000001000cf890: _OBJC_CLASS_$_RollbarNotifierFiles (in test.dwarf) + 0

0x00000001000cf8b8: _OBJC_CLASS_$_RollbarPayloadFactory (in test.dwarf) + 0

0x00000001000cf8e0: _OBJC_METACLASS_$_RollbarPayloadFactory (in test.dwarf) + 0

0x00000001000cf908: _OBJC_CLASS_$_RollbarPayloadPostReply (in test.dwarf) + 0

0x00000001000cf930: _OBJC_METACLASS_$_RollbarPayloadPostReply (in test.dwarf) + 0

0x00000001000cf958: _OBJC_CLASS_$_RollbarPayloadRepository (in test.dwarf) + 0

0x00000001000cf980: _OBJC_METACLASS_$_RollbarPayloadRepository (in test.dwarf) + 0

0x00000001000cf9a8: _OBJC_CLASS_$_RollbarPayloadTruncator (in test.dwarf) + 0

0x00000001000cf9d0: _OBJC_METACLASS_$_RollbarPayloadTruncator (in test.dwarf) + 0

0x00000001000cf9f8: _OBJC_CLASS_$_RollbarReachability (in test.dwarf) + 0

0x00000001000cfa20: _OBJC_METACLASS_$_RollbarReachability (in test.dwarf) + 0

0x00000001000cfa48: _OBJC_CLASS_$_RollbarRegistry (in test.dwarf) + 0

0x00000001000cfa70: _OBJC_METACLASS_$_RollbarRegistry (in test.dwarf) + 0

0x00000001000cfa98: _OBJC_METACLASS_$_RollbarSender (in test.dwarf) + 0

0x00000001000cfac0: _OBJC_CLASS_$_RollbarSender (in test.dwarf) + 0

0x00000001000cfae8: _OBJC_CLASS_$_RollbarTelemetry (in test.dwarf) + 0

0x00000001000cfb10: _OBJC_METACLASS_$_RollbarTelemetry (in test.dwarf) + 0

0x00000001000cfb38: _OBJC_CLASS_$_RollbarTelemetryOptionsObserver (in test.dwarf) + 0

0x00000001000cfb60: _OBJC_METACLASS_$_RollbarTelemetryOptionsObserver (in test.dwarf) + 0

0x00000001000cfb88: _OBJC_CLASS_$_RollbarTelemetryThread (in test.dwarf) + 0

0x00000001000cfbb0: _OBJC_METACLASS_$_RollbarTelemetryThread (in test.dwarf) + 0

0x00000001000cfbd8: _OBJC_CLASS_$_RollbarThread (in test.dwarf) + 0

0x00000001000cfc00: _OBJC_METACLASS_$_RollbarThread (in test.dwarf) + 0

0x00000001000cfc28: __DATA__TtC18RollbarCrashReport28RollbarCrashDiagnosticFilter (in test.dwarf) + 0

0x00000001000cfc70: full type metadata for RollbarCrashDiagnosticFilter (in test.dwarf) + 0

0x00000001000cfc80: _OBJC_CLASS_$__TtC18RollbarCrashReport28RollbarCrashDiagnosticFilter (in test.dwarf) + 0

0x00000001000cfc80: _OBJC_CLASS_$__TtC18RollbarCrashReport28RollbarCrashDiagnosticFilter (in test.dwarf) + 0

0x00000001000cfce8: __DATA__TtC18RollbarCrashReport23SwiftDiagnosisFormatter (in test.dwarf) + 0

0x00000001000cfd30: full type metadata for SwiftDiagnosisFormatter (in test.dwarf) + 0

0x00000001000cfd40: type metadata for SwiftDiagnosisFormatter (in test.dwarf) + 0

0x00000001000cfd40: type metadata for SwiftDiagnosisFormatter (in test.dwarf) + 0

0x00000001000cfd90: __DATA__TtC18RollbarCrashReport28RollbarCrashFormattingFilter (in test.dwarf) + 0

0x00000001000cfdd8: full type metadata for RollbarCrashFormattingFilter (in test.dwarf) + 0

0x00000001000cfde8: _OBJC_CLASS_$__TtC18RollbarCrashReport28RollbarCrashFormattingFilter (in test.dwarf) + 0

0x00000001000cfde8: _OBJC_CLASS_$__TtC18RollbarCrashReport28RollbarCrashFormattingFilter (in test.dwarf) + 0

0x00000001000cfe48: __DATA__TtC18RollbarCrashReportP33_7FFAE222EEA03028C0A0EA7AEC39C83716ISO8601Formatter (in test.dwarf) + 0

0x00000001000cfe90: full type metadata for ISO8601Formatter (in test.dwarf) + 0

0x00000001000cfea0: type metadata for ISO8601Formatter (in test.dwarf) + 0

0x00000001000cfef0: __DATA__TtC18RollbarCrashReportP33_7FFAE222EEA03028C0A0EA7AEC39C83716RFC3339Formatter (in test.dwarf) + 0

0x00000001000cff38: full type metadata for RFC3339Formatter (in test.dwarf) + 0

0x00000001000cff48: type metadata for RFC3339Formatter (in test.dwarf) + 0

0x00000001000cff98: _OBJC_CLASS_$_KSCrashInstReportField (in test.dwarf) + 0

0x00000001000cffc0: _OBJC_METACLASS_$_KSCrashInstReportField (in test.dwarf) + 0

0x00000001000cffe8: _OBJC_CLASS_$_KSCrashInstallation (in test.dwarf) + 0

0x00000001000d0010: _OBJC_METACLASS_$_KSCrashInstallation (in test.dwarf) + 0

0x00000001000d0038: _OBJC_CLASS_$_KSCrashInstallationConsole (in test.dwarf) + 0

0x00000001000d0060: _OBJC_METACLASS_$_KSCrashInstallationConsole (in test.dwarf) + 0

0x00000001000d0088: _OBJC_CLASS_$_KSCrashInstallationEmail (in test.dwarf) + 0

0x00000001000d00b0: _OBJC_METACLASS_$_KSCrashInstallationEmail (in test.dwarf) + 0

0x00000001000d00d8: _OBJC_CLASS_$_KSCrashInstallationBaseQuincyHockey (in test.dwarf) + 0

0x00000001000d0100: _OBJC_METACLASS_$_KSCrashInstallationBaseQuincyHockey (in test.dwarf) + 0

0x00000001000d0128: _OBJC_CLASS_$_KSCrashInstallationQuincy (in test.dwarf) + 0

0x00000001000d0150: _OBJC_METACLASS_$_KSCrashInstallationQuincy (in test.dwarf) + 0

0x00000001000d0178: _OBJC_CLASS_$_KSCrashInstallationHockey (in test.dwarf) + 0

0x00000001000d01a0: _OBJC_METACLASS_$_KSCrashInstallationHockey (in test.dwarf) + 0

0x00000001000d01c8: _OBJC_CLASS_$_KSCrashInstallationStandard (in test.dwarf) + 0

0x00000001000d01f0: _OBJC_METACLASS_$_KSCrashInstallationStandard (in test.dwarf) + 0

0x00000001000d0218: _OBJC_CLASS_$_KSCrashInstallationVictory (in test.dwarf) + 0

0x00000001000d0240: _OBJC_METACLASS_$_KSCrashInstallationVictory (in test.dwarf) + 0

0x00000001000d0268: _OBJC_CLASS_$_KSCrash (in test.dwarf) + 0

0x00000001000d0290: _OBJC_METACLASS_$_KSCrash (in test.dwarf) + 0

0x00000001000d02b8: _OBJC_METACLASS_$_KSCrashDoctorParam (in test.dwarf) + 0

0x00000001000d02e0: _OBJC_CLASS_$_KSCrashDoctorParam (in test.dwarf) + 0

0x00000001000d0308: _OBJC_METACLASS_$_KSCrashDoctorFunctionCall (in test.dwarf) + 0

0x00000001000d0330: _OBJC_CLASS_$_KSCrashDoctorFunctionCall (in test.dwarf) + 0

0x00000001000d0358: _OBJC_METACLASS_$_KSCrashDoctor (in test.dwarf) + 0

0x00000001000d0380: _OBJC_CLASS_$_KSCrashDoctor (in test.dwarf) + 0

0x00000001000d03a8: _OBJC_CLASS_$_KSCrashDeadlockMonitor (in test.dwarf) + 0

0x00000001000d03d0: _OBJC_METACLASS_$_KSCrashDeadlockMonitor (in test.dwarf) + 0

0x00000001000d03f8: _OBJC_CLASS_$_KSJSONCodec (in test.dwarf) + 0

0x00000001000d0420: _OBJC_METACLASS_$_KSJSONCodec (in test.dwarf) + 0

0x00000001000d0448: _OBJC_METACLASS_$_NSError_SimpleConstructor_AOG8G (in test.dwarf) + 0

0x00000001000d0470: _OBJC_CLASS_$_NSError_SimpleConstructor_AOG8G (in test.dwarf) + 0

0x00000001000d0498: _OBJC_METACLASS_$_KSCrashAlertViewProcess (in test.dwarf) + 0

0x00000001000d04c0: _OBJC_CLASS_$_KSCrashAlertViewProcess (in test.dwarf) + 0

0x00000001000d04e8: _OBJC_CLASS_$_KSCrashReportFilterAlert (in test.dwarf) + 0

0x00000001000d0510: _OBJC_METACLASS_$_KSCrashReportFilterAlert (in test.dwarf) + 0

0x00000001000d0538: _OBJC_CLASS_$_KSCrashReportFilterAppleFmt (in test.dwarf) + 0

0x00000001000d0560: _OBJC_METACLASS_$_KSCrashReportFilterAppleFmt (in test.dwarf) + 0

0x00000001000d0588: _OBJC_METACLASS_$_KSCrashReportFilterPassthrough (in test.dwarf) + 0

0x00000001000d05b0: _OBJC_CLASS_$_KSCrashReportFilterPassthrough (in test.dwarf) + 0

0x00000001000d05d8: _OBJC_CLASS_$_KSCrashReportFilterCombine (in test.dwarf) + 0

0x00000001000d0600: _OBJC_CLASS_$_KSCrashReportFilterPipeline (in test.dwarf) + 0

0x00000001000d0628: _OBJC_METACLASS_$_KSCrashReportFilterCombine (in test.dwarf) + 0

0x00000001000d0650: _OBJC_METACLASS_$_KSCrashReportFilterPipeline (in test.dwarf) + 0

0x00000001000d0678: _OBJC_CLASS_$_KSCrashReportFilterObjectForKey (in test.dwarf) + 0

0x00000001000d06a0: _OBJC_METACLASS_$_KSCrashReportFilterObjectForKey (in test.dwarf) + 0

0x00000001000d06c8: _OBJC_CLASS_$_KSCrashReportFilterConcatenate (in test.dwarf) + 0

0x00000001000d06f0: _OBJC_METACLASS_$_KSCrashReportFilterConcatenate (in test.dwarf) + 0

0x00000001000d0718: _OBJC_CLASS_$_KSCrashReportFilterSubset (in test.dwarf) + 0

0x00000001000d0740: _OBJC_METACLASS_$_KSCrashReportFilterSubset (in test.dwarf) + 0

0x00000001000d0768: _OBJC_METACLASS_$_KSCrashReportFilterDataToString (in test.dwarf) + 0

0x00000001000d0790: _OBJC_CLASS_$_KSCrashReportFilterDataToString (in test.dwarf) + 0

0x00000001000d07b8: _OBJC_METACLASS_$_KSCrashReportFilterStringToData (in test.dwarf) + 0

0x00000001000d07e0: _OBJC_CLASS_$_KSCrashReportFilterStringToData (in test.dwarf) + 0

0x00000001000d0808: _OBJC_CLASS_$_KSCrashReportFilterGZipCompress (in test.dwarf) + 0

0x00000001000d0830: _OBJC_METACLASS_$_KSCrashReportFilterGZipCompress (in test.dwarf) + 0

0x00000001000d0858: _OBJC_METACLASS_$_KSCrashReportFilterGZipDecompress (in test.dwarf) + 0

0x00000001000d0880: _OBJC_CLASS_$_KSCrashReportFilterGZipDecompress (in test.dwarf) + 0

0x00000001000d08a8: _OBJC_CLASS_$_KSCrashReportFilterJSONEncode (in test.dwarf) + 0

0x00000001000d08d0: _OBJC_METACLASS_$_KSCrashReportFilterJSONEncode (in test.dwarf) + 0

0x00000001000d08f8: _OBJC_CLASS_$_KSCrashReportFilterJSONDecode (in test.dwarf) + 0

0x00000001000d0920: _OBJC_METACLASS_$_KSCrashReportFilterJSONDecode (in test.dwarf) + 0

0x00000001000d0948: _OBJC_METACLASS_$_KSCrashFilterSets (in test.dwarf) + 0

0x00000001000d0970: _OBJC_CLASS_$_KSCrashFilterSets (in test.dwarf) + 0

0x00000001000d0998: _OBJC_METACLASS_$_KSCrashReportFilterStringify (in test.dwarf) + 0

0x00000001000d09c0: _OBJC_CLASS_$_KSCrashReportFilterStringify (in test.dwarf) + 0

0x00000001000d09e8: _OBJC_METACLASS_$_DeepSearchP5EM1B9 (in test.dwarf) + 0

0x00000001000d0a10: _OBJC_CLASS_$_DeepSearchP5EM1B9 (in test.dwarf) + 0

0x00000001000d0a38: _OBJC_METACLASS_$_NSData_GZip_A0THJ4 (in test.dwarf) + 0

0x00000001000d0a60: _OBJC_CLASS_$_NSData_GZip_A0THJ4 (in test.dwarf) + 0

0x00000001000d0a88: _OBJC_CLASS_$_KSCString (in test.dwarf) + 0

0x00000001000d0ab0: _OBJC_METACLASS_$_KSCString (in test.dwarf) + 0

0x00000001000d0ad8: _OBJC_CLASS_$_KSHTTPPostField (in test.dwarf) + 0

0x00000001000d0b00: _OBJC_METACLASS_$_KSHTTPPostField (in test.dwarf) + 0

0x00000001000d0b28: _OBJC_CLASS_$_KSHTTPMultipartPostBody (in test.dwarf) + 0

0x00000001000d0b50: _OBJC_METACLASS_$_KSHTTPMultipartPostBody (in test.dwarf) + 0

0x00000001000d0b78: _OBJC_METACLASS_$_KSHTTPRequestSender (in test.dwarf) + 0

0x00000001000d0ba0: _OBJC_CLASS_$_KSHTTPRequestSender (in test.dwarf) + 0

0x00000001000d0bc8: _OBJC_CLASS_$_KSReachabilityKSCrash (in test.dwarf) + 0

0x00000001000d0bf0: _OBJC_METACLASS_$_KSReachabilityKSCrash (in test.dwarf) + 0

0x00000001000d0c18: _OBJC_CLASS_$_KSReachableOperationKSCrash (in test.dwarf) + 0

0x00000001000d0c40: _OBJC_METACLASS_$_KSReachableOperationKSCrash (in test.dwarf) + 0

0x00000001000d0c68: _OBJC_METACLASS_$_NSMutableData_AppendUTF8_GHO92D (in test.dwarf) + 0

0x00000001000d0c90: _OBJC_CLASS_$_NSMutableData_AppendUTF8_GHO92D (in test.dwarf) + 0

0x00000001000d0cb8: _OBJC_METACLASS_$_KSCrashReportSinkConsole (in test.dwarf) + 0

0x00000001000d0ce0: _OBJC_CLASS_$_KSCrashReportSinkConsole (in test.dwarf) + 0

0x00000001000d0d08: _OBJC_METACLASS_$_KSCrashMailProcess (in test.dwarf) + 0

0x00000001000d0d30: _OBJC_CLASS_$_KSCrashMailProcess (in test.dwarf) + 0

0x00000001000d0d58: _OBJC_CLASS_$_KSCrashReportSinkEMail (in test.dwarf) + 0

0x00000001000d0d80: _OBJC_METACLASS_$_KSCrashReportSinkEMail (in test.dwarf) + 0

0x00000001000d0da8: _OBJC_CLASS_$_KSCrashReportSinkQuincy (in test.dwarf) + 0

0x00000001000d0dd0: _OBJC_METACLASS_$_KSCrashReportSinkQuincy (in test.dwarf) + 0

0x00000001000d0df8: _OBJC_CLASS_$_KSCrashReportSinkHockey (in test.dwarf) + 0

0x00000001000d0e20: _OBJC_METACLASS_$_KSCrashReportSinkHockey (in test.dwarf) + 0

0x00000001000d0e48: _OBJC_CLASS_$_KSCrashReportSinkStandard (in test.dwarf) + 0

0x00000001000d0e70: _OBJC_METACLASS_$_KSCrashReportSinkStandard (in test.dwarf) + 0

0x00000001000d0e98: _OBJC_CLASS_$_KSCrashReportSinkVictory (in test.dwarf) + 0

0x00000001000d0ec0: _OBJC_METACLASS_$_KSCrashReportSinkVictory (in test.dwarf) + 0

0x00000001000d0ee8: _OBJC_CLASS_$_RollbarDTO (in test.dwarf) + 0

0x00000001000d0f10: _OBJC_METACLASS_$_RollbarDTO (in test.dwarf) + 0

0x00000001000d0f38: _OBJC_CLASS_$_RollbarEntity (in test.dwarf) + 0

0x00000001000d0f60: _OBJC_METACLASS_$_RollbarEntity (in test.dwarf) + 0

0x00000001000d0f88: _OBJC_METACLASS_$_RollbarEntityBuilder (in test.dwarf) + 0

0x00000001000d0fb0: _OBJC_CLASS_$_RollbarEntityBuilder (in test.dwarf) + 0

0x00000001000d0fd8: _OBJC_CLASS_$_RollbarReceptionist (in test.dwarf) + 0

0x00000001000d1000: _OBJC_METACLASS_$_RollbarReceptionist (in test.dwarf) + 0

0x00000001000d1028: _OBJC_CLASS_$_RollbarTaskDispatcher (in test.dwarf) + 0

0x00000001000d1050: _OBJC_METACLASS_$_RollbarTaskDispatcher (in test.dwarf) + 0

0x00000001000d1078: _OBJC_METACLASS_$_RollbarBundleUtil (in test.dwarf) + 0

0x00000001000d10a0: _OBJC_CLASS_$_RollbarBundleUtil (in test.dwarf) + 0

0x00000001000d10c8: _OBJC_CLASS_$_RollbarCachesDirectory (in test.dwarf) + 0

0x00000001000d10f0: _OBJC_METACLASS_$_RollbarCachesDirectory (in test.dwarf) + 0

0x00000001000d1118: _OBJC_CLASS_$_RollbarCrashReportUtil (in test.dwarf) + 0

0x00000001000d1140: _OBJC_METACLASS_$_RollbarCrashReportUtil (in test.dwarf) + 0

0x00000001000d1168: _OBJC_CLASS_$_RollbarFileIOUtil (in test.dwarf) + 0

0x00000001000d1190: _OBJC_METACLASS_$_RollbarFileIOUtil (in test.dwarf) + 0

0x00000001000d11b8: _OBJC_CLASS_$_RollbarFileReader (in test.dwarf) + 0

0x00000001000d11e0: _OBJC_METACLASS_$_RollbarFileReader (in test.dwarf) + 0

0x00000001000d1208: _OBJC_CLASS_$_RollbarFileWriter (in test.dwarf) + 0

0x00000001000d1230: _OBJC_METACLASS_$_RollbarFileWriter (in test.dwarf) + 0

0x00000001000d1258: _OBJC_METACLASS_$_RollbarHostingProcessUtil (in test.dwarf) + 0

0x00000001000d1280: _OBJC_CLASS_$_RollbarHostingProcessUtil (in test.dwarf) + 0

0x00000001000d12a8: _OBJC_METACLASS_$_RollbarMemoryStatsDescriptors (in test.dwarf) + 0

0x00000001000d12d0: _OBJC_CLASS_$_RollbarMemoryStatsDescriptors (in test.dwarf) + 0

0x00000001000d12f8: _OBJC_CLASS_$_RollbarMemoryUtil (in test.dwarf) + 0

0x00000001000d1320: _OBJC_METACLASS_$_RollbarMemoryUtil (in test.dwarf) + 0

0x00000001000d1348: _OBJC_METACLASS_$_RollbarOsUtil (in test.dwarf) + 0

0x00000001000d1370: _OBJC_CLASS_$_RollbarOsUtil (in test.dwarf) + 0

0x00000001000d1398: _OBJC_CLASS_$_RollbarPredicateBuilder (in test.dwarf) + 0

0x00000001000d13c0: _OBJC_METACLASS_$_RollbarPredicateBuilder (in test.dwarf) + 0

0x00000001000d13e8: _OBJC_METACLASS_$_RollbarTriStateFlagUtil (in test.dwarf) + 0

0x00000001000d1410: _OBJC_CLASS_$_RollbarTriStateFlagUtil (in test.dwarf) + 0

0x00000001000d1440: outlined variable #0 of Example.manualLogging() (in test.dwarf) + 0

0x00000001000d14a8: lazy protocol witness table cache variable for type iosAppSwiftApp and conformance iosAppSwiftApp (in test.dwarf) + 0

0x00000001000d14b0: lazy cache variable for type metadata for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000d14b8: lazy protocol witness table cache variable for type UIApplicationLaunchOptionsKey and conformance UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000d14c0: lazy protocol witness table cache variable for type UIApplicationLaunchOptionsKey and conformance UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000d14c8: lazy protocol witness table cache variable for type UIApplicationLaunchOptionsKey and conformance UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000d14d0: lazy protocol witness table cache variable for type UIApplicationLaunchOptionsKey and conformance UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000d14d8: demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, _ValueActionModifier<String>>, _PaddingLayout>, ScrollView<ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout>>)>> (in test.dwarf) + 0

0x00000001000d14e0: demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, _ValueActionModifier<String>>, _PaddingLayout>, ScrollView<ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout>>)>>, _PaddingLayout> (in test.dwarf) + 0

0x00000001000d14e8: demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, _ValueActionModifier<String>>, _PaddingLayout>, ScrollView<ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout>>)>> (in test.dwarf) + 0

0x00000001000d14f0: demangling cache variable for type metadata for ScrollView<ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout>> (in test.dwarf) + 0

0x00000001000d14f8: demangling cache variable for type metadata for Text.Case? (in test.dwarf) + 0

0x00000001000d1500: demangling cache variable for type metadata for TextField<Text> (in test.dwarf) + 0

0x00000001000d1508: demangling cache variable for type metadata for ModifiedContent<TextField<Text>, _EnvironmentKeyWritingModifier<Color?>> (in test.dwarf) + 0

0x00000001000d1510: demangling cache variable for type metadata for <<opaque return type of View.textFieldStyle<A>(_:)>>.0 (in test.dwarf) + 0

0x00000001000d1518: demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>> (in test.dwarf) + 0

0x00000001000d1520: demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>> (in test.dwarf) + 0

0x00000001000d1528: demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>> (in test.dwarf) + 0

0x00000001000d1530: demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, _ValueActionModifier<String>> (in test.dwarf) + 0

0x00000001000d1538: demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, _ValueActionModifier<String>>, _PaddingLayout> (in test.dwarf) + 0

0x00000001000d1540: lazy protocol witness table cache variable for type ModifiedContent<TextField<Text>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B> (in test.dwarf) + 0

0x00000001000d1548: lazy protocol witness table cache variable for type TextField<Text> and conformance TextField<A> (in test.dwarf) + 0

0x00000001000d1550: lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A> (in test.dwarf) + 0

0x00000001000d1558: demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?> (in test.dwarf) + 0

0x00000001000d1560: lazy protocol witness table cache variable for type RoundedBorderTextFieldStyle and conformance RoundedBorderTextFieldStyle (in test.dwarf) + 0

0x00000001000d1568: demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?> (in test.dwarf) + 0

0x00000001000d1570: demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout> (in test.dwarf) + 0

0x00000001000d1578: lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B> (in test.dwarf) + 0

0x00000001000d1580: lazy protocol witness table cache variable for type VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>> and conformance VStack<A> (in test.dwarf) + 0

0x00000001000d1588: demangling cache variable for type metadata for VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>> (in test.dwarf) + 0

0x00000001000d1590: demangling cache variable for type metadata for (ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, _ValueActionModifier<String>>, _PaddingLayout>, ScrollView<ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout>>) (in test.dwarf) + 0

0x00000001000d1598: demangling cache variable for type metadata for Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>> (in test.dwarf) + 0

0x00000001000d15a0: demangling cache variable for type metadata for Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>> (in test.dwarf) + 0

0x00000001000d15a8: demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>> (in test.dwarf) + 0

0x00000001000d15b0: demangling cache variable for type metadata for (Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>) (in test.dwarf) + 0

0x00000001000d15b8: demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout> (in test.dwarf) + 0

0x00000001000d15c0: demangling cache variable for type metadata for Button<Text> (in test.dwarf) + 0

0x00000001000d15c8: demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0 (in test.dwarf) + 0

0x00000001000d15d0: demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> (in test.dwarf) + 0

0x00000001000d15d8: lazy protocol witness table cache variable for type String and conformance String (in test.dwarf) + 0

0x00000001000d15e0: lazy protocol witness table cache variable for type Button<Text> and conformance Button<A> (in test.dwarf) + 0

0x00000001000d15e8: lazy protocol witness table cache variable for type BorderedButtonStyle and conformance BorderedButtonStyle (in test.dwarf) + 0

0x00000001000d15f0: demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>) (in test.dwarf) + 0

0x00000001000d15f8: demangling cache variable for type metadata for _ContiguousArrayStorage<Any> (in test.dwarf) + 0

0x00000001000d1600: demangling cache variable for type metadata for (Int, Int) (in test.dwarf) + 0

0x00000001000d1608: lazy protocol witness table cache variable for type Int and conformance Int (in test.dwarf) + 0

0x00000001000d1610: demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Int)> (in test.dwarf) + 0

0x00000001000d1618: demangling cache variable for type metadata for (String, Int) (in test.dwarf) + 0

0x00000001000d1620: demangling cache variable for type metadata for _DictionaryStorage<String, Int> (in test.dwarf) + 0

0x00000001000d1628: demangling cache variable for type metadata for _ContiguousArrayStorage<String> (in test.dwarf) + 0

0x00000001000d1630: demangling cache variable for type metadata for _ContiguousArrayStorage<Double> (in test.dwarf) + 0

0x00000001000d1638: lazy protocol witness table cache variable for type ExampleError and conformance ExampleError (in test.dwarf) + 0

0x00000001000d1640: demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>) (in test.dwarf) + 0

0x00000001000d1648: demangling cache variable for type metadata for String? (in test.dwarf) + 0

0x00000001000d1650: demangling cache variable for type metadata for Int? (in test.dwarf) + 0

0x00000001000d1658: demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String)> (in test.dwarf) + 0

0x00000001000d1660: demangling cache variable for type metadata for _DictionaryStorage<String, Any> (in test.dwarf) + 0

0x00000001000d1668: demangling cache variable for type metadata for (key: String, value: Any)? (in test.dwarf) + 0

0x00000001000d1670: demangling cache variable for type metadata for _DictionaryStorage<String, String> (in test.dwarf) + 0

0x00000001000d1678: demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)> (in test.dwarf) + 0

0x00000001000d1680: demangling cache variable for type metadata for (String, Any) (in test.dwarf) + 0

0x00000001000d1688: demangling cache variable for type metadata for Range<String.Index> (in test.dwarf) + 0

0x00000001000d1690: lazy protocol witness table cache variable for type Range<String.Index> and conformance Range<A> (in test.dwarf) + 0

0x00000001000d1698: lazy cache variable for type metadata for NSTextCheckingResult (in test.dwarf) + 0

0x00000001000d16a0: demangling cache variable for type metadata for _ContiguousArrayStorage<Substring> (in test.dwarf) + 0

0x00000001000d16a8: lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, _ValueActionModifier<String>>, _PaddingLayout>, ScrollView<ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B> (in test.dwarf) + 0

0x00000001000d16b0: lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textFieldStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, _ValueActionModifier<String>>, _PaddingLayout>, ScrollView<ModifiedContent<VStack<TupleView<(Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>, Group<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>)>>)>>, _PaddingLayout>>)>> and conformance VStack<A> (in test.dwarf) + 0

0x00000001000d16b8: lazy protocol witness table cache variable for type ExampleError and conformance ExampleError (in test.dwarf) + 0

0x00000001000d16c0: direct field offset for AppDelegate._accessToken (in test.dwarf) + 0

0x00000001000d16c8: _OBJC_METACLASS_$__TtC12Rollbar_Demo11AppDelegate (in test.dwarf) + 0

0x00000001000d16f0: __OBJC_PROTOCOL_$_UIApplicationDelegate (in test.dwarf) + 0

0x00000001000d1750: demangling cache variable for type metadata for UIApplicationDelegateAdaptor<AppDelegate> (in test.dwarf) + 0

0x00000001000d1758: value witness table for iosAppSwiftApp (in test.dwarf) + 0

0x00000001000d17b0: type metadata singleton initialization cache for iosAppSwiftApp (in test.dwarf) + 0

0x00000001000d17c0: lazy cache variable for type metadata for UIApplicationDelegateAdaptor<AppDelegate> (in test.dwarf) + 0

0x00000001000d17c8: full type metadata for iosAppSwiftApp (in test.dwarf) + 0

0x00000001000d17d0: type metadata for iosAppSwiftApp (in test.dwarf) + 0

0x00000001000d17e8: demangling cache variable for type metadata for WindowGroup<ContentView> (in test.dwarf) + 0

0x00000001000d17f0: lazy protocol witness table cache variable for type ContentView and conformance ContentView (in test.dwarf) + 0

0x00000001000d17f8: lazy protocol witness table cache variable for type WindowGroup<ContentView> and conformance WindowGroup<A> (in test.dwarf) + 0

0x00000001000d1800: lazy protocol witness table cache variable for type UIApplicationLaunchOptionsKey and conformance UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000d1808: demangling cache variable for type metadata for _ContiguousArrayStorage<(Any, Any)> (in test.dwarf) + 0

0x00000001000d1810: lazy cache variable for type metadata for NSMutableDictionary (in test.dwarf) + 0

0x00000001000d1820: __OBJC_PROTOCOL_$_NSObject (in test.dwarf) + 0

0x00000001000d1880: __OBJC_PROTOCOL_$_RollbarFacadeInitialization (in test.dwarf) + 0

0x00000001000d18e0: __OBJC_PROTOCOL_$_RollbarFacadeConfiguration (in test.dwarf) + 0

0x00000001000d1940: __OBJC_PROTOCOL_$_RollbarFacadeLogging (in test.dwarf) + 0

0x00000001000d19a0: __OBJC_PROTOCOL_$_RollbarFacadeTelemetry (in test.dwarf) + 0

0x00000001000d1a00: __OBJC_PROTOCOL_$_NSObject (in test.dwarf) + 0

0x00000001000d1a60: __OBJC_PROTOCOL_$_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000d1ac0: __OBJC_PROTOCOL_$_RollbarLogger (in test.dwarf) + 0

0x00000001000d1b20: _RollbarTelemetryEnabledContext (in test.dwarf) + 0

0x00000001000d1b28: _RollbarTelemetryCaptureLogContext (in test.dwarf) + 0

0x00000001000d1b30: one-time initialization token for requiredKeys (in test.dwarf) + 0

0x00000001000d1b38: one-time initialization token for requiredKeys (in test.dwarf) + 0

0x00000001000d1b40: one-time initialization token for empty (in test.dwarf) + 0

0x00000001000d1b48: outlined variable #0 of Dictionary<>.CrashType.init(rawValue:) (in test.dwarf) + 0

0x00000001000d1be8: outlined variable #0 of BinaryImage.init(rawValue:) (in test.dwarf) + 0

0x00000001000d1c30: outlined variable #0 of CPU.registers.getter (in test.dwarf) + 0

0x00000001000d1d68: outlined variable #1 of CPU.registers.getter (in test.dwarf) + 0

0x00000001000d1fc0: outlined variable #2 of CPU.registers.getter (in test.dwarf) + 0

0x00000001000d20e8: outlined variable #3 of CPU.registers.getter (in test.dwarf) + 0

0x00000001000d2260: outlined variable #0 of one-time initialization function for requiredKeys (in test.dwarf) + 0

0x00000001000d22c8: outlined variable #0 of one-time initialization function for requiredKeys (in test.dwarf) + 0

0x00000001000d2330: demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)> (in test.dwarf) + 0

0x00000001000d2340: static Dictionary<>.requiredKeys (in test.dwarf) + 0

0x00000001000d2348: _OBJC_METACLASS_$__TtC18RollbarCrashReport28RollbarCrashDiagnosticFilter (in test.dwarf) + 0

0x00000001000d2370: __OBJC_PROTOCOL_$_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000d23d0: _OBJC_METACLASS_$__TtC18RollbarCrashReport23SwiftDiagnosisFormatter (in test.dwarf) + 0

0x00000001000d2400: lazy protocol witness table cache variable for type String and conformance String (in test.dwarf) + 0

0x00000001000d2408: lazy protocol witness table cache variable for type Substring and conformance Substring (in test.dwarf) + 0

0x00000001000d2410: demangling cache variable for type metadata for Range<String.Index> (in test.dwarf) + 0

0x00000001000d2418: lazy protocol witness table cache variable for type Range<String.Index> and conformance Range<A> (in test.dwarf) + 0

0x00000001000d2420: lazy cache variable for type metadata for NSTextCheckingResult (in test.dwarf) + 0

0x00000001000d2428: demangling cache variable for type metadata for _ContiguousArrayStorage<Substring> (in test.dwarf) + 0

0x00000001000d2430: demangling cache variable for type metadata for _ContiguousArrayStorage<String> (in test.dwarf) + 0

0x00000001000d2438: demangling cache variable for type metadata for _ContiguousArrayStorage<String?> (in test.dwarf) + 0

0x00000001000d2440: demangling cache variable for type metadata for String? (in test.dwarf) + 0

0x00000001000d2448: demangling cache variable for type metadata for _ContiguousArrayStorage<ArraySlice<String>> (in test.dwarf) + 0

0x00000001000d2450: demangling cache variable for type metadata for ArraySlice<String> (in test.dwarf) + 0

0x00000001000d2458: demangling cache variable for type metadata for _ContiguousArrayStorage<BinaryImage> (in test.dwarf) + 0

0x00000001000d2460: demangling cache variable for type metadata for _ContiguousArrayStorage<Frame> (in test.dwarf) + 0

0x00000001000d2468: demangling cache variable for type metadata for _ContiguousArrayStorage<(key: String, value: Any)> (in test.dwarf) + 0

0x00000001000d2470: demangling cache variable for type metadata for (key: String, value: Any) (in test.dwarf) + 0

0x00000001000d2478: demangling cache variable for type metadata for _ContiguousArrayStorage<Any> (in test.dwarf) + 0

0x00000001000d2480: demangling cache variable for type metadata for _ContiguousArrayStorage<Result<Formatted<String>, NSError>> (in test.dwarf) + 0

0x00000001000d2488: demangling cache variable for type metadata for Result<Formatted<String>, NSError> (in test.dwarf) + 0

0x00000001000d2490: lazy protocol witness table cache variable for type [String] and conformance [A] (in test.dwarf) + 0

0x00000001000d2498: demangling cache variable for type metadata for [String] (in test.dwarf) + 0

0x00000001000d24a0: demangling cache variable for type metadata for [String : Any] (in test.dwarf) + 0

0x00000001000d24a8: demangling cache variable for type metadata for [[String : Any]] (in test.dwarf) + 0

0x00000001000d24b0: lazy protocol witness table cache variable for type Substring and conformance Substring (in test.dwarf) + 0

0x00000001000d24b8: demangling cache variable for type metadata for _ContiguousArrayStorage<StaticString> (in test.dwarf) + 0

0x00000001000d24c0: demangling cache variable for type metadata for (String, Any) (in test.dwarf) + 0

0x00000001000d24d0: demangling cache variable for type metadata for _DictionaryStorage<String, Any> (in test.dwarf) + 0

0x00000001000d24d8: demangling cache variable for type metadata for _ContiguousArrayStorage<[String : Any]> (in test.dwarf) + 0

0x00000001000d24e0: demangling cache variable for type metadata for _ContiguousArrayStorage<Diagnostic> (in test.dwarf) + 0

0x00000001000d24e8: demangling cache variable for type metadata for _ContiguousArrayStorage<Result<[String : Any], NSError>> (in test.dwarf) + 0

0x00000001000d24f0: demangling cache variable for type metadata for Result<[String : Any], NSError> (in test.dwarf) + 0

0x00000001000d2500: __OBJC_PROTOCOL_$_NSObject (in test.dwarf) + 0

0x00000001000d2560: demangling cache variable for type metadata for Formatted<String> (in test.dwarf) + 0

0x00000001000d2568: type metadata instantiation cache for Formatted (in test.dwarf) + 0

0x00000001000d25f0: static Dictionary<>.requiredKeys (in test.dwarf) + 0

0x00000001000d25f8: lazy cache variable for type metadata for NSString (in test.dwarf) + 0

0x00000001000d2600: _OBJC_METACLASS_$__TtC18RollbarCrashReport28RollbarCrashFormattingFilter (in test.dwarf) + 0

0x00000001000d2628: demangling cache variable for type metadata for Formatted<String>? (in test.dwarf) + 0

0x00000001000d2630: demangling cache variable for type metadata for _ContiguousArrayStorage<Formatted<String>?> (in test.dwarf) + 0

0x00000001000d2638: demangling cache variable for type metadata for [Formatted<String>] (in test.dwarf) + 0

0x00000001000d2640: lazy protocol witness table cache variable for type [Formatted<String>] and conformance [A] (in test.dwarf) + 0

0x00000001000d2650: demangling cache variable for type metadata for JoinedSequence<[String]> (in test.dwarf) + 0

0x00000001000d2658: lazy protocol witness table cache variable for type JoinedSequence<[String]> and conformance JoinedSequence<A> (in test.dwarf) + 0

0x00000001000d2660: lazy protocol witness table cache variable for type Int and conformance Int (in test.dwarf) + 0

0x00000001000d2670: lazy protocol witness table cache variable for type [String] and conformance [A] (in test.dwarf) + 0

0x00000001000d2678: demangling cache variable for type metadata for _ContiguousArrayStorage<Character> (in test.dwarf) + 0

0x00000001000d2680: demangling cache variable for type metadata for Repeated<String> (in test.dwarf) + 0

0x00000001000d2688: lazy protocol witness table cache variable for type Repeated<String> and conformance Repeated<A> (in test.dwarf) + 0

0x00000001000d2690: lazy protocol witness table cache variable for type UInt and conformance UInt (in test.dwarf) + 0

0x00000001000d2698: demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Address> (in test.dwarf) + 0

0x00000001000d26a0: demangling cache variable for type metadata for (key: AnyHashable, value: Address)? (in test.dwarf) + 0

0x00000001000d26a8: demangling cache variable for type metadata for _DictionaryStorage<String, Address> (in test.dwarf) + 0

0x00000001000d26b0: demangling cache variable for type metadata for Any? (in test.dwarf) + 0

0x00000001000d26b8: demangling cache variable for type metadata for (URL?, URL?) (in test.dwarf) + 0

0x00000001000d26c0: demangling cache variable for type metadata for URL? (in test.dwarf) + 0

0x00000001000d26c8: lazy protocol witness table cache variable for type URL and conformance URL (in test.dwarf) + 0

0x00000001000d26d0: demangling cache variable for type metadata for _ContiguousArrayStorage<Range<Int>> (in test.dwarf) + 0

0x00000001000d26d8: lazy protocol witness table cache variable for type Diagnostic and conformance Diagnostic (in test.dwarf) + 0

0x00000001000d26e0: lazy protocol witness table cache variable for type [String] and conformance [A] (in test.dwarf) + 0

0x00000001000d26f0: demangling cache variable for type metadata for Timestamp? (in test.dwarf) + 0

0x00000001000d26f8: demangling cache variable for type metadata for UUID? (in test.dwarf) + 0

0x00000001000d2700: demangling cache variable for type metadata for _ContiguousArrayStorage<Formatted<String>> (in test.dwarf) + 0

0x00000001000d2708: demangling cache variable for type metadata for KeyedEncodingContainer<Address.BinaryCodingKeys> (in test.dwarf) + 0

0x00000001000d2710: demangling cache variable for type metadata for KeyedEncodingContainer<Address.MemoryCodingKeys> (in test.dwarf) + 0

0x00000001000d2718: demangling cache variable for type metadata for KeyedEncodingContainer<Address.CodingKeys> (in test.dwarf) + 0

0x00000001000d2720: lazy protocol witness table cache variable for type Address.CodingKeys and conformance Address.CodingKeys (in test.dwarf) + 0

0x00000001000d2728: lazy protocol witness table cache variable for type Address.BinaryCodingKeys and conformance Address.BinaryCodingKeys (in test.dwarf) + 0

0x00000001000d2730: lazy protocol witness table cache variable for type Address.MemoryCodingKeys and conformance Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000d2738: lazy protocol witness table cache variable for type Address and conformance Address (in test.dwarf) + 0

0x00000001000d2740: lazy protocol witness table cache variable for type Address.BinaryCodingKeys and conformance Address.BinaryCodingKeys (in test.dwarf) + 0

0x00000001000d2748: lazy protocol witness table cache variable for type Address.MemoryCodingKeys and conformance Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000d2750: lazy protocol witness table cache variable for type Address.CodingKeys and conformance Address.CodingKeys (in test.dwarf) + 0

0x00000001000d2758: lazy protocol witness table cache variable for type Address.MemoryCodingKeys and conformance Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000d2760: lazy protocol witness table cache variable for type Address.MemoryCodingKeys and conformance Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000d2768: lazy protocol witness table cache variable for type Address.BinaryCodingKeys and conformance Address.BinaryCodingKeys (in test.dwarf) + 0

0x00000001000d2770: lazy protocol witness table cache variable for type Address.BinaryCodingKeys and conformance Address.BinaryCodingKeys (in test.dwarf) + 0

0x00000001000d2778: lazy protocol witness table cache variable for type Address.CodingKeys and conformance Address.CodingKeys (in test.dwarf) + 0

0x00000001000d2780: lazy protocol witness table cache variable for type Address.CodingKeys and conformance Address.CodingKeys (in test.dwarf) + 0

0x00000001000d2788: demangling cache variable for type metadata for KeyedDecodingContainer<Address.BinaryCodingKeys> (in test.dwarf) + 0

0x00000001000d2790: demangling cache variable for type metadata for KeyedDecodingContainer<Address.MemoryCodingKeys> (in test.dwarf) + 0

0x00000001000d2798: demangling cache variable for type metadata for KeyedDecodingContainer<Address.CodingKeys> (in test.dwarf) + 0

0x00000001000d27a0: demangling cache variable for type metadata for (@thick Any.Type, DecodingError.Context) (in test.dwarf) + 0

0x00000001000d27a8: value witness table for BinaryImage (in test.dwarf) + 0

0x00000001000d2800: type metadata singleton initialization cache for BinaryImage (in test.dwarf) + 0

0x00000001000d2810: full type metadata for BinaryImage (in test.dwarf) + 0

0x00000001000d2818: type metadata for BinaryImage (in test.dwarf) + 0

0x00000001000d2850: lazy protocol witness table cache variable for type Int32 and conformance Int32 (in test.dwarf) + 0

0x00000001000d2858: demangling cache variable for type metadata for _ContiguousArrayStorage<(mask: Int32, name: String)> (in test.dwarf) + 0

0x00000001000d2860: demangling cache variable for type metadata for (mask: Int32, name: String) (in test.dwarf) + 0

0x00000001000d2868: _OBJC_METACLASS_$__TtC18RollbarCrashReportP33_7FFAE222EEA03028C0A0EA7AEC39C83716ISO8601Formatter (in test.dwarf) + 0

0x00000001000d2890: _OBJC_METACLASS_$__TtC18RollbarCrashReportP33_7FFAE222EEA03028C0A0EA7AEC39C83716RFC3339Formatter (in test.dwarf) + 0

0x00000001000d28b8: lazy protocol witness table cache variable for type Timestamp and conformance Timestamp (in test.dwarf) + 0

0x00000001000d28c0: lazy protocol witness table cache variable for type Date and conformance Date (in test.dwarf) + 0

0x00000001000d28c8: lazy protocol witness table cache variable for type Date and conformance Date (in test.dwarf) + 0

0x00000001000d28d0: lazy protocol witness table cache variable for type Date and conformance Date (in test.dwarf) + 0

0x00000001000d28d8: demangling cache variable for type metadata for KeyedDecodingContainer<Timestamp.CodingKeys> (in test.dwarf) + 0

0x00000001000d28e0: lazy protocol witness table cache variable for type Timestamp.CodingKeys and conformance Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000d28e8: lazy protocol witness table cache variable for type Date and conformance Date (in test.dwarf) + 0

0x00000001000d28f0: demangling cache variable for type metadata for KeyedEncodingContainer<Timestamp.CodingKeys> (in test.dwarf) + 0

0x00000001000d28f8: lazy protocol witness table cache variable for type Date and conformance Date (in test.dwarf) + 0

0x00000001000d2900: demangling cache variable for type metadata for TimeZone? (in test.dwarf) + 0

0x00000001000d2908: value witness table for Timestamp (in test.dwarf) + 0

0x00000001000d2960: type metadata singleton initialization cache for Timestamp (in test.dwarf) + 0

0x00000001000d2970: full type metadata for Timestamp (in test.dwarf) + 0

0x00000001000d2978: type metadata for Timestamp (in test.dwarf) + 0

0x00000001000d2990: lazy protocol witness table cache variable for type Timestamp.CodingKeys and conformance Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000d2998: lazy protocol witness table cache variable for type Timestamp.CodingKeys and conformance Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000d29a0: lazy protocol witness table cache variable for type Timestamp.CodingKeys and conformance Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000d29a8: _g_monitoring (in test.dwarf) + 0

0x00000001000d29ac: _monitorCachedData.quickPollCount (in test.dwarf) + 0

0x00000001000d29b0: _kscrashreport_setUserInfoJSON.mutex (in test.dwarf) + 0

0x00000001000d29f0: _datePaths (in test.dwarf) + 0

0x00000001000d3030: _demanglePaths (in test.dwarf) + 0

0x00000001000d3cb0: _versionPaths (in test.dwarf) + 0

0x00000001000d42f0: _g_mutex (in test.dwarf) + 0

0x00000001000d4330: _g_maxReportCount (in test.dwarf) + 0

0x00000001000d4338: _kscm_appstate_getAPI.api (in test.dwarf) + 0

0x00000001000d4350: kscm_cppexception_getAPI::api (in test.dwarf) + 0

0x00000001000d4368: _kscm_deadlock_getAPI.api (in test.dwarf) + 0

0x00000001000d4380: _kscm_machexception_getAPI.api (in test.dwarf) + 0

0x00000001000d4398: _kscm_nsexception_getAPI.api (in test.dwarf) + 0

0x00000001000d43b0: _kscm_signal_getAPI.api (in test.dwarf) + 0

0x00000001000d43c8: _kscm_system_getAPI.api (in test.dwarf) + 0

0x00000001000d43e0: _kscm_user_getAPI.api (in test.dwarf) + 0

0x00000001000d43f8: _kscm_zombie_getAPI.api (in test.dwarf) + 0

0x00000001000d4410: _kslog_setLogFilename.fd (in test.dwarf) + 0

0x00000001000d4414: _g_fd (in test.dwarf) + 0

0x00000001000d4418: _g_classData (in test.dwarf) + 0

0x00000001000d4718: __OBJC_PROTOCOL_$_NSObject (in test.dwarf) + 0

0x00000001000d4778: __OBJC_PROTOCOL_$_UIAlertViewDelegate (in test.dwarf) + 0

0x00000001000d47d8: __OBJC_PROTOCOL_$_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000d4838: __OBJC_PROTOCOL_$_NSObject (in test.dwarf) + 0

0x00000001000d4898: __OBJC_PROTOCOL_$_KSCrashReportFilter (in test.dwarf) + 0

0x00000001000d48f8: __OBJC_PROTOCOL_$_MFMailComposeViewControllerDelegate (in test.dwarf) + 0

0x00000001000d4958: __OBJC_PROTOCOL_$_NSObject (in test.dwarf) + 0

0x00000001000d49b8: __OBJC_PROTOCOL_$_RollbarJSONSupport (in test.dwarf) + 0

0x00000001000d4a18: __OBJC_PROTOCOL_$_NSCopying (in test.dwarf) + 0

0x00000001000d4a78: __OBJC_PROTOCOL_$_NSMutableCopying (in test.dwarf) + 0

0x00000001000d4ad8: __swift_FORCE_LOAD_$_swiftCompatibility56 (in test.dwarf) + 0

0x00000001000d4ad9: __swift_FORCE_LOAD_$_swiftCompatibilityConcurrency (in test.dwarf) + 0

0x00000001000d4ae0: _Swift56ConcurrencyOverrides (in test.dwarf) + 0

0x00000001000d4c70: _Swift56RuntimeOverrides (in test.dwarf) + 0

0x00000001000d4d20: metadata instantiation cache for protocol conformance descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000d4da0: metadata instantiation cache for protocol conformance descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000d4e20: metadata instantiation cache for protocol conformance descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000d4ea0: metadata instantiation cache for protocol conformance descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000d4f20: metadata instantiation cache for protocol conformance descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000d4fa0: metadata instantiation cache for protocol conformance descriptor for UIApplicationLaunchOptionsKey (in test.dwarf) + 0

0x00000001000d5020: metadata instantiation cache for protocol conformance descriptor for ContentView (in test.dwarf) + 0

0x00000001000d50d0: metadata instantiation cache for protocol conformance descriptor for ExampleError (in test.dwarf) + 0

0x00000001000d5150: metadata instantiation cache for protocol conformance descriptor for ExampleError (in test.dwarf) + 0

0x00000001000d51d0: metadata instantiation cache for protocol conformance descriptor for ExampleError (in test.dwarf) + 0

0x00000001000d5250: metadata instantiation cache for protocol conformance descriptor for iosAppSwiftApp (in test.dwarf) + 0

0x00000001000d52d0: _configurationDirectory (in test.dwarf) + 0

0x00000001000d52d8: _configurationFilePath (in test.dwarf) + 0

0x00000001000d52e0: _isDebuggerAttached.attached (in test.dwarf) + 0

0x00000001000d52e8: _isDebuggerAttached.token (in test.dwarf) + 0

0x00000001000d52f0: _sharedInstance.singleton (in test.dwarf) + 0

0x00000001000d52f8: _sharedInstance.onceToken (in test.dwarf) + 0

0x00000001000d5300: _transmittedPayloadsFilePath (in test.dwarf) + 0

0x00000001000d5308: _droppedPayloadsFilePath (in test.dwarf) + 0

0x00000001000d5310: _queue (in test.dwarf) + 0

0x00000001000d5318: _fileQueue (in test.dwarf) + 0

0x00000001000d5320: _captureLog (in test.dwarf) + 0

0x00000001000d5328: _sharedInstance.singleton (in test.dwarf) + 0

0x00000001000d5330: _sharedInstance.onceToken (in test.dwarf) + 0

0x00000001000d5338: _singleton (in test.dwarf) + 0

0x00000001000d5340: _sharedInstance.onceToken (in test.dwarf) + 0

0x00000001000d5348: _start.onceToken (in test.dwarf) + 0

0x00000001000d5350: _attemptMemoryStatsCollection.nextCollection (in test.dwarf) + 0

0x00000001000d5358: _sharedInstance.singleton (in test.dwarf) + 0

0x00000001000d5360: _sharedInstance.onceToken (in test.dwarf) + 0

0x00000001000d5370: metadata instantiation cache for protocol conformance descriptor for Diagnostic (in test.dwarf) + 0

0x00000001000d53f0: metadata instantiation cache for protocol conformance descriptor for Diagnostic (in test.dwarf) + 0

0x00000001000d5480: metadata instantiation cache for protocol conformance descriptor for Formatted<A> (in test.dwarf) + 0

0x00000001000d5500: metadata instantiation cache for protocol conformance descriptor for Address (in test.dwarf) + 0

0x00000001000d5580: metadata instantiation cache for protocol conformance descriptor for Address (in test.dwarf) + 0

0x00000001000d5600: metadata instantiation cache for protocol conformance descriptor for Address (in test.dwarf) + 0

0x00000001000d5680: metadata instantiation cache for protocol conformance descriptor for Address (in test.dwarf) + 0

0x00000001000d5700: metadata instantiation cache for protocol conformance descriptor for Address (in test.dwarf) + 0

0x00000001000d5780: metadata instantiation cache for protocol conformance descriptor for Address (in test.dwarf) + 0

0x00000001000d5800: metadata instantiation cache for protocol conformance descriptor for Address.BinaryCodingKeys (in test.dwarf) + 0

0x00000001000d5880: metadata instantiation cache for protocol conformance descriptor for Address.BinaryCodingKeys (in test.dwarf) + 0

0x00000001000d5900: metadata instantiation cache for protocol conformance descriptor for Address.BinaryCodingKeys (in test.dwarf) + 0

0x00000001000d5980: metadata instantiation cache for protocol conformance descriptor for Address.BinaryCodingKeys (in test.dwarf) + 0

0x00000001000d5a00: metadata instantiation cache for protocol conformance descriptor for Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000d5a80: metadata instantiation cache for protocol conformance descriptor for Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000d5b00: metadata instantiation cache for protocol conformance descriptor for Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000d5b80: metadata instantiation cache for protocol conformance descriptor for Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000d5c00: metadata instantiation cache for protocol conformance descriptor for Address.CodingKeys (in test.dwarf) + 0

0x00000001000d5c80: metadata instantiation cache for protocol conformance descriptor for Address.CodingKeys (in test.dwarf) + 0

0x00000001000d5d00: metadata instantiation cache for protocol conformance descriptor for Address.CodingKeys (in test.dwarf) + 0

0x00000001000d5d80: metadata instantiation cache for protocol conformance descriptor for Address.CodingKeys (in test.dwarf) + 0

0x00000001000d5e00: metadata instantiation cache for protocol conformance descriptor for Address.MemoryCodingKeys (in test.dwarf) + 0

0x00000001000d5e80: metadata instantiation cache for protocol conformance descriptor for Address.BinaryCodingKeys (in test.dwarf) + 0

0x00000001000d5f00: metadata instantiation cache for protocol conformance descriptor for Address.CodingKeys (in test.dwarf) + 0

0x00000001000d5f80: metadata instantiation cache for protocol conformance descriptor for BinaryImage (in test.dwarf) + 0

0x00000001000d6000: metadata instantiation cache for protocol conformance descriptor for CPU (in test.dwarf) + 0

0x00000001000d6080: metadata instantiation cache for protocol conformance descriptor for Frame (in test.dwarf) + 0

0x00000001000d6100: metadata instantiation cache for protocol conformance descriptor for Timestamp (in test.dwarf) + 0

0x00000001000d6180: metadata instantiation cache for protocol conformance descriptor for Timestamp (in test.dwarf) + 0

0x00000001000d6200: metadata instantiation cache for protocol conformance descriptor for Timestamp (in test.dwarf) + 0

0x00000001000d6280: metadata instantiation cache for protocol conformance descriptor for Timestamp (in test.dwarf) + 0

0x00000001000d6300: metadata instantiation cache for protocol conformance descriptor for Timestamp (in test.dwarf) + 0

0x00000001000d6380: metadata instantiation cache for protocol conformance descriptor for Timestamp (in test.dwarf) + 0

0x00000001000d6400: metadata instantiation cache for protocol conformance descriptor for Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000d6480: metadata instantiation cache for protocol conformance descriptor for Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000d6500: metadata instantiation cache for protocol conformance descriptor for Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000d6580: metadata instantiation cache for protocol conformance descriptor for Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000d6600: metadata instantiation cache for protocol conformance descriptor for Timestamp.CodingKeys (in test.dwarf) + 0

0x00000001000d6680: _g_crashHandlerData (in test.dwarf) + 0

0x00000001000d6688: _sharedInstance.sharedInstance (in test.dwarf) + 0

0x00000001000d6690: _sharedInstance.onceToken (in test.dwarf) + 0

0x00000001000d6698: _sharedInstance.sharedInstance (in test.dwarf) + 0

0x00000001000d66a0: _sharedInstance.onceToken (in test.dwarf) + 0

0x00000001000d66a8: _sharedInstance.sharedInstance (in test.dwarf) + 0

0x00000001000d66b0: _sharedInstance.onceToken (in test.dwarf) + 0

0x00000001000d66b8: _sharedInstance.sharedInstance.97 (in test.dwarf) + 0

0x00000001000d66c0: _sharedInstance.onceToken.98 (in test.dwarf) + 0

0x00000001000d66c8: _sharedInstance.sharedInstance (in test.dwarf) + 0

0x00000001000d66d0: _sharedInstance.onceToken (in test.dwarf) + 0

0x00000001000d66d8: _sharedInstance.sharedInstance (in test.dwarf) + 0

0x00000001000d66e0: _sharedInstance.onceToken (in test.dwarf) + 0

0x00000001000d66e8: _sharedInstance.sharedInstance (in test.dwarf) + 0

0x00000001000d66f0: _sharedInstance.onceToken (in test.dwarf) + 0

0x00000001000d66f8: _g_installed (in test.dwarf) + 0

0x00000001000d66f9: _g_consoleLogPath (in test.dwarf) + 0

0x00000001000d68ed: _g_shouldPrintPreviousLog (in test.dwarf) + 0

0x00000001000d68f0: _g_reportWrittenCallback (in test.dwarf) + 0

0x00000001000d68f8: _g_shouldAddConsoleLogToReport (in test.dwarf) + 0

0x00000001000d68fc: _g_lastApplicationState (in test.dwarf) + 0

0x00000001000d6900: _g_lastCrashReportFilePath (in test.dwarf) + 0

0x00000001000d6af8: _g_hasThreadStarted (in test.dwarf) + 0

0x00000001000d6afc: _g_pollingIntervalInSeconds (in test.dwarf) + 0

0x00000001000d6b00: _g_cacheThread (in test.dwarf) + 0

0x00000001000d6b08: _g_semaphoreCount (in test.dwarf) + 0

0x00000001000d6b0c: _g_searchQueueNames (in test.dwarf) + 0

0x00000001000d6b10: _g_allThreadsCount (in test.dwarf) + 0

0x00000001000d6b18: _g_allMachThreads (in test.dwarf) + 0

0x00000001000d6b20: _g_allThreadNames (in test.dwarf) + 0

0x00000001000d6b28: _g_allQueueNames (in test.dwarf) + 0

0x00000001000d6b30: _updateThreadList.allThreadNames (in test.dwarf) + 0

0x00000001000d6b38: _updateThreadList.allQueueNames (in test.dwarf) + 0

0x00000001000d6b40: _g_allPThreads (in test.dwarf) + 0

0x00000001000d6b48: _kscrashreport_writeRecrashReport.tempPath (in test.dwarf) + 0

0x00000001000d6d40: _g_introspectionRules.0 (in test.dwarf) + 0

0x00000001000d6d48: _g_introspectionRules.1 (in test.dwarf) + 0

0x00000001000d6d50: _g_introspectionRules.2 (in test.dwarf) + 0

0x00000001000d6d58: _g_userInfoJSON (in test.dwarf) + 0

0x00000001000d6d60: _g_userSectionWriteCallback (in test.dwarf) + 0

0x00000001000d6d68: _g_appName (in test.dwarf) + 0

0x00000001000d6d70: _g_reportsPath (in test.dwarf) + 0

0x00000001000d6d78: _g_nextUniqueIDHigh (in test.dwarf) + 0

0x00000001000d6d80: _g_nextUniqueIDLow (in test.dwarf) + 0

0x00000001000d6d88: _g_onExceptionEvent (in test.dwarf) + 0

0x00000001000d6d90: _kscm_setActiveMonitors.hasWarned (in test.dwarf) + 0

0x00000001000d6d91: _g_requiresAsyncSafety (in test.dwarf) + 0

0x00000001000d6d94: _g_activeMonitors (in test.dwarf) + 0

0x00000001000d6d98: _g_handlingFatalException (in test.dwarf) + 0

0x00000001000d6d99: _g_crashedDuringExceptionHandling (in test.dwarf) + 0

0x00000001000d6da0: _g_stateFilePath (in test.dwarf) + 0

0x00000001000d6da8: _g_isEnabled (in test.dwarf) + 0

0x00000001000d6db0: _g_state (in test.dwarf) + 0

0x00000001000d6df0: __cxa_throw::orig_cxa_throw (in test.dwarf) + 0

0x00000001000d6df8: g_cxaSwapEnabled (in test.dwarf) + 0

0x00000001000d6df9: g_captureNextStackTrace (in test.dwarf) + 0

0x00000001000d6e00: g_stackCursor (in test.dwarf) + 0

0x00000001000d7168: g_isEnabled (in test.dwarf) + 0

0x00000001000d7169: g_eventID (in test.dwarf) + 0

0x00000001000d7190: g_originalTerminateHandler (in test.dwarf) + 0

0x00000001000d7198: initialize()::isInitialized (in test.dwarf) + 0

0x00000001000d71a0: g_monitorContext (in test.dwarf) + 0

0x00000001000d7380: _g_mainQueueThread (in test.dwarf) + 0

0x00000001000d7388: _g_monitorContext (in test.dwarf) + 0

0x00000001000d7568: _g_watchdogInterval (in test.dwarf) + 0

0x00000001000d7570: _g_monitor (in test.dwarf) + 0

0x00000001000d7578: _g_isEnabled (in test.dwarf) + 0

0x00000001000d7579: _initialize.isInitialized (in test.dwarf) + 0

0x00000001000d7580: _g_isEnabled (in test.dwarf) + 0

0x00000001000d7581: _g_primaryEventID (in test.dwarf) + 0

0x00000001000d75a6: _g_secondaryEventID (in test.dwarf) + 0

0x00000001000d75cc: _g_previousExceptionPorts (in test.dwarf) + 0

0x00000001000d76b0: _g_exceptionPort (in test.dwarf) + 0

0x00000001000d76b8: _g_secondaryPThread (in test.dwarf) + 0

0x00000001000d76c0: _g_secondaryMachThread (in test.dwarf) + 0

0x00000001000d76c8: _g_primaryPThread (in test.dwarf) + 0

0x00000001000d76d0: _g_primaryMachThread (in test.dwarf) + 0

0x00000001000d76d4: _g_isHandlingCrash (in test.dwarf) + 0

0x00000001000d76d8: _g_monitorContext (in test.dwarf) + 0

0x00000001000d78b8: _g_stackCursor (in test.dwarf) + 0

0x00000001000d7c20: _g_isEnabled (in test.dwarf) + 0

0x00000001000d7c28: _g_previousUncaughtExceptionHandler (in test.dwarf) + 0

0x00000001000d7c30: _g_monitorContext (in test.dwarf) + 0

0x00000001000d7e10: _g_isEnabled (in test.dwarf) + 0

0x00000001000d7e11: _g_eventID (in test.dwarf) + 0

0x00000001000d7e38: _g_signalStack (in test.dwarf) + 0

0x00000001000d7e50: _g_previousSignalHandlers (in test.dwarf) + 0

0x00000001000d7e58: _g_stackCursor (in test.dwarf) + 0

0x00000001000d81c0: _g_monitorContext (in test.dwarf) + 0

0x00000001000d83a0: _g_isEnabled (in test.dwarf) + 0

0x00000001000d83a1: _initialize.isInitialized (in test.dwarf) + 0

0x00000001000d83a8: _g_systemData.0 (in test.dwarf) + 0

0x00000001000d83b0: _g_systemData.1 (in test.dwarf) + 0

0x00000001000d83b8: _g_systemData.2 (in test.dwarf) + 0

0x00000001000d83c0: _g_systemData.3 (in test.dwarf) + 0

0x00000001000d83c8: _g_systemData.4 (in test.dwarf) + 0

0x00000001000d83d0: _g_systemData.5 (in test.dwarf) + 0

0x00000001000d83d8: _g_systemData.6 (in test.dwarf) + 0

0x00000001000d83e0: _g_systemData.7 (in test.dwarf) + 0

0x00000001000d83e8: _g_systemData.8 (in test.dwarf) + 0

0x00000001000d83f0: _g_systemData.9 (in test.dwarf) + 0

0x00000001000d83f8: _g_systemData.10 (in test.dwarf) + 0

0x00000001000d8400: _g_systemData.11 (in test.dwarf) + 0

0x00000001000d8408: _g_systemData.12 (in test.dwarf) + 0

0x00000001000d8410: _g_systemData.13 (in test.dwarf) + 0

0x00000001000d8418: _g_systemData.14 (in test.dwarf) + 0

0x00000001000d8420: _g_systemData.15 (in test.dwarf) + 0

0x00000001000d8428: _g_systemData.16 (in test.dwarf) + 0

0x00000001000d8430: _g_systemData.17 (in test.dwarf) + 0

0x00000001000d8438: _g_systemData.18 (in test.dwarf) + 0

0x00000001000d8440: _g_systemData.19 (in test.dwarf) + 0

0x00000001000d8448: _g_systemData.20 (in test.dwarf) + 0

0x00000001000d8450: _g_systemData.21 (in test.dwarf) + 0

0x00000001000d8458: _g_systemData.22 (in test.dwarf) + 0

0x00000001000d8460: _g_systemData.23 (in test.dwarf) + 0

0x00000001000d8468: _g_systemData.24 (in test.dwarf) + 0

0x00000001000d8470: _g_systemData.25 (in test.dwarf) + 0

0x00000001000d8478: _g_systemData.26 (in test.dwarf) + 0

0x00000001000d8480: _g_systemData.27 (in test.dwarf) + 0

0x00000001000d8488: _g_systemData.28 (in test.dwarf) + 0

0x00000001000d8490: _g_isEnabled (in test.dwarf) + 0

0x00000001000d8498: _g_zombieCache (in test.dwarf) + 0

0x00000001000d84a0: _g_zombieHashMask (in test.dwarf) + 0

0x00000001000d84a1: _g_isEnabled (in test.dwarf) + 0

0x00000001000d84a8: _g_lastDeallocedException (in test.dwarf) + 0

0x00000001000d88a0: _g_originalDealloc_NSObject (in test.dwarf) + 0

0x00000001000d88a8: _g_originalDealloc_NSProxy (in test.dwarf) + 0

0x00000001000d88b0: _g_cxa_originals (in test.dwarf) + 0

0x00000001000d88b8: _g_cxa_originals_capacity (in test.dwarf) + 0

0x00000001000d88c0: _g_cxa_originals_count (in test.dwarf) + 0

0x00000001000d88c8: _g_cxa_throw_handler (in test.dwarf) + 0

0x00000001000d88d0: _g_logFilename (in test.dwarf) + 0

0x00000001000d8cd0: _g_reservedThreadsCount (in test.dwarf) + 0

0x00000001000d8cd8: _g_reservedThreads (in test.dwarf) + 0

0x00000001000d8d28: _g_memoryTestBuffer (in test.dwarf) + 0

0x00000001000db528: _g_dateFormatter (in test.dwarf) + 0

0x00000001000db530: _g_rfc3339DateFormatter (in test.dwarf) + 0

0x00000001000db538: _g_registerOrders (in test.dwarf) + 0

0x00000001000db540: _quincyInstallUUID.installUUID (in test.dwarf) + 0

0x00000001000db548: _quincyInstallUUID.predicate (in test.dwarf) + 0

0x00000001000db550: _singleton (in test.dwarf) + 0

0x00000001000db558: _sharedInstance.onceToken (in test.dwarf) + 0

0x00000001000db560: _formatter (in test.dwarf) + 0

0x00000001000db568: _getPhysicalMemoryInBytes.bytesTotal (in test.dwarf) + 0

0x00000001000db570: _getPhysicalMemoryInMBs.result (in test.dwarf) + 0

0x00000001000db578: swift::swift_task_escalateBackdeploy56(swift::AsyncTask*, swift::JobPriority)::$_2::operator()() const::TheLazy (in test.dwarf) + 0

0x00000001000db588: swift::StatusRecordLockLock (in test.dwarf) + 0

0x00000001000db590: swift_voucher_needs_adopt(voucher_s*)::{lambda()#1}::operator()() const::TheLazy (in test.dwarf) + 0

0x00000001000db5a0: swift::_swift_tsan_acquire(void*)::$_0::operator()() const::TheLazy (in test.dwarf) + 0

0x00000001000db5b0: swift::_swift_tsan_release(void*)::$_1::operator()() const::TheLazy (in test.dwarf) + 0

0x00000001000db5c0: swift::swift_task_enterThreadLocalContextBackdeploy56(char*)::$_0::operator()() const::TheLazy (in test.dwarf) + 0

0x00000001000db5d0: swift::swift_task_exitThreadLocalContextBackdeploy56(char*)::$_1::operator()() const::TheLazy (in test.dwarf) + 0

0x00000001000db5e0: static UUID.empty (in test.dwarf) + 0

